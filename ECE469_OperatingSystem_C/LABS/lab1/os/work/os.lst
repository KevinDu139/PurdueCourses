 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 90112
    3                      ; Data size: 33176
    4                      ; Text size: 37380
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0xb000
    8                      ; Compiled by GCC
    9  0000b000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _DisableIntrs
   81  000010d4          	.global _DisableIntrs
   82  000010d4          	_DisableIntrs:
   83                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
   88  000010e4  afa20000	sw	0(r29),r2
   89  000010e8  23bdfff8	addi	r29,r29,#-8
   90  000010ec  2002000f	addi	r2,r0,#15
   91  000010f0  afa20000	sw	(r29),r2
   92  000010f4  0c008fac	jal	_SetIntrs
   93  000010f8  54000000	nop; not filled.
   94  000010fc  23bd0008	addi	r29,r29,#8
   95  00001100  8fa20000	lw	r2,0(r29)
   96  00001104  8fdffff8	lw	r31,-8(r30)
   97  00001108  001ee820	add	r29,r0,r30
   98  0000110c  8fdefffc	lw	r30,-4(r30)
   99  00001110  4be00000	jr	r31
  100  00001114  54000000	nop
  101  00001118          	.endproc _DisableIntrs
  102  00001118          	.align 2
  103  00001118          	.proc _EnableIntrs
  104  00001118          	.global _EnableIntrs
  105  00001118          	_EnableIntrs:
  106                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
  107  00001118  afbefffc	sw	-4(r29),r30; push fp
  108  0000111c  001df020	add	r30,r0,r29; fp = sp
  109  00001120  afbffff8	sw	-8(r29),r31; push ret addr
  110  00001124  2fbd0010	subui	r29,r29,#16; alloc local storage
  111  00001128  afa20000	sw	0(r29),r2
  112  0000112c  23bdfff8	addi	r29,r29,#-8
  113  00001130  20020000	addi	r2,r0,#0
  114  00001134  afa20000	sw	(r29),r2
  115  00001138  0c008f68	jal	_SetIntrs
  116  0000113c  54000000	nop; not filled.
  117  00001140  23bd0008	addi	r29,r29,#8
  118  00001144  8fa20000	lw	r2,0(r29)
  119  00001148  8fdffff8	lw	r31,-8(r30)
  120  0000114c  001ee820	add	r29,r0,r30
  121  00001150  8fdefffc	lw	r30,-4(r30)
  122  00001154  4be00000	jr	r31
  123  00001158  54000000	nop
  124  0000115c          	.endproc _EnableIntrs
  125  0000115c          	.align 2
  126  0000115c          	.proc _RestoreIntrs
  127  0000115c          	.global _RestoreIntrs
  128  0000115c          	_RestoreIntrs:
  129                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
  130  0000115c  afbefffc	sw	-4(r29),r30; push fp
  131  00001160  001df020	add	r30,r0,r29; fp = sp
  132  00001164  afbffff8	sw	-8(r29),r31; push ret addr
  133  00001168  2fbd0010	subui	r29,r29,#16; alloc local storage
  134  0000116c  afa20000	sw	0(r29),r2
  135  00001170  23bdfff8	addi	r29,r29,#-8
  136  00001174  8fc20000	lw	r2,(r30)
  137  00001178  afa20000	sw	(r29),r2
  138  0000117c  0c008f24	jal	_SetIntrs
  139  00001180  54000000	nop; not filled.
  140  00001184  23bd0008	addi	r29,r29,#8
  141  00001188  8fa20000	lw	r2,0(r29)
  142  0000118c  8fdffff8	lw	r31,-8(r30)
  143  00001190  001ee820	add	r29,r0,r30
  144  00001194  8fdefffc	lw	r30,-4(r30)
  145  00001198  4be00000	jr	r31
  146  0000119c  54000000	nop
  147  000011a0          	.endproc _RestoreIntrs
  148  000011a0          	.align 2
  149  000011a0          	.proc _QueueLinkInit
  150  000011a0          	.global _QueueLinkInit
  151  000011a0          	_QueueLinkInit:
  152                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
  153  000011a0  afbefffc	sw	-4(r29),r30; push fp
  154  000011a4  001df020	add	r30,r0,r29; fp = sp
  155  000011a8  afbffff8	sw	-8(r29),r31; push ret addr
  156  000011ac  2fbd0010	subui	r29,r29,#16; alloc local storage
  157  000011b0  afa20000	sw	0(r29),r2
  158  000011b4  8fc10000	lw	r1,(r30)
  159  000011b8  8fc20004	lw	r2,4(r30)
  160  000011bc  201f0000	addi	r31,r0,#0
  161  000011c0  ac3f0000	sw	(r1),r31
  162  000011c4  ac22000c	sw	12(r1),r2
  163  000011c8  8fa20000	lw	r2,0(r29)
  164  000011cc  8fdffff8	lw	r31,-8(r30)
  165  000011d0  001ee820	add	r29,r0,r30
  166  000011d4  8fdefffc	lw	r30,-4(r30)
  167  000011d8  4be00000	jr	r31
  168  000011dc  54000000	nop
  169  000011e0          	.endproc _QueueLinkInit
  170  000011e0          	.align 2
  171  000011e0          	.proc _QueueNext
  172  000011e0          	.global _QueueNext
  173  000011e0          	_QueueNext:
  174                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
  175  000011e0  afbefffc	sw	-4(r29),r30; push fp
  176  000011e4  001df020	add	r30,r0,r29; fp = sp
  177  000011e8  afbffff8	sw	-8(r29),r31; push ret addr
  178  000011ec  2fbd0008	subui	r29,r29,#8; alloc local storage
  179  000011f0  8fc10000	lw	r1,(r30)
  180  000011f4  8c210000	lw	r1,(r1)
  181  000011f8  8fdffff8	lw	r31,-8(r30)
  182  000011fc  001ee820	add	r29,r0,r30
  183  00001200  8fdefffc	lw	r30,-4(r30)
  184  00001204  4be00000	jr	r31
  185  00001208  54000000	nop
  186  0000120c          	.endproc _QueueNext
  187  0000120c          	.align 2
  188  0000120c          	.proc _QueuePrev
  189  0000120c          	.global _QueuePrev
  190  0000120c          	_QueuePrev:
  191                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
  192  0000120c  afbefffc	sw	-4(r29),r30; push fp
  193  00001210  001df020	add	r30,r0,r29; fp = sp
  194  00001214  afbffff8	sw	-8(r29),r31; push ret addr
  195  00001218  2fbd0008	subui	r29,r29,#8; alloc local storage
  196  0000121c  8fc10000	lw	r1,(r30)
  197  00001220  8c210004	lw	r1,4(r1)
  198  00001224  8fdffff8	lw	r31,-8(r30)
  199  00001228  001ee820	add	r29,r0,r30
  200  0000122c  8fdefffc	lw	r30,-4(r30)
  201  00001230  4be00000	jr	r31
  202  00001234  54000000	nop
  203  00001238          	.endproc _QueuePrev
  204  00001238          	.align 2
  205  00001238          	.proc _QueueFirst
  206  00001238          	.global _QueueFirst
  207  00001238          	_QueueFirst:
  208                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
  209  00001238  afbefffc	sw	-4(r29),r30; push fp
  210  0000123c  001df020	add	r30,r0,r29; fp = sp
  211  00001240  afbffff8	sw	-8(r29),r31; push ret addr
  212  00001244  2fbd0008	subui	r29,r29,#8; alloc local storage
  213  00001248  8fc10000	lw	r1,(r30)
  214  0000124c  8c210000	lw	r1,(r1)
  215  00001250  8fdffff8	lw	r31,-8(r30)
  216  00001254  001ee820	add	r29,r0,r30
  217  00001258  8fdefffc	lw	r30,-4(r30)
  218  0000125c  4be00000	jr	r31
  219  00001260  54000000	nop
  220  00001264          	.endproc _QueueFirst
  221  00001264          	.align 2
  222  00001264          	.proc _QueueLast
  223  00001264          	.global _QueueLast
  224  00001264          	_QueueLast:
  225                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
  226  00001264  afbefffc	sw	-4(r29),r30; push fp
  227  00001268  001df020	add	r30,r0,r29; fp = sp
  228  0000126c  afbffff8	sw	-8(r29),r31; push ret addr
  229  00001270  2fbd0008	subui	r29,r29,#8; alloc local storage
  230  00001274  8fc10000	lw	r1,(r30)
  231  00001278  8c210004	lw	r1,4(r1)
  232  0000127c  8fdffff8	lw	r31,-8(r30)
  233  00001280  001ee820	add	r29,r0,r30
  234  00001284  8fdefffc	lw	r30,-4(r30)
  235  00001288  4be00000	jr	r31
  236  0000128c  54000000	nop
  237  00001290          	.endproc _QueueLast
  238  00001290          	.align 2
  239  00001290          	.proc _QueueInsertAfter
  240  00001290          	.global _QueueInsertAfter
  241  00001290          	_QueueInsertAfter:
  242                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
  243  00001290  afbefffc	sw	-4(r29),r30; push fp
  244  00001294  001df020	add	r30,r0,r29; fp = sp
  245  00001298  afbffff8	sw	-8(r29),r31; push ret addr
  246  0000129c  2fbd0010	subui	r29,r29,#16; alloc local storage
  247  000012a0  afa20000	sw	0(r29),r2
  248  000012a4  afa30004	sw	4(r29),r3
  249  000012a8  8fc30000	lw	r3,(r30)
  250  000012ac  8fc20004	lw	r2,4(r30)
  251  000012b0  8fc10008	lw	r1,8(r30)
  252  000012b4  ac230008	sw	8(r1),r3
  253  000012b8  ac220004	sw	4(r1),r2
  254  000012bc  8c5f0000	lw	r31,(r2)
  255  000012c0  ac3f0000	sw	(r1),r31
  256  000012c4  ac410000	sw	(r2),r1
  257  000012c8  8c220000	lw	r2,(r1)
  258  000012cc  ac410004	sw	4(r2),r1
  259  000012d0  8c610008	lw	r1,8(r3)
  260  000012d4  20210001	addi	r1,r1,#1
  261  000012d8  ac610008	sw	8(r3),r1
  262  000012dc  8fa20000	lw	r2,0(r29)
  263  000012e0  8fa30004	lw	r3,4(r29)
  264  000012e4  8fdffff8	lw	r31,-8(r30)
  265  000012e8  001ee820	add	r29,r0,r30
  266  000012ec  8fdefffc	lw	r30,-4(r30)
  267  000012f0  4be00000	jr	r31
  268  000012f4  54000000	nop
  269  000012f8          	.endproc _QueueInsertAfter
  270  000012f8          	.align 2
  271  000012f8          	.proc _QueueInsertFirst
  272  000012f8          	.global _QueueInsertFirst
  273  000012f8          	_QueueInsertFirst:
  274                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
  275  000012f8  afbefffc	sw	-4(r29),r30; push fp
  276  000012fc  001df020	add	r30,r0,r29; fp = sp
  277  00001300  afbffff8	sw	-8(r29),r31; push ret addr
  278  00001304  2fbd0010	subui	r29,r29,#16; alloc local storage
  279  00001308  afa20000	sw	0(r29),r2
  280  0000130c  afa30004	sw	4(r29),r3
  281  00001310  8fc30000	lw	r3,(r30)
  282  00001314  8fc10004	lw	r1,4(r30)
  283  00001318  ac230008	sw	8(r1),r3
  284  0000131c  ac230004	sw	4(r1),r3
  285  00001320  8c7f0000	lw	r31,(r3)
  286  00001324  ac3f0000	sw	(r1),r31
  287  00001328  ac610000	sw	(r3),r1
  288  0000132c  8c220000	lw	r2,(r1)
  289  00001330  ac410004	sw	4(r2),r1
  290  00001334  8c610008	lw	r1,8(r3)
  291  00001338  20210001	addi	r1,r1,#1
  292  0000133c  ac610008	sw	8(r3),r1
  293  00001340  8fa20000	lw	r2,0(r29)
  294  00001344  8fa30004	lw	r3,4(r29)
  295  00001348  8fdffff8	lw	r31,-8(r30)
  296  0000134c  001ee820	add	r29,r0,r30
  297  00001350  8fdefffc	lw	r30,-4(r30)
  298  00001354  4be00000	jr	r31
  299  00001358  54000000	nop
  300  0000135c          	.endproc _QueueInsertFirst
  301  0000135c          	.align 2
  302  0000135c          	.proc _QueueInsertLast
  303  0000135c          	.global _QueueInsertLast
  304  0000135c          	_QueueInsertLast:
  305                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
  306  0000135c  afbefffc	sw	-4(r29),r30; push fp
  307  00001360  001df020	add	r30,r0,r29; fp = sp
  308  00001364  afbffff8	sw	-8(r29),r31; push ret addr
  309  00001368  2fbd0010	subui	r29,r29,#16; alloc local storage
  310  0000136c  afa20000	sw	0(r29),r2
  311  00001370  afa30004	sw	4(r29),r3
  312  00001374  8fc30000	lw	r3,(r30)
  313  00001378  8fc10004	lw	r1,4(r30)
  314  0000137c  8c620004	lw	r2,4(r3)
  315  00001380  ac230008	sw	8(r1),r3
  316  00001384  ac220004	sw	4(r1),r2
  317  00001388  8c5f0000	lw	r31,(r2)
  318  0000138c  ac3f0000	sw	(r1),r31
  319  00001390  ac410000	sw	(r2),r1
  320  00001394  8c220000	lw	r2,(r1)
  321  00001398  ac410004	sw	4(r2),r1
  322  0000139c  8c610008	lw	r1,8(r3)
  323  000013a0  20210001	addi	r1,r1,#1
  324  000013a4  ac610008	sw	8(r3),r1
  325  000013a8  8fa20000	lw	r2,0(r29)
  326  000013ac  8fa30004	lw	r3,4(r29)
  327  000013b0  8fdffff8	lw	r31,-8(r30)
  328  000013b4  001ee820	add	r29,r0,r30
  329  000013b8  8fdefffc	lw	r30,-4(r30)
  330  000013bc  4be00000	jr	r31
  331  000013c0  54000000	nop
  332  000013c4          	.endproc _QueueInsertLast
  333  000013c4          	.align 2
  334  000013c4          	.proc _QueueRemove
  335  000013c4          	.global _QueueRemove
  336  000013c4          	_QueueRemove:
  337                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
  338  000013c4  afbefffc	sw	-4(r29),r30; push fp
  339  000013c8  001df020	add	r30,r0,r29; fp = sp
  340  000013cc  afbffff8	sw	-8(r29),r31; push ret addr
  341  000013d0  2fbd0010	subui	r29,r29,#16; alloc local storage
  342  000013d4  afa20000	sw	0(r29),r2
  343  000013d8  afa30004	sw	4(r29),r3
  344  000013dc  8fdf0000	lw	r31,(r30)
  345  000013e0  8fe10008	lw	r1,8(r31)
  346  000013e4  8c210008	lw	r1,8(r1)
  347  000013e8  6c210000	sgti	r1,r1,#0
  348  000013ec  1020002c	beqz	r1,L44_LF0
  349  000013f0  54000000	nop; not filled.
  350  000013f4  8fe10004	lw	r1,4(r31)
  351  000013f8  8fe30000	lw	r3,(r31)
  352  000013fc  ac230000	sw	(r1),r3
  353  00001400  8fe10000	lw	r1,(r31)
  354  00001404  8fe30004	lw	r3,4(r31)
  355  00001408  ac230004	sw	4(r1),r3
  356  0000140c  8fe20008	lw	r2,8(r31)
  357  00001410  8c410008	lw	r1,8(r2)
  358  00001414  2021ffff	addi	r1,r1,#-1
  359  00001418  ac410008	sw	8(r2),r1
  360  0000141c          	L44_LF0:
  361  0000141c  20030000	addi	r3,r0,#0
  362  00001420  afe30000	sw	(r31),r3
  363  00001424  8fa20000	lw	r2,0(r29)
  364  00001428  8fa30004	lw	r3,4(r29)
  365  0000142c  8fdffff8	lw	r31,-8(r30)
  366  00001430  001ee820	add	r29,r0,r30
  367  00001434  8fdefffc	lw	r30,-4(r30)
  368  00001438  4be00000	jr	r31
  369  0000143c  54000000	nop
  370  00001440          	.endproc _QueueRemove
  371  00001440          	.align 2
  372  00001440          	.proc _QueueLength
  373  00001440          	.global _QueueLength
  374  00001440          	_QueueLength:
  375                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
  376  00001440  afbefffc	sw	-4(r29),r30; push fp
  377  00001444  001df020	add	r30,r0,r29; fp = sp
  378  00001448  afbffff8	sw	-8(r29),r31; push ret addr
  379  0000144c  2fbd0008	subui	r29,r29,#8; alloc local storage
  380  00001450  8fc10000	lw	r1,(r30)
  381  00001454  8c210008	lw	r1,8(r1)
  382  00001458  8fdffff8	lw	r31,-8(r30)
  383  0000145c  001ee820	add	r29,r0,r30
  384  00001460  8fdefffc	lw	r30,-4(r30)
  385  00001464  4be00000	jr	r31
  386  00001468  54000000	nop
  387  0000146c          	.endproc _QueueLength
  388  0000146c          	.align 2
  389  0000146c          	.proc _QueueEmpty
  390  0000146c          	.global _QueueEmpty
  391  0000146c          	_QueueEmpty:
  392                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
  393  0000146c  afbefffc	sw	-4(r29),r30; push fp
  394  00001470  001df020	add	r30,r0,r29; fp = sp
  395  00001474  afbffff8	sw	-8(r29),r31; push ret addr
  396  00001478  2fbd0008	subui	r29,r29,#8; alloc local storage
  397  0000147c  8fc10000	lw	r1,(r30)
  398  00001480  8c210008	lw	r1,8(r1)
  399  00001484  60210000	seqi	r1,r1,#0
  400  00001488  8fdffff8	lw	r31,-8(r30)
  401  0000148c  001ee820	add	r29,r0,r30
  402  00001490  8fdefffc	lw	r30,-4(r30)
  403  00001494  4be00000	jr	r31
  404  00001498  54000000	nop
  405  0000149c          	.endproc _QueueEmpty
  406  0000149c          	.data
  407  0000b000          	.align 2
  408  0000b000          	LC0_LF0:
  409  0000b000  41747465	.ascii "Attepmting to open %s mode=%d.\n\000"
  409  0000b004  706d7469	
  409  0000b008  6e672074	
  409  0000b00c  6f206f70	
  409  0000b010  656e2025	
  409  0000b014  73206d6f	
  409  0000b018  64653d25	
  409  0000b01c  642e0a00	
  410  0000b020          	.align 2
  411  0000b020          	LC1_LF0:
  412  0000b020  646c783a	.ascii "dlx:\000"
  412  0000b024  00      	
  413  0000b025          	.align 2
  414  0000b028          	LC2_LF0:
  415  0000b028  46696c65	.ascii "File %s opening in file system %d.\n\000"
  415  0000b02c  20257320	
  415  0000b030  6f70656e	
  415  0000b034  696e6720	
  415  0000b038  696e2066	
  415  0000b03c  696c6520	
  415  0000b040  73797374	
  415  0000b044  656d2025	
  415  0000b048  642e0a00	
  416  0000b04c          	.align 2
  417  0000b04c          	LC3_LF0:
  418  0000b04c  4f70656e	.ascii "Opened %s in FS %d, mode=%d slot=%d.\n\000"
  418  0000b050  65642025	
  418  0000b054  7320696e	
  418  0000b058  20465320	
  418  0000b05c  25642c20	
  418  0000b060  6d6f6465	
  418  0000b064  3d256420	
  418  0000b068  736c6f74	
  418  0000b06c  3d25642e	
  418  0000b070  0a00    	
  419  0000b072          	.text
  420  0000149c          	.align 2
  421  0000149c          	.proc _FsOpen
  422  0000149c          	.global _FsOpen
  423  0000149c          	_FsOpen:
  424                      ;  Function 'FsOpen'; 0 bytes of locals, 7 regs to save.
  425  0000149c  afbefffc	sw	-4(r29),r30; push fp
  426  000014a0  001df020	add	r30,r0,r29; fp = sp
  427  000014a4  afbffff8	sw	-8(r29),r31; push ret addr
  428  000014a8  2fbd0028	subui	r29,r29,#40; alloc local storage
  429  000014ac  afa20000	sw	0(r29),r2
  430  000014b0  afa30004	sw	4(r29),r3
  431  000014b4  afa40008	sw	8(r29),r4
  432  000014b8  afa5000c	sw	12(r29),r5
  433  000014bc  afa60010	sw	16(r29),r6
  434  000014c0  afa70014	sw	20(r29),r7
  435  000014c4  afa80018	sw	24(r29),r8
  436  000014c8  8fc40000	lw	r4,(r30)
  437  000014cc  8fc50004	lw	r5,4(r30)
  438  000014d0  23bdfff8	addi	r29,r29,#-8
  439  000014d4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  440  000014d8  2442fc26	addui	r2,r2,(_debugstr)&0xffff
  441  000014dc  afa20000	sw	(r29),r2
  442  000014e0  20080066	addi	r8,r0,#102
  443  000014e4  afa80004	sw	4(r29),r8
  444  000014e8  0c002630	jal	_dindex
  445  000014ec  54000000	nop; not filled.
  446  000014f0  23bd0008	addi	r29,r29,#8
  447  000014f4  64210000	snei	r1,r1,#0
  448  000014f8  1420002c	bnez	r1,L59_LF0
  449  000014fc  54000000	nop; not filled.
  450  00001500  23bdfff8	addi	r29,r29,#-8
  451  00001504  afa20000	sw	(r29),r2
  452  00001508  2008002b	addi	r8,r0,#43
  453  0000150c  afa80004	sw	4(r29),r8
  454  00001510  0c002608	jal	_dindex
  455  00001514  54000000	nop; not filled.
  456  00001518  23bd0008	addi	r29,r29,#8
  457  0000151c  64210000	snei	r1,r1,#0
  458  00001520  10200028	beqz	r1,L58_LF0
  459  00001524  54000000	nop; not filled.
  460  00001528          	L59_LF0:
  461  00001528  23bdfff0	addi	r29,r29,#-16
  462  0000152c  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  463  00001530  2508b000	addui	r8,r8,(LC0_LF0)&0xffff
  464  00001534  afa80000	sw	(r29),r8
  465  00001538  afa40004	sw	4(r29),r4
  466  0000153c  afa50008	sw	8(r29),r5
  467  00001540  0c008cb4	jal	_printf
  468  00001544  54000000	nop; not filled.
  469  00001548  23bd0010	addi	r29,r29,#16
  470  0000154c          	L58_LF0:
  471  0000154c  30a50003	andi	r5,r5,#3
  472  00001550  64a10000	snei	r1,r5,#0
  473  00001554  10200044	beqz	r1,L77_LF0
  474  00001558  54000000	nop; not filled.
  475  0000155c  20030000	addi	r3,r0,#0
  476  00001560  3c060000	lhi	r6,((_openfiles_LF0)>>16)&0xffff
  477  00001564  24c6b0d8	addui	r6,r6,(_openfiles_LF0)&0xffff
  478  00001568  00061020	add	r2,r0,r6
  479  0000156c          	L64_LF0:
  480  0000156c  8c410004	lw	r1,4(r2)
  481  00001570  64210000	snei	r1,r1,#0
  482  00001574  10200018	beqz	r1,L62_LF0
  483  00001578  54000000	nop; not filled.
  484  0000157c  2042010c	addi	r2,r2,#268
  485  00001580  20630001	addi	r3,r3,#1
  486  00001584  7061001f	slei	r1,r3,#31
  487  00001588  1420ffe0	bnez	r1,L64_LF0
  488  0000158c  54000000	nop; not filled.
  489  00001590          	L62_LF0:
  490  00001590  6c61001f	sgti	r1,r3,#31
  491  00001594  10200010	beqz	r1,L67_LF0
  492  00001598  54000000	nop; not filled.
  493  0000159c          	L77_LF0:
  494  0000159c  2001ffff	addi	r1,r0,#-1
  495  000015a0  08000224	j	L76_LF0
  496  000015a4  54000000	nop; not filled.
  497  000015a8          	L67_LF0:
  498  000015a8  50610004	slli	r1,r3,#0x4
  499  000015ac  00230820	add	r1,r1,r3
  500  000015b0  50210002	slli	r1,r1,#0x2
  501  000015b4  00230822	sub	r1,r1,r3
  502  000015b8  50210002	slli	r1,r1,#0x2
  503  000015bc  00261020	add	r2,r1,r6
  504  000015c0  ac450004	sw	4(r2),r5
  505  000015c4  23bdfff0	addi	r29,r29,#-16
  506  000015c8  afa40000	sw	(r29),r4
  507  000015cc  3c010000	lhi	r1,((LC1_LF0)>>16)&0xffff
  508  000015d0  2421b020	addui	r1,r1,(LC1_LF0)&0xffff
  509  000015d4  afa10004	sw	4(r29),r1
  510  000015d8  20080004	addi	r8,r0,#4
  511  000015dc  afa80008	sw	8(r29),r8
  512  000015e0  0c0021f4	jal	_dstrncmp
  513  000015e4  54000000	nop; not filled.
  514  000015e8  23bd0010	addi	r29,r29,#16
  515  000015ec  64210000	snei	r1,r1,#0
  516  000015f0  14200014	bnez	r1,L68_LF0
  517  000015f4  54000000	nop; not filled.
  518  000015f8  20840004	addi	r4,r4,#4
  519  000015fc  20080001	addi	r8,r0,#1
  520  00001600  08000008	j	L78_LF0
  521  00001604  54000000	nop; not filled.
  522  00001608          	L68_LF0:
  523  00001608  20080000	addi	r8,r0,#0
  524  0000160c          	L78_LF0:
  525  0000160c  ac480000	sw	(r2),r8
  526  00001610  23bdfff8	addi	r29,r29,#-8
  527  00001614  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  528  00001618  2442fc26	addui	r2,r2,(_debugstr)&0xffff
  529  0000161c  afa20000	sw	(r29),r2
  530  00001620  20080066	addi	r8,r0,#102
  531  00001624  afa80004	sw	4(r29),r8
  532  00001628  0c0024f0	jal	_dindex
  533  0000162c  54000000	nop; not filled.
  534  00001630  23bd0008	addi	r29,r29,#8
  535  00001634  64210000	snei	r1,r1,#0
  536  00001638  1420002c	bnez	r1,L71_LF0
  537  0000163c  54000000	nop; not filled.
  538  00001640  23bdfff8	addi	r29,r29,#-8
  539  00001644  afa20000	sw	(r29),r2
  540  00001648  2008002b	addi	r8,r0,#43
  541  0000164c  afa80004	sw	4(r29),r8
  542  00001650  0c0024c8	jal	_dindex
  543  00001654  54000000	nop; not filled.
  544  00001658  23bd0008	addi	r29,r29,#8
  545  0000165c  64210000	snei	r1,r1,#0
  546  00001660  1020004c	beqz	r1,L70_LF0
  547  00001664  54000000	nop; not filled.
  548  00001668          	L71_LF0:
  549  00001668  23bdfff0	addi	r29,r29,#-16
  550  0000166c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  551  00001670  2508b028	addui	r8,r8,(LC2_LF0)&0xffff
  552  00001674  afa80000	sw	(r29),r8
  553  00001678  afa40004	sw	4(r29),r4
  554  0000167c  50610004	slli	r1,r3,#0x4
  555  00001680  00230820	add	r1,r1,r3
  556  00001684  50210002	slli	r1,r1,#0x2
  557  00001688  00230822	sub	r1,r1,r3
  558  0000168c  50210002	slli	r1,r1,#0x2
  559  00001690  3c080000	lhi	r8,((_openfiles_LF0)>>16)&0xffff
  560  00001694  2508b0d8	addui	r8,r8,(_openfiles_LF0)&0xffff
  561  00001698  00280820	add	r1,r1,r8
  562  0000169c  8c210000	lw	r1,(r1)
  563  000016a0  afa10008	sw	8(r29),r1
  564  000016a4  0c008b50	jal	_printf
  565  000016a8  54000000	nop; not filled.
  566  000016ac  23bd0010	addi	r29,r29,#16
  567  000016b0          	L70_LF0:
  568  000016b0  23bdfff0	addi	r29,r29,#-16
  569  000016b4  50610004	slli	r1,r3,#0x4
  570  000016b8  00230820	add	r1,r1,r3
  571  000016bc  50210002	slli	r1,r1,#0x2
  572  000016c0  00230822	sub	r1,r1,r3
  573  000016c4  50260002	slli	r6,r1,#0x2
  574  000016c8  3c080000	lhi	r8,((_openfiles_LF0)>>16)&0xffff
  575  000016cc  2508b0d8	addui	r8,r8,(_openfiles_LF0)&0xffff
  576  000016d0  00c83820	add	r7,r6,r8
  577  000016d4  8ce20000	lw	r2,(r7)
  578  000016d8  50410001	slli	r1,r2,#0x1
  579  000016dc  00220820	add	r1,r1,r2
  580  000016e0  50210003	slli	r1,r1,#0x3
  581  000016e4  3c080000	lhi	r8,((_fs_LF0)>>16)&0xffff
  582  000016e8  2508b0a8	addui	r8,r8,(_fs_LF0)&0xffff
  583  000016ec  00280820	add	r1,r1,r8
  584  000016f0  afa30000	sw	(r29),r3
  585  000016f4  afa40004	sw	4(r29),r4
  586  000016f8  afa50008	sw	8(r29),r5
  587  000016fc  8c210000	lw	r1,(r1)
  588  00001700  4c200000	jalr	r1
  589  00001704  54000000	nop; not filled.
  590  00001708  00011020	add	r2,r0,r1
  591  0000170c  23bd0010	addi	r29,r29,#16
  592  00001710  68410000	slti	r1,r2,#0
  593  00001714  10200024	beqz	r1,L72_LF0
  594  00001718  54000000	nop; not filled.
  595  0000171c  3c080000	lhi	r8,((_openfiles_LF0)>>16)&0xffff
  596  00001720  2508b0d8	addui	r8,r8,(_openfiles_LF0)&0xffff
  597  00001724  00c80820	add	r1,r6,r8
  598  00001728  20080000	addi	r8,r0,#0
  599  0000172c  ac280004	sw	4(r1),r8
  600  00001730  00020820	add	r1,r0,r2
  601  00001734  08000090	j	L76_LF0
  602  00001738  54000000	nop; not filled.
  603  0000173c          	L72_LF0:
  604  0000173c  23bdfff8	addi	r29,r29,#-8
  605  00001740  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  606  00001744  2442fc26	addui	r2,r2,(_debugstr)&0xffff
  607  00001748  afa20000	sw	(r29),r2
  608  0000174c  20080066	addi	r8,r0,#102
  609  00001750  afa80004	sw	4(r29),r8
  610  00001754  0c0023c4	jal	_dindex
  611  00001758  54000000	nop; not filled.
  612  0000175c  23bd0008	addi	r29,r29,#8
  613  00001760  64210000	snei	r1,r1,#0
  614  00001764  1420002c	bnez	r1,L75_LF0
  615  00001768  54000000	nop; not filled.
  616  0000176c  23bdfff8	addi	r29,r29,#-8
  617  00001770  afa20000	sw	(r29),r2
  618  00001774  2008002b	addi	r8,r0,#43
  619  00001778  afa80004	sw	4(r29),r8
  620  0000177c  0c00239c	jal	_dindex
  621  00001780  54000000	nop; not filled.
  622  00001784  23bd0008	addi	r29,r29,#8
  623  00001788  64210000	snei	r1,r1,#0
  624  0000178c  10200034	beqz	r1,L74_LF0
  625  00001790  54000000	nop; not filled.
  626  00001794          	L75_LF0:
  627  00001794  23bdffe8	addi	r29,r29,#-24
  628  00001798  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  629  0000179c  2508b04c	addui	r8,r8,(LC3_LF0)&0xffff
  630  000017a0  afa80000	sw	(r29),r8
  631  000017a4  afa40004	sw	4(r29),r4
  632  000017a8  8ce70000	lw	r7,(r7)
  633  000017ac  afa70008	sw	8(r29),r7
  634  000017b0  afa5000c	sw	12(r29),r5
  635  000017b4  afa30010	sw	16(r29),r3
  636  000017b8  0c008a3c	jal	_printf
  637  000017bc  54000000	nop; not filled.
  638  000017c0  23bd0018	addi	r29,r29,#24
  639  000017c4          	L74_LF0:
  640  000017c4  00030820	add	r1,r0,r3
  641  000017c8          	L76_LF0:
  642  000017c8  8fa20000	lw	r2,0(r29)
  643  000017cc  8fa30004	lw	r3,4(r29)
  644  000017d0  8fa40008	lw	r4,8(r29)
  645  000017d4  8fa5000c	lw	r5,12(r29)
  646  000017d8  8fa60010	lw	r6,16(r29)
  647  000017dc  8fa70014	lw	r7,20(r29)
  648  000017e0  8fa80018	lw	r8,24(r29)
  649  000017e4  8fdffff8	lw	r31,-8(r30)
  650  000017e8  001ee820	add	r29,r0,r30
  651  000017ec  8fdefffc	lw	r30,-4(r30)
  652  000017f0  4be00000	jr	r31
  653  000017f4  54000000	nop
  654  000017f8          	.endproc _FsOpen
  655  000017f8          	.align 2
  656  000017f8          	.proc _FsClose
  657  000017f8          	.global _FsClose
  658  000017f8          	_FsClose:
  659                      ;  Function 'FsClose'; 0 bytes of locals, 3 regs to save.
  660  000017f8  afbefffc	sw	-4(r29),r30; push fp
  661  000017fc  001df020	add	r30,r0,r29; fp = sp
  662  00001800  afbffff8	sw	-8(r29),r31; push ret addr
  663  00001804  2fbd0018	subui	r29,r29,#24; alloc local storage
  664  00001808  afa20000	sw	0(r29),r2
  665  0000180c  afa30004	sw	4(r29),r3
  666  00001810  afa40008	sw	8(r29),r4
  667  00001814  8fdf0000	lw	r31,(r30)
  668  00001818  20020000	addi	r2,r0,#0
  669  0000181c  23e1ffff	addi	r1,r31,#-1
  670  00001820  7021001e	sleui	r1,r1,#30
  671  00001824  10200038	beqz	r1,L87_LF0
  672  00001828  54000000	nop; not filled.
  673  0000182c  53e10004	slli	r1,r31,#0x4
  674  00001830  003f0820	add	r1,r1,r31
  675  00001834  50210002	slli	r1,r1,#0x2
  676  00001838  003f0822	sub	r1,r1,r31
  677  0000183c  50210002	slli	r1,r1,#0x2
  678  00001840  3c040000	lhi	r4,((_openfiles_LF0)>>16)&0xffff
  679  00001844  2484b0d8	addui	r4,r4,(_openfiles_LF0)&0xffff
  680  00001848  00240820	add	r1,r1,r4
  681  0000184c  8c210004	lw	r1,4(r1)
  682  00001850  64210000	snei	r1,r1,#0
  683  00001854  10200008	beqz	r1,L87_LF0
  684  00001858  54000000	nop; not filled.
  685  0000185c  20020001	addi	r2,r0,#1
  686  00001860          	L87_LF0:
  687  00001860  64410000	snei	r1,r2,#0
  688  00001864  10200074	beqz	r1,L85_LF0
  689  00001868  54000000	nop; not filled.
  690  0000186c  23bdfff8	addi	r29,r29,#-8
  691  00001870  53e10004	slli	r1,r31,#0x4
  692  00001874  003f0820	add	r1,r1,r31
  693  00001878  50210002	slli	r1,r1,#0x2
  694  0000187c  003f0822	sub	r1,r1,r31
  695  00001880  50230002	slli	r3,r1,#0x2
  696  00001884  3c040000	lhi	r4,((_openfiles_LF0)>>16)&0xffff
  697  00001888  2484b0d8	addui	r4,r4,(_openfiles_LF0)&0xffff
  698  0000188c  00640820	add	r1,r3,r4
  699  00001890  8c220000	lw	r2,(r1)
  700  00001894  50410001	slli	r1,r2,#0x1
  701  00001898  00220820	add	r1,r1,r2
  702  0000189c  50210003	slli	r1,r1,#0x3
  703  000018a0  3c040000	lhi	r4,((_fs_LF0)>>16)&0xffff
  704  000018a4  2484b0a8	addui	r4,r4,(_fs_LF0)&0xffff
  705  000018a8  00240820	add	r1,r1,r4
  706  000018ac  afbf0000	sw	(r29),r31
  707  000018b0  8c210010	lw	r1,16(r1)
  708  000018b4  4c200000	jalr	r1
  709  000018b8  54000000	nop; not filled.
  710  000018bc  23bd0008	addi	r29,r29,#8
  711  000018c0  3c040000	lhi	r4,((_openfiles_LF0)>>16)&0xffff
  712  000018c4  2484b0d8	addui	r4,r4,(_openfiles_LF0)&0xffff
  713  000018c8  00641020	add	r2,r3,r4
  714  000018cc  20040000	addi	r4,r0,#0
  715  000018d0  ac440004	sw	4(r2),r4
  716  000018d4  08000008	j	L89_LF0
  717  000018d8  54000000	nop; not filled.
  718  000018dc          	L85_LF0:
  719  000018dc  2001ffff	addi	r1,r0,#-1
  720  000018e0          	L89_LF0:
  721  000018e0  8fa20000	lw	r2,0(r29)
  722  000018e4  8fa30004	lw	r3,4(r29)
  723  000018e8  8fa40008	lw	r4,8(r29)
  724  000018ec  8fdffff8	lw	r31,-8(r30)
  725  000018f0  001ee820	add	r29,r0,r30
  726  000018f4  8fdefffc	lw	r30,-4(r30)
  727  000018f8  4be00000	jr	r31
  728  000018fc  54000000	nop
  729  00001900          	.endproc _FsClose
  730  00001900          	.align 2
  731  00001900          	.proc _FsRead
  732  00001900          	.global _FsRead
  733  00001900          	_FsRead:
  734                      ;  Function 'FsRead'; 0 bytes of locals, 2 regs to save.
  735  00001900  afbefffc	sw	-4(r29),r30; push fp
  736  00001904  001df020	add	r30,r0,r29; fp = sp
  737  00001908  afbffff8	sw	-8(r29),r31; push ret addr
  738  0000190c  2fbd0010	subui	r29,r29,#16; alloc local storage
  739  00001910  afa20000	sw	0(r29),r2
  740  00001914  afa30004	sw	4(r29),r3
  741  00001918  8fdf0000	lw	r31,(r30)
  742  0000191c  20020000	addi	r2,r0,#0
  743  00001920  23e1ffff	addi	r1,r31,#-1
  744  00001924  7021001e	sleui	r1,r1,#30
  745  00001928  10200038	beqz	r1,L97_LF0
  746  0000192c  54000000	nop; not filled.
  747  00001930  53e10004	slli	r1,r31,#0x4
  748  00001934  003f0820	add	r1,r1,r31
  749  00001938  50210002	slli	r1,r1,#0x2
  750  0000193c  003f0822	sub	r1,r1,r31
  751  00001940  50210002	slli	r1,r1,#0x2
  752  00001944  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  753  00001948  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  754  0000194c  00230820	add	r1,r1,r3
  755  00001950  8c210004	lw	r1,4(r1)
  756  00001954  64210000	snei	r1,r1,#0
  757  00001958  10200008	beqz	r1,L97_LF0
  758  0000195c  54000000	nop; not filled.
  759  00001960  20020001	addi	r2,r0,#1
  760  00001964          	L97_LF0:
  761  00001964  64410000	snei	r1,r2,#0
  762  00001968  10200070	beqz	r1,L95_LF0
  763  0000196c  54000000	nop; not filled.
  764  00001970  23bdfff0	addi	r29,r29,#-16
  765  00001974  53e10004	slli	r1,r31,#0x4
  766  00001978  003f0820	add	r1,r1,r31
  767  0000197c  50210002	slli	r1,r1,#0x2
  768  00001980  003f0822	sub	r1,r1,r31
  769  00001984  50210002	slli	r1,r1,#0x2
  770  00001988  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  771  0000198c  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  772  00001990  00230820	add	r1,r1,r3
  773  00001994  8c220000	lw	r2,(r1)
  774  00001998  50410001	slli	r1,r2,#0x1
  775  0000199c  00220820	add	r1,r1,r2
  776  000019a0  50210003	slli	r1,r1,#0x3
  777  000019a4  3c030000	lhi	r3,((_fs_LF0)>>16)&0xffff
  778  000019a8  2463b0a8	addui	r3,r3,(_fs_LF0)&0xffff
  779  000019ac  00230820	add	r1,r1,r3
  780  000019b0  afbf0000	sw	(r29),r31
  781  000019b4  8fc30004	lw	r3,4(r30)
  782  000019b8  afa30004	sw	4(r29),r3
  783  000019bc  8fc30008	lw	r3,8(r30)
  784  000019c0  afa30008	sw	8(r29),r3
  785  000019c4  8c210004	lw	r1,4(r1)
  786  000019c8  4c200000	jalr	r1
  787  000019cc  54000000	nop; not filled.
  788  000019d0  23bd0010	addi	r29,r29,#16
  789  000019d4  08000008	j	L94_LF0
  790  000019d8  54000000	nop; not filled.
  791  000019dc          	L95_LF0:
  792  000019dc  2001ffff	addi	r1,r0,#-1
  793  000019e0          	L94_LF0:
  794  000019e0  8fa20000	lw	r2,0(r29)
  795  000019e4  8fa30004	lw	r3,4(r29)
  796  000019e8  8fdffff8	lw	r31,-8(r30)
  797  000019ec  001ee820	add	r29,r0,r30
  798  000019f0  8fdefffc	lw	r30,-4(r30)
  799  000019f4  4be00000	jr	r31
  800  000019f8  54000000	nop
  801  000019fc          	.endproc _FsRead
  802  000019fc          	.align 2
  803  000019fc          	.proc _FsWrite
  804  000019fc          	.global _FsWrite
  805  000019fc          	_FsWrite:
  806                      ;  Function 'FsWrite'; 0 bytes of locals, 2 regs to save.
  807  000019fc  afbefffc	sw	-4(r29),r30; push fp
  808  00001a00  001df020	add	r30,r0,r29; fp = sp
  809  00001a04  afbffff8	sw	-8(r29),r31; push ret addr
  810  00001a08  2fbd0010	subui	r29,r29,#16; alloc local storage
  811  00001a0c  afa20000	sw	0(r29),r2
  812  00001a10  afa30004	sw	4(r29),r3
  813  00001a14  8fdf0000	lw	r31,(r30)
  814  00001a18  20020000	addi	r2,r0,#0
  815  00001a1c  23e1ffff	addi	r1,r31,#-1
  816  00001a20  7021001e	sleui	r1,r1,#30
  817  00001a24  10200038	beqz	r1,L106_LF0
  818  00001a28  54000000	nop; not filled.
  819  00001a2c  53e10004	slli	r1,r31,#0x4
  820  00001a30  003f0820	add	r1,r1,r31
  821  00001a34  50210002	slli	r1,r1,#0x2
  822  00001a38  003f0822	sub	r1,r1,r31
  823  00001a3c  50210002	slli	r1,r1,#0x2
  824  00001a40  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  825  00001a44  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  826  00001a48  00230820	add	r1,r1,r3
  827  00001a4c  8c210004	lw	r1,4(r1)
  828  00001a50  64210000	snei	r1,r1,#0
  829  00001a54  10200008	beqz	r1,L106_LF0
  830  00001a58  54000000	nop; not filled.
  831  00001a5c  20020001	addi	r2,r0,#1
  832  00001a60          	L106_LF0:
  833  00001a60  64410000	snei	r1,r2,#0
  834  00001a64  10200070	beqz	r1,L104_LF0
  835  00001a68  54000000	nop; not filled.
  836  00001a6c  23bdfff0	addi	r29,r29,#-16
  837  00001a70  53e10004	slli	r1,r31,#0x4
  838  00001a74  003f0820	add	r1,r1,r31
  839  00001a78  50210002	slli	r1,r1,#0x2
  840  00001a7c  003f0822	sub	r1,r1,r31
  841  00001a80  50210002	slli	r1,r1,#0x2
  842  00001a84  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  843  00001a88  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  844  00001a8c  00230820	add	r1,r1,r3
  845  00001a90  8c220000	lw	r2,(r1)
  846  00001a94  50410001	slli	r1,r2,#0x1
  847  00001a98  00220820	add	r1,r1,r2
  848  00001a9c  50210003	slli	r1,r1,#0x3
  849  00001aa0  3c030000	lhi	r3,((_fs_LF0)>>16)&0xffff
  850  00001aa4  2463b0a8	addui	r3,r3,(_fs_LF0)&0xffff
  851  00001aa8  00230820	add	r1,r1,r3
  852  00001aac  afbf0000	sw	(r29),r31
  853  00001ab0  8fc30004	lw	r3,4(r30)
  854  00001ab4  afa30004	sw	4(r29),r3
  855  00001ab8  8fc30008	lw	r3,8(r30)
  856  00001abc  afa30008	sw	8(r29),r3
  857  00001ac0  8c210008	lw	r1,8(r1)
  858  00001ac4  4c200000	jalr	r1
  859  00001ac8  54000000	nop; not filled.
  860  00001acc  23bd0010	addi	r29,r29,#16
  861  00001ad0  08000008	j	L103_LF0
  862  00001ad4  54000000	nop; not filled.
  863  00001ad8          	L104_LF0:
  864  00001ad8  2001ffff	addi	r1,r0,#-1
  865  00001adc          	L103_LF0:
  866  00001adc  8fa20000	lw	r2,0(r29)
  867  00001ae0  8fa30004	lw	r3,4(r29)
  868  00001ae4  8fdffff8	lw	r31,-8(r30)
  869  00001ae8  001ee820	add	r29,r0,r30
  870  00001aec  8fdefffc	lw	r30,-4(r30)
  871  00001af0  4be00000	jr	r31
  872  00001af4  54000000	nop
  873  00001af8          	.endproc _FsWrite
  874  00001af8          	.align 2
  875  00001af8          	.proc _FsSeek
  876  00001af8          	.global _FsSeek
  877  00001af8          	_FsSeek:
  878                      ;  Function 'FsSeek'; 0 bytes of locals, 2 regs to save.
  879  00001af8  afbefffc	sw	-4(r29),r30; push fp
  880  00001afc  001df020	add	r30,r0,r29; fp = sp
  881  00001b00  afbffff8	sw	-8(r29),r31; push ret addr
  882  00001b04  2fbd0010	subui	r29,r29,#16; alloc local storage
  883  00001b08  afa20000	sw	0(r29),r2
  884  00001b0c  afa30004	sw	4(r29),r3
  885  00001b10  8fdf0000	lw	r31,(r30)
  886  00001b14  20020000	addi	r2,r0,#0
  887  00001b18  23e1ffff	addi	r1,r31,#-1
  888  00001b1c  7021001e	sleui	r1,r1,#30
  889  00001b20  10200038	beqz	r1,L115_LF0
  890  00001b24  54000000	nop; not filled.
  891  00001b28  53e10004	slli	r1,r31,#0x4
  892  00001b2c  003f0820	add	r1,r1,r31
  893  00001b30  50210002	slli	r1,r1,#0x2
  894  00001b34  003f0822	sub	r1,r1,r31
  895  00001b38  50210002	slli	r1,r1,#0x2
  896  00001b3c  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  897  00001b40  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  898  00001b44  00230820	add	r1,r1,r3
  899  00001b48  8c210004	lw	r1,4(r1)
  900  00001b4c  64210000	snei	r1,r1,#0
  901  00001b50  10200008	beqz	r1,L115_LF0
  902  00001b54  54000000	nop; not filled.
  903  00001b58  20020001	addi	r2,r0,#1
  904  00001b5c          	L115_LF0:
  905  00001b5c  64410000	snei	r1,r2,#0
  906  00001b60  10200070	beqz	r1,L113_LF0
  907  00001b64  54000000	nop; not filled.
  908  00001b68  23bdfff0	addi	r29,r29,#-16
  909  00001b6c  53e10004	slli	r1,r31,#0x4
  910  00001b70  003f0820	add	r1,r1,r31
  911  00001b74  50210002	slli	r1,r1,#0x2
  912  00001b78  003f0822	sub	r1,r1,r31
  913  00001b7c  50210002	slli	r1,r1,#0x2
  914  00001b80  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  915  00001b84  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  916  00001b88  00230820	add	r1,r1,r3
  917  00001b8c  8c220000	lw	r2,(r1)
  918  00001b90  50410001	slli	r1,r2,#0x1
  919  00001b94  00220820	add	r1,r1,r2
  920  00001b98  50210003	slli	r1,r1,#0x3
  921  00001b9c  3c030000	lhi	r3,((_fs_LF0)>>16)&0xffff
  922  00001ba0  2463b0a8	addui	r3,r3,(_fs_LF0)&0xffff
  923  00001ba4  00230820	add	r1,r1,r3
  924  00001ba8  afbf0000	sw	(r29),r31
  925  00001bac  8fc30004	lw	r3,4(r30)
  926  00001bb0  afa30004	sw	4(r29),r3
  927  00001bb4  8fc30008	lw	r3,8(r30)
  928  00001bb8  afa30008	sw	8(r29),r3
  929  00001bbc  8c21000c	lw	r1,12(r1)
  930  00001bc0  4c200000	jalr	r1
  931  00001bc4  54000000	nop; not filled.
  932  00001bc8  23bd0010	addi	r29,r29,#16
  933  00001bcc  08000008	j	L112_LF0
  934  00001bd0  54000000	nop; not filled.
  935  00001bd4          	L113_LF0:
  936  00001bd4  2001ffff	addi	r1,r0,#-1
  937  00001bd8          	L112_LF0:
  938  00001bd8  8fa20000	lw	r2,0(r29)
  939  00001bdc  8fa30004	lw	r3,4(r29)
  940  00001be0  8fdffff8	lw	r31,-8(r30)
  941  00001be4  001ee820	add	r29,r0,r30
  942  00001be8  8fdefffc	lw	r30,-4(r30)
  943  00001bec  4be00000	jr	r31
  944  00001bf0  54000000	nop
  945  00001bf4          	.endproc _FsSeek
  946  00001bf4          	.align 2
  947  00001bf4          	.proc _FsDelete
  948  00001bf4          	.global _FsDelete
  949  00001bf4          	_FsDelete:
  950                      ;  Function 'FsDelete'; 0 bytes of locals, 2 regs to save.
  951  00001bf4  afbefffc	sw	-4(r29),r30; push fp
  952  00001bf8  001df020	add	r30,r0,r29; fp = sp
  953  00001bfc  afbffff8	sw	-8(r29),r31; push ret addr
  954  00001c00  2fbd0010	subui	r29,r29,#16; alloc local storage
  955  00001c04  afa20000	sw	0(r29),r2
  956  00001c08  afa30004	sw	4(r29),r3
  957  00001c0c  8fc20000	lw	r2,(r30)
  958  00001c10  23bdfff0	addi	r29,r29,#-16
  959  00001c14  afa20000	sw	(r29),r2
  960  00001c18  3c010000	lhi	r1,((LC1_LF0)>>16)&0xffff
  961  00001c1c  2421b020	addui	r1,r1,(LC1_LF0)&0xffff
  962  00001c20  afa10004	sw	4(r29),r1
  963  00001c24  20030004	addi	r3,r0,#4
  964  00001c28  afa30008	sw	8(r29),r3
  965  00001c2c  0c001ba8	jal	_dstrncmp
  966  00001c30  54000000	nop; not filled.
  967  00001c34  23bd0010	addi	r29,r29,#16
  968  00001c38  64210000	snei	r1,r1,#0
  969  00001c3c  1420001c	bnez	r1,L121_LF0
  970  00001c40  54000000	nop; not filled.
  971  00001c44  20420004	addi	r2,r2,#4
  972  00001c48  23bdfff8	addi	r29,r29,#-8
  973  00001c4c  3c010000	lhi	r1,((_fs_LF0+44)>>16)&0xffff
  974  00001c50  2421b0d4	addui	r1,r1,(_fs_LF0+44)&0xffff
  975  00001c54  08000010	j	L123_LF0
  976  00001c58  54000000	nop; not filled.
  977  00001c5c          	L121_LF0:
  978  00001c5c  23bdfff8	addi	r29,r29,#-8
  979  00001c60  3c010000	lhi	r1,((_fs_LF0+20)>>16)&0xffff
  980  00001c64  2421b0bc	addui	r1,r1,(_fs_LF0+20)&0xffff
  981  00001c68          	L123_LF0:
  982  00001c68  afa20000	sw	(r29),r2
  983  00001c6c  8c210000	lw	r1,(r1)
  984  00001c70  4c200000	jalr	r1
  985  00001c74  54000000	nop; not filled.
  986  00001c78  23bd0008	addi	r29,r29,#8
  987  00001c7c  8fa20000	lw	r2,0(r29)
  988  00001c80  8fa30004	lw	r3,4(r29)
  989  00001c84  8fdffff8	lw	r31,-8(r30)
  990  00001c88  001ee820	add	r29,r0,r30
  991  00001c8c  8fdefffc	lw	r30,-4(r30)
  992  00001c90  4be00000	jr	r31
  993  00001c94  54000000	nop
  994  00001c98          	.endproc _FsDelete
  995  00001c98          	.data
  996  0000b072          	.align 2
  997  0000b074          	LC4_LF0:
  998  0000b074  41747465	.ascii "Attempting to open file %s into desc %d, mode %d.\n\000"
  998  0000b078  6d707469	
  998  0000b07c  6e672074	
  998  0000b080  6f206f70	
  998  0000b084  656e2066	
  998  0000b088  696c6520	
  998  0000b08c  25732069	
  998  0000b090  6e746f20	
  998  0000b094  64657363	
  998  0000b098  2025642c	
  998  0000b09c  206d6f64	
  998  0000b0a0  65202564	
  998  0000b0a4  2e0a00  	
  999  0000b0a7          	.text
 1000  00001c98          	.align 2
 1001  00001c98          	.proc _FsUnixOpen
 1002  00001c98          	.global _FsUnixOpen
 1003  00001c98          	_FsUnixOpen:
 1004                      ;  Function 'FsUnixOpen'; 0 bytes of locals, 5 regs to save.
 1005  00001c98  afbefffc	sw	-4(r29),r30; push fp
 1006  00001c9c  001df020	add	r30,r0,r29; fp = sp
 1007  00001ca0  afbffff8	sw	-8(r29),r31; push ret addr
 1008  00001ca4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1009  00001ca8  afa20000	sw	0(r29),r2
 1010  00001cac  afa30004	sw	4(r29),r3
 1011  00001cb0  afa40008	sw	8(r29),r4
 1012  00001cb4  afa5000c	sw	12(r29),r5
 1013  00001cb8  afa60010	sw	16(r29),r6
 1014  00001cbc  8fc40000	lw	r4,(r30)
 1015  00001cc0  8fc30004	lw	r3,4(r30)
 1016  00001cc4  8fc50008	lw	r5,8(r30)
 1017  00001cc8  23bdfff8	addi	r29,r29,#-8
 1018  00001ccc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 1019  00001cd0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 1020  00001cd4  afa20000	sw	(r29),r2
 1021  00001cd8  20060066	addi	r6,r0,#102
 1022  00001cdc  afa60004	sw	4(r29),r6
 1023  00001ce0  0c001e38	jal	_dindex
 1024  00001ce4  54000000	nop; not filled.
 1025  00001ce8  23bd0008	addi	r29,r29,#8
 1026  00001cec  64210000	snei	r1,r1,#0
 1027  00001cf0  1420002c	bnez	r1,L130_LF0
 1028  00001cf4  54000000	nop; not filled.
 1029  00001cf8  23bdfff8	addi	r29,r29,#-8
 1030  00001cfc  afa20000	sw	(r29),r2
 1031  00001d00  2006002b	addi	r6,r0,#43
 1032  00001d04  afa60004	sw	4(r29),r6
 1033  00001d08  0c001e10	jal	_dindex
 1034  00001d0c  54000000	nop; not filled.
 1035  00001d10  23bd0008	addi	r29,r29,#8
 1036  00001d14  64210000	snei	r1,r1,#0
 1037  00001d18  1020002c	beqz	r1,L129_LF0
 1038  00001d1c  54000000	nop; not filled.
 1039  00001d20          	L130_LF0:
 1040  00001d20  23bdfff0	addi	r29,r29,#-16
 1041  00001d24  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
 1042  00001d28  24c6b074	addui	r6,r6,(LC4_LF0)&0xffff
 1043  00001d2c  afa60000	sw	(r29),r6
 1044  00001d30  afa30004	sw	4(r29),r3
 1045  00001d34  afa40008	sw	8(r29),r4
 1046  00001d38  afa5000c	sw	12(r29),r5
 1047  00001d3c  0c0084b8	jal	_printf
 1048  00001d40  54000000	nop; not filled.
 1049  00001d44  23bd0010	addi	r29,r29,#16
 1050  00001d48          	L129_LF0:
 1051  00001d48  23bdfff8	addi	r29,r29,#-8
 1052  00001d4c  afa30000	sw	(r29),r3
 1053  00001d50  afa50004	sw	4(r29),r5
 1054  00001d54  0c008410	jal	_open
 1055  00001d58  54000000	nop; not filled.
 1056  00001d5c  00011820	add	r3,r0,r1
 1057  00001d60  50810004	slli	r1,r4,#0x4
 1058  00001d64  00240820	add	r1,r1,r4
 1059  00001d68  50210002	slli	r1,r1,#0x2
 1060  00001d6c  00240822	sub	r1,r1,r4
 1061  00001d70  50210002	slli	r1,r1,#0x2
 1062  00001d74  3c060000	lhi	r6,((_openfiles_LF0)>>16)&0xffff
 1063  00001d78  24c6b0d8	addui	r6,r6,(_openfiles_LF0)&0xffff
 1064  00001d7c  00260820	add	r1,r1,r6
 1065  00001d80  ac230108	sw	264(r1),r3
 1066  00001d84  23bd0008	addi	r29,r29,#8
 1067  00001d88  68620000	slti	r2,r3,#0
 1068  00001d8c  00030820	add	r1,r0,r3
 1069  00001d90  14400008	bnez	r2,L131_LF0
 1070  00001d94  54000000	nop; not filled.
 1071  00001d98  20010001	addi	r1,r0,#1
 1072  00001d9c          	L131_LF0:
 1073  00001d9c  8fa20000	lw	r2,0(r29)
 1074  00001da0  8fa30004	lw	r3,4(r29)
 1075  00001da4  8fa40008	lw	r4,8(r29)
 1076  00001da8  8fa5000c	lw	r5,12(r29)
 1077  00001dac  8fa60010	lw	r6,16(r29)
 1078  00001db0  8fdffff8	lw	r31,-8(r30)
 1079  00001db4  001ee820	add	r29,r0,r30
 1080  00001db8  8fdefffc	lw	r30,-4(r30)
 1081  00001dbc  4be00000	jr	r31
 1082  00001dc0  54000000	nop
 1083  00001dc4          	.endproc _FsUnixOpen
 1084  00001dc4          	.align 2
 1085  00001dc4          	.proc _FsUnixRead
 1086  00001dc4          	.global _FsUnixRead
 1087  00001dc4          	_FsUnixRead:
 1088                      ;  Function 'FsUnixRead'; 0 bytes of locals, 4 regs to save.
 1089  00001dc4  afbefffc	sw	-4(r29),r30; push fp
 1090  00001dc8  001df020	add	r30,r0,r29; fp = sp
 1091  00001dcc  afbffff8	sw	-8(r29),r31; push ret addr
 1092  00001dd0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1093  00001dd4  afa20000	sw	0(r29),r2
 1094  00001dd8  afa30004	sw	4(r29),r3
 1095  00001ddc  afa40008	sw	8(r29),r4
 1096  00001de0  afa5000c	sw	12(r29),r5
 1097  00001de4  8fc20000	lw	r2,(r30)
 1098  00001de8  8fc30004	lw	r3,4(r30)
 1099  00001dec  8fc40008	lw	r4,8(r30)
 1100  00001df0  23bdfff0	addi	r29,r29,#-16
 1101  00001df4  50410004	slli	r1,r2,#0x4
 1102  00001df8  00220820	add	r1,r1,r2
 1103  00001dfc  50210002	slli	r1,r1,#0x2
 1104  00001e00  00220822	sub	r1,r1,r2
 1105  00001e04  50210002	slli	r1,r1,#0x2
 1106  00001e08  3c050000	lhi	r5,((_openfiles_LF0)>>16)&0xffff
 1107  00001e0c  24a5b0d8	addui	r5,r5,(_openfiles_LF0)&0xffff
 1108  00001e10  00250820	add	r1,r1,r5
 1109  00001e14  8c210108	lw	r1,264(r1)
 1110  00001e18  afa10000	sw	(r29),r1
 1111  00001e1c  afa30004	sw	4(r29),r3
 1112  00001e20  afa40008	sw	8(r29),r4
 1113  00001e24  0c008358	jal	_read
 1114  00001e28  54000000	nop; not filled.
 1115  00001e2c  23bd0010	addi	r29,r29,#16
 1116  00001e30  8fa20000	lw	r2,0(r29)
 1117  00001e34  8fa30004	lw	r3,4(r29)
 1118  00001e38  8fa40008	lw	r4,8(r29)
 1119  00001e3c  8fa5000c	lw	r5,12(r29)
 1120  00001e40  8fdffff8	lw	r31,-8(r30)
 1121  00001e44  001ee820	add	r29,r0,r30
 1122  00001e48  8fdefffc	lw	r30,-4(r30)
 1123  00001e4c  4be00000	jr	r31
 1124  00001e50  54000000	nop
 1125  00001e54          	.endproc _FsUnixRead
 1126  00001e54          	.align 2
 1127  00001e54          	.proc _FsUnixWrite
 1128  00001e54          	.global _FsUnixWrite
 1129  00001e54          	_FsUnixWrite:
 1130                      ;  Function 'FsUnixWrite'; 0 bytes of locals, 4 regs to save.
 1131  00001e54  afbefffc	sw	-4(r29),r30; push fp
 1132  00001e58  001df020	add	r30,r0,r29; fp = sp
 1133  00001e5c  afbffff8	sw	-8(r29),r31; push ret addr
 1134  00001e60  2fbd0018	subui	r29,r29,#24; alloc local storage
 1135  00001e64  afa20000	sw	0(r29),r2
 1136  00001e68  afa30004	sw	4(r29),r3
 1137  00001e6c  afa40008	sw	8(r29),r4
 1138  00001e70  afa5000c	sw	12(r29),r5
 1139  00001e74  8fc20000	lw	r2,(r30)
 1140  00001e78  8fc30004	lw	r3,4(r30)
 1141  00001e7c  8fc40008	lw	r4,8(r30)
 1142  00001e80  23bdfff0	addi	r29,r29,#-16
 1143  00001e84  50410004	slli	r1,r2,#0x4
 1144  00001e88  00220820	add	r1,r1,r2
 1145  00001e8c  50210002	slli	r1,r1,#0x2
 1146  00001e90  00220822	sub	r1,r1,r2
 1147  00001e94  50210002	slli	r1,r1,#0x2
 1148  00001e98  3c050000	lhi	r5,((_openfiles_LF0)>>16)&0xffff
 1149  00001e9c  24a5b0d8	addui	r5,r5,(_openfiles_LF0)&0xffff
 1150  00001ea0  00250820	add	r1,r1,r5
 1151  00001ea4  8c210108	lw	r1,264(r1)
 1152  00001ea8  afa10000	sw	(r29),r1
 1153  00001eac  afa30004	sw	4(r29),r3
 1154  00001eb0  afa40008	sw	8(r29),r4
 1155  00001eb4  0c0082d4	jal	_write
 1156  00001eb8  54000000	nop; not filled.
 1157  00001ebc  23bd0010	addi	r29,r29,#16
 1158  00001ec0  8fa20000	lw	r2,0(r29)
 1159  00001ec4  8fa30004	lw	r3,4(r29)
 1160  00001ec8  8fa40008	lw	r4,8(r29)
 1161  00001ecc  8fa5000c	lw	r5,12(r29)
 1162  00001ed0  8fdffff8	lw	r31,-8(r30)
 1163  00001ed4  001ee820	add	r29,r0,r30
 1164  00001ed8  8fdefffc	lw	r30,-4(r30)
 1165  00001edc  4be00000	jr	r31
 1166  00001ee0  54000000	nop
 1167  00001ee4          	.endproc _FsUnixWrite
 1168  00001ee4          	.align 2
 1169  00001ee4          	.proc _FsUnixSeek
 1170  00001ee4          	.global _FsUnixSeek
 1171  00001ee4          	_FsUnixSeek:
 1172                      ;  Function 'FsUnixSeek'; 0 bytes of locals, 4 regs to save.
 1173  00001ee4  afbefffc	sw	-4(r29),r30; push fp
 1174  00001ee8  001df020	add	r30,r0,r29; fp = sp
 1175  00001eec  afbffff8	sw	-8(r29),r31; push ret addr
 1176  00001ef0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1177  00001ef4  afa20000	sw	0(r29),r2
 1178  00001ef8  afa30004	sw	4(r29),r3
 1179  00001efc  afa40008	sw	8(r29),r4
 1180  00001f00  afa5000c	sw	12(r29),r5
 1181  00001f04  8fc20000	lw	r2,(r30)
 1182  00001f08  8fc30004	lw	r3,4(r30)
 1183  00001f0c  8fc40008	lw	r4,8(r30)
 1184  00001f10  23bdfff0	addi	r29,r29,#-16
 1185  00001f14  50410004	slli	r1,r2,#0x4
 1186  00001f18  00220820	add	r1,r1,r2
 1187  00001f1c  50210002	slli	r1,r1,#0x2
 1188  00001f20  00220822	sub	r1,r1,r2
 1189  00001f24  50210002	slli	r1,r1,#0x2
 1190  00001f28  3c050000	lhi	r5,((_openfiles_LF0)>>16)&0xffff
 1191  00001f2c  24a5b0d8	addui	r5,r5,(_openfiles_LF0)&0xffff
 1192  00001f30  00250820	add	r1,r1,r5
 1193  00001f34  8c210108	lw	r1,264(r1)
 1194  00001f38  afa10000	sw	(r29),r1
 1195  00001f3c  afa30004	sw	4(r29),r3
 1196  00001f40  afa40008	sw	8(r29),r4
 1197  00001f44  0c008250	jal	_lseek
 1198  00001f48  54000000	nop; not filled.
 1199  00001f4c  23bd0010	addi	r29,r29,#16
 1200  00001f50  8fa20000	lw	r2,0(r29)
 1201  00001f54  8fa30004	lw	r3,4(r29)
 1202  00001f58  8fa40008	lw	r4,8(r29)
 1203  00001f5c  8fa5000c	lw	r5,12(r29)
 1204  00001f60  8fdffff8	lw	r31,-8(r30)
 1205  00001f64  001ee820	add	r29,r0,r30
 1206  00001f68  8fdefffc	lw	r30,-4(r30)
 1207  00001f6c  4be00000	jr	r31
 1208  00001f70  54000000	nop
 1209  00001f74          	.endproc _FsUnixSeek
 1210  00001f74          	.align 2
 1211  00001f74          	.proc _FsUnixClose
 1212  00001f74          	.global _FsUnixClose
 1213  00001f74          	_FsUnixClose:
 1214                      ;  Function 'FsUnixClose'; 0 bytes of locals, 2 regs to save.
 1215  00001f74  afbefffc	sw	-4(r29),r30; push fp
 1216  00001f78  001df020	add	r30,r0,r29; fp = sp
 1217  00001f7c  afbffff8	sw	-8(r29),r31; push ret addr
 1218  00001f80  2fbd0010	subui	r29,r29,#16; alloc local storage
 1219  00001f84  afa20000	sw	0(r29),r2
 1220  00001f88  afa30004	sw	4(r29),r3
 1221  00001f8c  8fc20000	lw	r2,(r30)
 1222  00001f90  23bdfff8	addi	r29,r29,#-8
 1223  00001f94  50410004	slli	r1,r2,#0x4
 1224  00001f98  00220820	add	r1,r1,r2
 1225  00001f9c  50210002	slli	r1,r1,#0x2
 1226  00001fa0  00220822	sub	r1,r1,r2
 1227  00001fa4  50210002	slli	r1,r1,#0x2
 1228  00001fa8  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
 1229  00001fac  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
 1230  00001fb0  00230820	add	r1,r1,r3
 1231  00001fb4  8c210108	lw	r1,264(r1)
 1232  00001fb8  afa10000	sw	(r29),r1
 1233  00001fbc  0c0081b4	jal	_close
 1234  00001fc0  54000000	nop; not filled.
 1235  00001fc4  23bd0008	addi	r29,r29,#8
 1236  00001fc8  8fa20000	lw	r2,0(r29)
 1237  00001fcc  8fa30004	lw	r3,4(r29)
 1238  00001fd0  8fdffff8	lw	r31,-8(r30)
 1239  00001fd4  001ee820	add	r29,r0,r30
 1240  00001fd8  8fdefffc	lw	r30,-4(r30)
 1241  00001fdc  4be00000	jr	r31
 1242  00001fe0  54000000	nop
 1243  00001fe4          	.endproc _FsUnixClose
 1244  00001fe4          	.align 2
 1245  00001fe4          	.proc _FsUnixDelete
 1246  00001fe4          	.global _FsUnixDelete
 1247  00001fe4          	_FsUnixDelete:
 1248                      ;  Function 'FsUnixDelete'; 0 bytes of locals, 0 regs to save.
 1249  00001fe4  afbefffc	sw	-4(r29),r30; push fp
 1250  00001fe8  001df020	add	r30,r0,r29; fp = sp
 1251  00001fec  afbffff8	sw	-8(r29),r31; push ret addr
 1252  00001ff0  2fbd0008	subui	r29,r29,#8; alloc local storage
 1253  00001ff4  2001ffff	addi	r1,r0,#-1
 1254  00001ff8  8fdffff8	lw	r31,-8(r30)
 1255  00001ffc  001ee820	add	r29,r0,r30
 1256  00002000  8fdefffc	lw	r30,-4(r30)
 1257  00002004  4be00000	jr	r31
 1258  00002008  54000000	nop
 1259  0000200c          	.endproc _FsUnixDelete
 1260  0000200c          	.align 2
 1261  0000200c          	.proc _FsDlxIo
 1262  0000200c          	.global _FsDlxIo
 1263  0000200c          	_FsDlxIo:
 1264                      ;  Function 'FsDlxIo'; 0 bytes of locals, 0 regs to save.
 1265  0000200c  afbefffc	sw	-4(r29),r30; push fp
 1266  00002010  001df020	add	r30,r0,r29; fp = sp
 1267  00002014  afbffff8	sw	-8(r29),r31; push ret addr
 1268  00002018  2fbd0008	subui	r29,r29,#8; alloc local storage
 1269  0000201c  20010001	addi	r1,r0,#1
 1270  00002020  8fdffff8	lw	r31,-8(r30)
 1271  00002024  001ee820	add	r29,r0,r30
 1272  00002028  8fdefffc	lw	r30,-4(r30)
 1273  0000202c  4be00000	jr	r31
 1274  00002030  54000000	nop
 1275  00002034          	.endproc _FsDlxIo
 1276  00002034          	.align 2
 1277  00002034          	.proc _FsDlxRead
 1278  00002034          	.global _FsDlxRead
 1279  00002034          	_FsDlxRead:
 1280                      ;  Function 'FsDlxRead'; 0 bytes of locals, 0 regs to save.
 1281  00002034  afbefffc	sw	-4(r29),r30; push fp
 1282  00002038  001df020	add	r30,r0,r29; fp = sp
 1283  0000203c  afbffff8	sw	-8(r29),r31; push ret addr
 1284  00002040  2fbd0008	subui	r29,r29,#8; alloc local storage
 1285  00002044  20010001	addi	r1,r0,#1
 1286  00002048  8fdffff8	lw	r31,-8(r30)
 1287  0000204c  001ee820	add	r29,r0,r30
 1288  00002050  8fdefffc	lw	r30,-4(r30)
 1289  00002054  4be00000	jr	r31
 1290  00002058  54000000	nop
 1291  0000205c          	.endproc _FsDlxRead
 1292  0000205c          	.align 2
 1293  0000205c          	.proc _FsDlxWrite
 1294  0000205c          	.global _FsDlxWrite
 1295  0000205c          	_FsDlxWrite:
 1296                      ;  Function 'FsDlxWrite'; 0 bytes of locals, 0 regs to save.
 1297  0000205c  afbefffc	sw	-4(r29),r30; push fp
 1298  00002060  001df020	add	r30,r0,r29; fp = sp
 1299  00002064  afbffff8	sw	-8(r29),r31; push ret addr
 1300  00002068  2fbd0008	subui	r29,r29,#8; alloc local storage
 1301  0000206c  20010001	addi	r1,r0,#1
 1302  00002070  8fdffff8	lw	r31,-8(r30)
 1303  00002074  001ee820	add	r29,r0,r30
 1304  00002078  8fdefffc	lw	r30,-4(r30)
 1305  0000207c  4be00000	jr	r31
 1306  00002080  54000000	nop
 1307  00002084          	.endproc _FsDlxWrite
 1308  00002084          	.align 2
 1309  00002084          	.proc _FsDlxOpen
 1310  00002084          	.global _FsDlxOpen
 1311  00002084          	_FsDlxOpen:
 1312                      ;  Function 'FsDlxOpen'; 0 bytes of locals, 1 regs to save.
 1313  00002084  afbefffc	sw	-4(r29),r30; push fp
 1314  00002088  001df020	add	r30,r0,r29; fp = sp
 1315  0000208c  afbffff8	sw	-8(r29),r31; push ret addr
 1316  00002090  2fbd0010	subui	r29,r29,#16; alloc local storage
 1317  00002094  afa20000	sw	0(r29),r2
 1318  00002098  8fc10000	lw	r1,(r30)
 1319  0000209c  50220004	slli	r2,r1,#0x4
 1320  000020a0  00411020	add	r2,r2,r1
 1321  000020a4  50420002	slli	r2,r2,#0x2
 1322  000020a8  00410822	sub	r1,r2,r1
 1323  000020ac  50210002	slli	r1,r1,#0x2
 1324  000020b0  3c1f0000	lhi	r31,((_openfiles_LF0)>>16)&0xffff
 1325  000020b4  27ffb0d8	addui	r31,r31,(_openfiles_LF0)&0xffff
 1326  000020b8  003f0820	add	r1,r1,r31
 1327  000020bc  201f0000	addi	r31,r0,#0
 1328  000020c0  ac3f0108	sw	264(r1),r31
 1329  000020c4  20010001	addi	r1,r0,#1
 1330  000020c8  8fa20000	lw	r2,0(r29)
 1331  000020cc  8fdffff8	lw	r31,-8(r30)
 1332  000020d0  001ee820	add	r29,r0,r30
 1333  000020d4  8fdefffc	lw	r30,-4(r30)
 1334  000020d8  4be00000	jr	r31
 1335  000020dc  54000000	nop
 1336  000020e0          	.endproc _FsDlxOpen
 1337  000020e0          	.align 2
 1338  000020e0          	.proc _FsDlxSeek
 1339  000020e0          	.global _FsDlxSeek
 1340  000020e0          	_FsDlxSeek:
 1341                      ;  Function 'FsDlxSeek'; 0 bytes of locals, 1 regs to save.
 1342  000020e0  afbefffc	sw	-4(r29),r30; push fp
 1343  000020e4  001df020	add	r30,r0,r29; fp = sp
 1344  000020e8  afbffff8	sw	-8(r29),r31; push ret addr
 1345  000020ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1346  000020f0  afa20000	sw	0(r29),r2
 1347  000020f4  8fc10000	lw	r1,(r30)
 1348  000020f8  50220004	slli	r2,r1,#0x4
 1349  000020fc  00411020	add	r2,r2,r1
 1350  00002100  50420002	slli	r2,r2,#0x2
 1351  00002104  00410822	sub	r1,r2,r1
 1352  00002108  50210002	slli	r1,r1,#0x2
 1353  0000210c  3c1f0000	lhi	r31,((_openfiles_LF0)>>16)&0xffff
 1354  00002110  27ffb0d8	addui	r31,r31,(_openfiles_LF0)&0xffff
 1355  00002114  003f0820	add	r1,r1,r31
 1356  00002118  8c210108	lw	r1,264(r1)
 1357  0000211c  8fa20000	lw	r2,0(r29)
 1358  00002120  8fdffff8	lw	r31,-8(r30)
 1359  00002124  001ee820	add	r29,r0,r30
 1360  00002128  8fdefffc	lw	r30,-4(r30)
 1361  0000212c  4be00000	jr	r31
 1362  00002130  54000000	nop
 1363  00002134          	.endproc _FsDlxSeek
 1364  00002134          	.align 2
 1365  00002134          	.proc _FsDlxClose
 1366  00002134          	.global _FsDlxClose
 1367  00002134          	_FsDlxClose:
 1368                      ;  Function 'FsDlxClose'; 0 bytes of locals, 0 regs to save.
 1369  00002134  afbefffc	sw	-4(r29),r30; push fp
 1370  00002138  001df020	add	r30,r0,r29; fp = sp
 1371  0000213c  afbffff8	sw	-8(r29),r31; push ret addr
 1372  00002140  2fbd0008	subui	r29,r29,#8; alloc local storage
 1373  00002144  20010001	addi	r1,r0,#1
 1374  00002148  8fdffff8	lw	r31,-8(r30)
 1375  0000214c  001ee820	add	r29,r0,r30
 1376  00002150  8fdefffc	lw	r30,-4(r30)
 1377  00002154  4be00000	jr	r31
 1378  00002158  54000000	nop
 1379  0000215c          	.endproc _FsDlxClose
 1380  0000215c          	.align 2
 1381  0000215c          	.proc _FsDlxDelete
 1382  0000215c          	.global _FsDlxDelete
 1383  0000215c          	_FsDlxDelete:
 1384                      ;  Function 'FsDlxDelete'; 0 bytes of locals, 0 regs to save.
 1385  0000215c  afbefffc	sw	-4(r29),r30; push fp
 1386  00002160  001df020	add	r30,r0,r29; fp = sp
 1387  00002164  afbffff8	sw	-8(r29),r31; push ret addr
 1388  00002168  2fbd0008	subui	r29,r29,#8; alloc local storage
 1389  0000216c  20010001	addi	r1,r0,#1
 1390  00002170  8fdffff8	lw	r31,-8(r30)
 1391  00002174  001ee820	add	r29,r0,r30
 1392  00002178  8fdefffc	lw	r30,-4(r30)
 1393  0000217c  4be00000	jr	r31
 1394  00002180  54000000	nop
 1395  00002184          	.endproc _FsDlxDelete
 1396  00002184          	.align 2
 1397  00002184          	.proc _FsModuleInit
 1398  00002184          	.global _FsModuleInit
 1399  00002184          	_FsModuleInit:
 1400                      ;  Function 'FsModuleInit'; 0 bytes of locals, 2 regs to save.
 1401  00002184  afbefffc	sw	-4(r29),r30; push fp
 1402  00002188  001df020	add	r30,r0,r29; fp = sp
 1403  0000218c  afbffff8	sw	-8(r29),r31; push ret addr
 1404  00002190  2fbd0010	subui	r29,r29,#16; alloc local storage
 1405  00002194  afa20000	sw	0(r29),r2
 1406  00002198  afa30004	sw	4(r29),r3
 1407  0000219c  3c1f0000	lhi	r31,((_openfiles_LF0)>>16)&0xffff
 1408  000021a0  27ffb0d8	addui	r31,r31,(_openfiles_LF0)&0xffff
 1409  000021a4  23e22074	addi	r2,r31,#8308
 1410  000021a8          	L185_LF0:
 1411  000021a8  20030000	addi	r3,r0,#0
 1412  000021ac  afe30004	sw	4(r31),r3
 1413  000021b0  23ff010c	addi	r31,r31,#268
 1414  000021b4  03e2082c	sle	r1,r31,r2
 1415  000021b8  1420ffec	bnez	r1,L185_LF0
 1416  000021bc  54000000	nop; not filled.
 1417  000021c0  3c010000	lhi	r1,((_fs_LF0)>>16)&0xffff
 1418  000021c4  2421b0a8	addui	r1,r1,(_fs_LF0)&0xffff
 1419  000021c8  3c030000	lhi	r3,((_FsUnixOpen)>>16)&0xffff
 1420  000021cc  24631c98	addui	r3,r3,(_FsUnixOpen)&0xffff
 1421  000021d0  ac230000	sw	(r1),r3
 1422  000021d4  3c030000	lhi	r3,((_FsUnixClose)>>16)&0xffff
 1423  000021d8  24631f74	addui	r3,r3,(_FsUnixClose)&0xffff
 1424  000021dc  ac230010	sw	16(r1),r3
 1425  000021e0  3c030000	lhi	r3,((_FsUnixRead)>>16)&0xffff
 1426  000021e4  24631dc4	addui	r3,r3,(_FsUnixRead)&0xffff
 1427  000021e8  ac230004	sw	4(r1),r3
 1428  000021ec  3c030000	lhi	r3,((_FsUnixWrite)>>16)&0xffff
 1429  000021f0  24631e54	addui	r3,r3,(_FsUnixWrite)&0xffff
 1430  000021f4  ac230008	sw	8(r1),r3
 1431  000021f8  3c030000	lhi	r3,((_FsUnixSeek)>>16)&0xffff
 1432  000021fc  24631ee4	addui	r3,r3,(_FsUnixSeek)&0xffff
 1433  00002200  ac23000c	sw	12(r1),r3
 1434  00002204  3c030000	lhi	r3,((_FsUnixDelete)>>16)&0xffff
 1435  00002208  24631fe4	addui	r3,r3,(_FsUnixDelete)&0xffff
 1436  0000220c  ac230014	sw	20(r1),r3
 1437  00002210  3c030000	lhi	r3,((_FsDlxOpen)>>16)&0xffff
 1438  00002214  24632084	addui	r3,r3,(_FsDlxOpen)&0xffff
 1439  00002218  ac230018	sw	24(r1),r3
 1440  0000221c  3c030000	lhi	r3,((_FsDlxClose)>>16)&0xffff
 1441  00002220  24632134	addui	r3,r3,(_FsDlxClose)&0xffff
 1442  00002224  ac230028	sw	40(r1),r3
 1443  00002228  3c030000	lhi	r3,((_FsDlxRead)>>16)&0xffff
 1444  0000222c  24632034	addui	r3,r3,(_FsDlxRead)&0xffff
 1445  00002230  ac23001c	sw	28(r1),r3
 1446  00002234  3c030000	lhi	r3,((_FsDlxWrite)>>16)&0xffff
 1447  00002238  2463205c	addui	r3,r3,(_FsDlxWrite)&0xffff
 1448  0000223c  ac230020	sw	32(r1),r3
 1449  00002240  3c030000	lhi	r3,((_FsDlxSeek)>>16)&0xffff
 1450  00002244  246320e0	addui	r3,r3,(_FsDlxSeek)&0xffff
 1451  00002248  ac230024	sw	36(r1),r3
 1452  0000224c  3c030000	lhi	r3,((_FsDlxDelete)>>16)&0xffff
 1453  00002250  2463215c	addui	r3,r3,(_FsDlxDelete)&0xffff
 1454  00002254  ac23002c	sw	44(r1),r3
 1455  00002258  8fa20000	lw	r2,0(r29)
 1456  0000225c  8fa30004	lw	r3,4(r29)
 1457  00002260  8fdffff8	lw	r31,-8(r30)
 1458  00002264  001ee820	add	r29,r0,r30
 1459  00002268  8fdefffc	lw	r30,-4(r30)
 1460  0000226c  4be00000	jr	r31
 1461  00002270  54000000	nop
 1462  00002274          	.endproc _FsModuleInit
 1463  00002274          	.data
 1464  0000b0a7          	.align 2
 1465  0000b0a8          	_fs_LF0:
 1466  0000b0a8          	.space 48
 1467  0000b0d8          	.align 2
 1468  0000b0d8          	_openfiles_LF0:
 1469  0000b0d8          	.space 8576
 1470                      ; Compiled by GCC
 1471  0000d258          	.text
 1472  00002274          	.align 2
 1473  00002274          	.proc _isspace
 1474  00002274          	.global _isspace
 1475  00002274          	_isspace:
 1476                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 1477  00002274  afbefffc	sw	-4(r29),r30; push fp
 1478  00002278  001df020	add	r30,r0,r29; fp = sp
 1479  0000227c  afbffff8	sw	-8(r29),r31; push ret addr
 1480  00002280  2fbd0010	subui	r29,r29,#16; alloc local storage
 1481  00002284  afa20000	sw	0(r29),r2
 1482  00002288  83c20003	lb	r2,3(r30)
 1483  0000228c  201f0000	addi	r31,r0,#0
 1484  00002290  304100ff	andi	r1,r2,#0x00ff
 1485  00002294  60210020	seqi	r1,r1,#32
 1486  00002298  14200018	bnez	r1,L6_LF1
 1487  0000229c  54000000	nop; not filled.
 1488  000022a0  2041fff7	addi	r1,r2,#-9
 1489  000022a4  302100ff	andi	r1,r1,#0x00ff
 1490  000022a8  70210001	sleui	r1,r1,#1
 1491  000022ac  10200008	beqz	r1,L5_LF1
 1492  000022b0  54000000	nop; not filled.
 1493  000022b4          	L6_LF1:
 1494  000022b4  201f0001	addi	r31,r0,#1
 1495  000022b8          	L5_LF1:
 1496  000022b8  001f0820	add	r1,r0,r31
 1497  000022bc  8fa20000	lw	r2,0(r29)
 1498  000022c0  8fdffff8	lw	r31,-8(r30)
 1499  000022c4  001ee820	add	r29,r0,r30
 1500  000022c8  8fdefffc	lw	r30,-4(r30)
 1501  000022cc  4be00000	jr	r31
 1502  000022d0  54000000	nop
 1503  000022d4          	.endproc _isspace
 1504  000022d4          	.align 2
 1505  000022d4          	.proc _isxdigit
 1506  000022d4          	.global _isxdigit
 1507  000022d4          	_isxdigit:
 1508                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 1509  000022d4  afbefffc	sw	-4(r29),r30; push fp
 1510  000022d8  001df020	add	r30,r0,r29; fp = sp
 1511  000022dc  afbffff8	sw	-8(r29),r31; push ret addr
 1512  000022e0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1513  000022e4  afa20000	sw	0(r29),r2
 1514  000022e8  83df0003	lb	r31,3(r30)
 1515  000022ec  20020000	addi	r2,r0,#0
 1516  000022f0  23e1ffd0	addi	r1,r31,#-48
 1517  000022f4  302100ff	andi	r1,r1,#0x00ff
 1518  000022f8  70210009	sleui	r1,r1,#9
 1519  000022fc  14200028	bnez	r1,L12_LF1
 1520  00002300  54000000	nop; not filled.
 1521  00002304  23e1ff9f	addi	r1,r31,#-97
 1522  00002308  302100ff	andi	r1,r1,#0x00ff
 1523  0000230c  70210005	sleui	r1,r1,#5
 1524  00002310  14200014	bnez	r1,L12_LF1
 1525  00002314  54000000	nop; not filled.
 1526  00002318  33e100ff	andi	r1,r31,#0x00ff
 1527  0000231c  64210041	snei	r1,r1,#65
 1528  00002320  14200008	bnez	r1,L11_LF1
 1529  00002324  54000000	nop; not filled.
 1530  00002328          	L12_LF1:
 1531  00002328  20020001	addi	r2,r0,#1
 1532  0000232c          	L11_LF1:
 1533  0000232c  00020820	add	r1,r0,r2
 1534  00002330  8fa20000	lw	r2,0(r29)
 1535  00002334  8fdffff8	lw	r31,-8(r30)
 1536  00002338  001ee820	add	r29,r0,r30
 1537  0000233c  8fdefffc	lw	r30,-4(r30)
 1538  00002340  4be00000	jr	r31
 1539  00002344  54000000	nop
 1540  00002348          	.endproc _isxdigit
 1541  00002348          	.align 2
 1542  00002348          	.proc _DisableIntrs
 1543  00002348          	.global _DisableIntrs
 1544  00002348          	_DisableIntrs:
 1545                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 1546  00002348  afbefffc	sw	-4(r29),r30; push fp
 1547  0000234c  001df020	add	r30,r0,r29; fp = sp
 1548  00002350  afbffff8	sw	-8(r29),r31; push ret addr
 1549  00002354  2fbd0010	subui	r29,r29,#16; alloc local storage
 1550  00002358  afa20000	sw	0(r29),r2
 1551  0000235c  23bdfff8	addi	r29,r29,#-8
 1552  00002360  2002000f	addi	r2,r0,#15
 1553  00002364  afa20000	sw	(r29),r2
 1554  00002368  0c007d38	jal	_SetIntrs
 1555  0000236c  54000000	nop; not filled.
 1556  00002370  23bd0008	addi	r29,r29,#8
 1557  00002374  8fa20000	lw	r2,0(r29)
 1558  00002378  8fdffff8	lw	r31,-8(r30)
 1559  0000237c  001ee820	add	r29,r0,r30
 1560  00002380  8fdefffc	lw	r30,-4(r30)
 1561  00002384  4be00000	jr	r31
 1562  00002388  54000000	nop
 1563  0000238c          	.endproc _DisableIntrs
 1564  0000238c          	.align 2
 1565  0000238c          	.proc _EnableIntrs
 1566  0000238c          	.global _EnableIntrs
 1567  0000238c          	_EnableIntrs:
 1568                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 1569  0000238c  afbefffc	sw	-4(r29),r30; push fp
 1570  00002390  001df020	add	r30,r0,r29; fp = sp
 1571  00002394  afbffff8	sw	-8(r29),r31; push ret addr
 1572  00002398  2fbd0010	subui	r29,r29,#16; alloc local storage
 1573  0000239c  afa20000	sw	0(r29),r2
 1574  000023a0  23bdfff8	addi	r29,r29,#-8
 1575  000023a4  20020000	addi	r2,r0,#0
 1576  000023a8  afa20000	sw	(r29),r2
 1577  000023ac  0c007cf4	jal	_SetIntrs
 1578  000023b0  54000000	nop; not filled.
 1579  000023b4  23bd0008	addi	r29,r29,#8
 1580  000023b8  8fa20000	lw	r2,0(r29)
 1581  000023bc  8fdffff8	lw	r31,-8(r30)
 1582  000023c0  001ee820	add	r29,r0,r30
 1583  000023c4  8fdefffc	lw	r30,-4(r30)
 1584  000023c8  4be00000	jr	r31
 1585  000023cc  54000000	nop
 1586  000023d0          	.endproc _EnableIntrs
 1587  000023d0          	.align 2
 1588  000023d0          	.proc _RestoreIntrs
 1589  000023d0          	.global _RestoreIntrs
 1590  000023d0          	_RestoreIntrs:
 1591                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 1592  000023d0  afbefffc	sw	-4(r29),r30; push fp
 1593  000023d4  001df020	add	r30,r0,r29; fp = sp
 1594  000023d8  afbffff8	sw	-8(r29),r31; push ret addr
 1595  000023dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1596  000023e0  afa20000	sw	0(r29),r2
 1597  000023e4  23bdfff8	addi	r29,r29,#-8
 1598  000023e8  8fc20000	lw	r2,(r30)
 1599  000023ec  afa20000	sw	(r29),r2
 1600  000023f0  0c007cb0	jal	_SetIntrs
 1601  000023f4  54000000	nop; not filled.
 1602  000023f8  23bd0008	addi	r29,r29,#8
 1603  000023fc  8fa20000	lw	r2,0(r29)
 1604  00002400  8fdffff8	lw	r31,-8(r30)
 1605  00002404  001ee820	add	r29,r0,r30
 1606  00002408  8fdefffc	lw	r30,-4(r30)
 1607  0000240c  4be00000	jr	r31
 1608  00002410  54000000	nop
 1609  00002414          	.endproc _RestoreIntrs
 1610  00002414          	.align 2
 1611  00002414          	.proc _QueueLinkInit
 1612  00002414          	.global _QueueLinkInit
 1613  00002414          	_QueueLinkInit:
 1614                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 1615  00002414  afbefffc	sw	-4(r29),r30; push fp
 1616  00002418  001df020	add	r30,r0,r29; fp = sp
 1617  0000241c  afbffff8	sw	-8(r29),r31; push ret addr
 1618  00002420  2fbd0010	subui	r29,r29,#16; alloc local storage
 1619  00002424  afa20000	sw	0(r29),r2
 1620  00002428  8fc10000	lw	r1,(r30)
 1621  0000242c  8fc20004	lw	r2,4(r30)
 1622  00002430  201f0000	addi	r31,r0,#0
 1623  00002434  ac3f0000	sw	(r1),r31
 1624  00002438  ac22000c	sw	12(r1),r2
 1625  0000243c  8fa20000	lw	r2,0(r29)
 1626  00002440  8fdffff8	lw	r31,-8(r30)
 1627  00002444  001ee820	add	r29,r0,r30
 1628  00002448  8fdefffc	lw	r30,-4(r30)
 1629  0000244c  4be00000	jr	r31
 1630  00002450  54000000	nop
 1631  00002454          	.endproc _QueueLinkInit
 1632  00002454          	.align 2
 1633  00002454          	.proc _QueueNext
 1634  00002454          	.global _QueueNext
 1635  00002454          	_QueueNext:
 1636                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 1637  00002454  afbefffc	sw	-4(r29),r30; push fp
 1638  00002458  001df020	add	r30,r0,r29; fp = sp
 1639  0000245c  afbffff8	sw	-8(r29),r31; push ret addr
 1640  00002460  2fbd0008	subui	r29,r29,#8; alloc local storage
 1641  00002464  8fc10000	lw	r1,(r30)
 1642  00002468  8c210000	lw	r1,(r1)
 1643  0000246c  8fdffff8	lw	r31,-8(r30)
 1644  00002470  001ee820	add	r29,r0,r30
 1645  00002474  8fdefffc	lw	r30,-4(r30)
 1646  00002478  4be00000	jr	r31
 1647  0000247c  54000000	nop
 1648  00002480          	.endproc _QueueNext
 1649  00002480          	.align 2
 1650  00002480          	.proc _QueuePrev
 1651  00002480          	.global _QueuePrev
 1652  00002480          	_QueuePrev:
 1653                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 1654  00002480  afbefffc	sw	-4(r29),r30; push fp
 1655  00002484  001df020	add	r30,r0,r29; fp = sp
 1656  00002488  afbffff8	sw	-8(r29),r31; push ret addr
 1657  0000248c  2fbd0008	subui	r29,r29,#8; alloc local storage
 1658  00002490  8fc10000	lw	r1,(r30)
 1659  00002494  8c210004	lw	r1,4(r1)
 1660  00002498  8fdffff8	lw	r31,-8(r30)
 1661  0000249c  001ee820	add	r29,r0,r30
 1662  000024a0  8fdefffc	lw	r30,-4(r30)
 1663  000024a4  4be00000	jr	r31
 1664  000024a8  54000000	nop
 1665  000024ac          	.endproc _QueuePrev
 1666  000024ac          	.align 2
 1667  000024ac          	.proc _QueueFirst
 1668  000024ac          	.global _QueueFirst
 1669  000024ac          	_QueueFirst:
 1670                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 1671  000024ac  afbefffc	sw	-4(r29),r30; push fp
 1672  000024b0  001df020	add	r30,r0,r29; fp = sp
 1673  000024b4  afbffff8	sw	-8(r29),r31; push ret addr
 1674  000024b8  2fbd0008	subui	r29,r29,#8; alloc local storage
 1675  000024bc  8fc10000	lw	r1,(r30)
 1676  000024c0  8c210000	lw	r1,(r1)
 1677  000024c4  8fdffff8	lw	r31,-8(r30)
 1678  000024c8  001ee820	add	r29,r0,r30
 1679  000024cc  8fdefffc	lw	r30,-4(r30)
 1680  000024d0  4be00000	jr	r31
 1681  000024d4  54000000	nop
 1682  000024d8          	.endproc _QueueFirst
 1683  000024d8          	.align 2
 1684  000024d8          	.proc _QueueLast
 1685  000024d8          	.global _QueueLast
 1686  000024d8          	_QueueLast:
 1687                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 1688  000024d8  afbefffc	sw	-4(r29),r30; push fp
 1689  000024dc  001df020	add	r30,r0,r29; fp = sp
 1690  000024e0  afbffff8	sw	-8(r29),r31; push ret addr
 1691  000024e4  2fbd0008	subui	r29,r29,#8; alloc local storage
 1692  000024e8  8fc10000	lw	r1,(r30)
 1693  000024ec  8c210004	lw	r1,4(r1)
 1694  000024f0  8fdffff8	lw	r31,-8(r30)
 1695  000024f4  001ee820	add	r29,r0,r30
 1696  000024f8  8fdefffc	lw	r30,-4(r30)
 1697  000024fc  4be00000	jr	r31
 1698  00002500  54000000	nop
 1699  00002504          	.endproc _QueueLast
 1700  00002504          	.align 2
 1701  00002504          	.proc _QueueInsertAfter
 1702  00002504          	.global _QueueInsertAfter
 1703  00002504          	_QueueInsertAfter:
 1704                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 1705  00002504  afbefffc	sw	-4(r29),r30; push fp
 1706  00002508  001df020	add	r30,r0,r29; fp = sp
 1707  0000250c  afbffff8	sw	-8(r29),r31; push ret addr
 1708  00002510  2fbd0010	subui	r29,r29,#16; alloc local storage
 1709  00002514  afa20000	sw	0(r29),r2
 1710  00002518  afa30004	sw	4(r29),r3
 1711  0000251c  8fc30000	lw	r3,(r30)
 1712  00002520  8fc20004	lw	r2,4(r30)
 1713  00002524  8fc10008	lw	r1,8(r30)
 1714  00002528  ac230008	sw	8(r1),r3
 1715  0000252c  ac220004	sw	4(r1),r2
 1716  00002530  8c5f0000	lw	r31,(r2)
 1717  00002534  ac3f0000	sw	(r1),r31
 1718  00002538  ac410000	sw	(r2),r1
 1719  0000253c  8c220000	lw	r2,(r1)
 1720  00002540  ac410004	sw	4(r2),r1
 1721  00002544  8c610008	lw	r1,8(r3)
 1722  00002548  20210001	addi	r1,r1,#1
 1723  0000254c  ac610008	sw	8(r3),r1
 1724  00002550  8fa20000	lw	r2,0(r29)
 1725  00002554  8fa30004	lw	r3,4(r29)
 1726  00002558  8fdffff8	lw	r31,-8(r30)
 1727  0000255c  001ee820	add	r29,r0,r30
 1728  00002560  8fdefffc	lw	r30,-4(r30)
 1729  00002564  4be00000	jr	r31
 1730  00002568  54000000	nop
 1731  0000256c          	.endproc _QueueInsertAfter
 1732  0000256c          	.align 2
 1733  0000256c          	.proc _QueueInsertFirst
 1734  0000256c          	.global _QueueInsertFirst
 1735  0000256c          	_QueueInsertFirst:
 1736                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 1737  0000256c  afbefffc	sw	-4(r29),r30; push fp
 1738  00002570  001df020	add	r30,r0,r29; fp = sp
 1739  00002574  afbffff8	sw	-8(r29),r31; push ret addr
 1740  00002578  2fbd0010	subui	r29,r29,#16; alloc local storage
 1741  0000257c  afa20000	sw	0(r29),r2
 1742  00002580  afa30004	sw	4(r29),r3
 1743  00002584  8fc30000	lw	r3,(r30)
 1744  00002588  8fc10004	lw	r1,4(r30)
 1745  0000258c  ac230008	sw	8(r1),r3
 1746  00002590  ac230004	sw	4(r1),r3
 1747  00002594  8c7f0000	lw	r31,(r3)
 1748  00002598  ac3f0000	sw	(r1),r31
 1749  0000259c  ac610000	sw	(r3),r1
 1750  000025a0  8c220000	lw	r2,(r1)
 1751  000025a4  ac410004	sw	4(r2),r1
 1752  000025a8  8c610008	lw	r1,8(r3)
 1753  000025ac  20210001	addi	r1,r1,#1
 1754  000025b0  ac610008	sw	8(r3),r1
 1755  000025b4  8fa20000	lw	r2,0(r29)
 1756  000025b8  8fa30004	lw	r3,4(r29)
 1757  000025bc  8fdffff8	lw	r31,-8(r30)
 1758  000025c0  001ee820	add	r29,r0,r30
 1759  000025c4  8fdefffc	lw	r30,-4(r30)
 1760  000025c8  4be00000	jr	r31
 1761  000025cc  54000000	nop
 1762  000025d0          	.endproc _QueueInsertFirst
 1763  000025d0          	.align 2
 1764  000025d0          	.proc _QueueInsertLast
 1765  000025d0          	.global _QueueInsertLast
 1766  000025d0          	_QueueInsertLast:
 1767                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 1768  000025d0  afbefffc	sw	-4(r29),r30; push fp
 1769  000025d4  001df020	add	r30,r0,r29; fp = sp
 1770  000025d8  afbffff8	sw	-8(r29),r31; push ret addr
 1771  000025dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1772  000025e0  afa20000	sw	0(r29),r2
 1773  000025e4  afa30004	sw	4(r29),r3
 1774  000025e8  8fc30000	lw	r3,(r30)
 1775  000025ec  8fc10004	lw	r1,4(r30)
 1776  000025f0  8c620004	lw	r2,4(r3)
 1777  000025f4  ac230008	sw	8(r1),r3
 1778  000025f8  ac220004	sw	4(r1),r2
 1779  000025fc  8c5f0000	lw	r31,(r2)
 1780  00002600  ac3f0000	sw	(r1),r31
 1781  00002604  ac410000	sw	(r2),r1
 1782  00002608  8c220000	lw	r2,(r1)
 1783  0000260c  ac410004	sw	4(r2),r1
 1784  00002610  8c610008	lw	r1,8(r3)
 1785  00002614  20210001	addi	r1,r1,#1
 1786  00002618  ac610008	sw	8(r3),r1
 1787  0000261c  8fa20000	lw	r2,0(r29)
 1788  00002620  8fa30004	lw	r3,4(r29)
 1789  00002624  8fdffff8	lw	r31,-8(r30)
 1790  00002628  001ee820	add	r29,r0,r30
 1791  0000262c  8fdefffc	lw	r30,-4(r30)
 1792  00002630  4be00000	jr	r31
 1793  00002634  54000000	nop
 1794  00002638          	.endproc _QueueInsertLast
 1795  00002638          	.align 2
 1796  00002638          	.proc _QueueRemove
 1797  00002638          	.global _QueueRemove
 1798  00002638          	_QueueRemove:
 1799                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 1800  00002638  afbefffc	sw	-4(r29),r30; push fp
 1801  0000263c  001df020	add	r30,r0,r29; fp = sp
 1802  00002640  afbffff8	sw	-8(r29),r31; push ret addr
 1803  00002644  2fbd0010	subui	r29,r29,#16; alloc local storage
 1804  00002648  afa20000	sw	0(r29),r2
 1805  0000264c  afa30004	sw	4(r29),r3
 1806  00002650  8fdf0000	lw	r31,(r30)
 1807  00002654  8fe10008	lw	r1,8(r31)
 1808  00002658  8c210008	lw	r1,8(r1)
 1809  0000265c  6c210000	sgti	r1,r1,#0
 1810  00002660  1020002c	beqz	r1,L44_LF1
 1811  00002664  54000000	nop; not filled.
 1812  00002668  8fe10004	lw	r1,4(r31)
 1813  0000266c  8fe30000	lw	r3,(r31)
 1814  00002670  ac230000	sw	(r1),r3
 1815  00002674  8fe10000	lw	r1,(r31)
 1816  00002678  8fe30004	lw	r3,4(r31)
 1817  0000267c  ac230004	sw	4(r1),r3
 1818  00002680  8fe20008	lw	r2,8(r31)
 1819  00002684  8c410008	lw	r1,8(r2)
 1820  00002688  2021ffff	addi	r1,r1,#-1
 1821  0000268c  ac410008	sw	8(r2),r1
 1822  00002690          	L44_LF1:
 1823  00002690  20030000	addi	r3,r0,#0
 1824  00002694  afe30000	sw	(r31),r3
 1825  00002698  8fa20000	lw	r2,0(r29)
 1826  0000269c  8fa30004	lw	r3,4(r29)
 1827  000026a0  8fdffff8	lw	r31,-8(r30)
 1828  000026a4  001ee820	add	r29,r0,r30
 1829  000026a8  8fdefffc	lw	r30,-4(r30)
 1830  000026ac  4be00000	jr	r31
 1831  000026b0  54000000	nop
 1832  000026b4          	.endproc _QueueRemove
 1833  000026b4          	.align 2
 1834  000026b4          	.proc _QueueLength
 1835  000026b4          	.global _QueueLength
 1836  000026b4          	_QueueLength:
 1837                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 1838  000026b4  afbefffc	sw	-4(r29),r30; push fp
 1839  000026b8  001df020	add	r30,r0,r29; fp = sp
 1840  000026bc  afbffff8	sw	-8(r29),r31; push ret addr
 1841  000026c0  2fbd0008	subui	r29,r29,#8; alloc local storage
 1842  000026c4  8fc10000	lw	r1,(r30)
 1843  000026c8  8c210008	lw	r1,8(r1)
 1844  000026cc  8fdffff8	lw	r31,-8(r30)
 1845  000026d0  001ee820	add	r29,r0,r30
 1846  000026d4  8fdefffc	lw	r30,-4(r30)
 1847  000026d8  4be00000	jr	r31
 1848  000026dc  54000000	nop
 1849  000026e0          	.endproc _QueueLength
 1850  000026e0          	.align 2
 1851  000026e0          	.proc _QueueEmpty
 1852  000026e0          	.global _QueueEmpty
 1853  000026e0          	_QueueEmpty:
 1854                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 1855  000026e0  afbefffc	sw	-4(r29),r30; push fp
 1856  000026e4  001df020	add	r30,r0,r29; fp = sp
 1857  000026e8  afbffff8	sw	-8(r29),r31; push ret addr
 1858  000026ec  2fbd0008	subui	r29,r29,#8; alloc local storage
 1859  000026f0  8fc10000	lw	r1,(r30)
 1860  000026f4  8c210008	lw	r1,8(r1)
 1861  000026f8  60210000	seqi	r1,r1,#0
 1862  000026fc  8fdffff8	lw	r31,-8(r30)
 1863  00002700  001ee820	add	r29,r0,r30
 1864  00002704  8fdefffc	lw	r30,-4(r30)
 1865  00002708  4be00000	jr	r31
 1866  0000270c  54000000	nop
 1867  00002710          	.endproc _QueueEmpty
 1868  00002710          	.data
 1869  0000d258          	.align 2
 1870  0000d258          	_negativeone_LF1:
 1871  0000d258  ffffffff	.word -1
 1872  0000d25c          	.text
 1873  00002710          	.align 2
 1874  00002710          	.proc _MemoryGetSize
 1875  00002710          	.global _MemoryGetSize
 1876  00002710          	_MemoryGetSize:
 1877                      ;  Function 'MemoryGetSize'; 0 bytes of locals, 0 regs to save.
 1878  00002710  afbefffc	sw	-4(r29),r30; push fp
 1879  00002714  001df020	add	r30,r0,r29; fp = sp
 1880  00002718  afbffff8	sw	-8(r29),r31; push ret addr
 1881  0000271c  2fbd0008	subui	r29,r29,#8; alloc local storage
 1882  00002720  3c01ffff	lhi	r1,#-1
 1883  00002724  24210000	addui	r1,r1,#0
 1884  00002728  8c210000	lw	r1,(r1)
 1885  0000272c  8fdffff8	lw	r31,-8(r30)
 1886  00002730  001ee820	add	r29,r0,r30
 1887  00002734  8fdefffc	lw	r30,-4(r30)
 1888  00002738  4be00000	jr	r31
 1889  0000273c  54000000	nop
 1890  00002740          	.endproc _MemoryGetSize
 1891  00002740          	.data
 1892  0000d25c          	.align 2
 1893  0000d25c          	LC0_LF1:
 1894  0000d25c  53657420	.ascii "Set freemap entry %d to 0x%x.\n\000"
 1894  0000d260  66726565	
 1894  0000d264  6d617020	
 1894  0000d268  656e7472	
 1894  0000d26c  79202564	
 1894  0000d270  20746f20	
 1894  0000d274  30782578	
 1894  0000d278  2e0a00  	
 1895  0000d27b          	.text
 1896  00002740          	.align 2
 1897  00002740          	.proc _MemorySetFreemap
 1898  00002740          	.global _MemorySetFreemap
 1899  00002740          	_MemorySetFreemap:
 1900                      ;  Function 'MemorySetFreemap'; 0 bytes of locals, 5 regs to save.
 1901  00002740  afbefffc	sw	-4(r29),r30; push fp
 1902  00002744  001df020	add	r30,r0,r29; fp = sp
 1903  00002748  afbffff8	sw	-8(r29),r31; push ret addr
 1904  0000274c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1905  00002750  afa20000	sw	0(r29),r2
 1906  00002754  afa30004	sw	4(r29),r3
 1907  00002758  afa40008	sw	8(r29),r4
 1908  0000275c  afa5000c	sw	12(r29),r5
 1909  00002760  afa60010	sw	16(r29),r6
 1910  00002764  8fc30000	lw	r3,(r30)
 1911  00002768  8fdf0004	lw	r31,4(r30)
 1912  0000276c  00031020	add	r2,r0,r3
 1913  00002770  74610000	sgei	r1,r3,#0
 1914  00002774  14200008	bnez	r1,L62_LF1
 1915  00002778  54000000	nop; not filled.
 1916  0000277c  2062001f	addi	r2,r3,#31
 1917  00002780          	L62_LF1:
 1918  00002780  5c450005	srai	r5,r2,#0x5
 1919  00002784  50a10005	slli	r1,r5,#0x5
 1920  00002788  00611822	sub	r3,r3,r1
 1921  0000278c  20010001	addi	r1,r0,#1
 1922  00002790  00231004	sll	r2,r1,r3
 1923  00002794  3c010000	lhi	r1,((_negativeone_LF1)>>16)&0xffff
 1924  00002798  2421d258	addui	r1,r1,(_negativeone_LF1)&0xffff
 1925  0000279c  8c210000	lw	r1,(r1)
 1926  000027a0  00411026	xor	r2,r2,r1
 1927  000027a4  50a10002	slli	r1,r5,#0x2
 1928  000027a8  3c060000	lhi	r6,((_freepages_LF1)>>16)&0xffff
 1929  000027ac  24c6d3b4	addui	r6,r6,(_freepages_LF1)&0xffff
 1930  000027b0  00262020	add	r4,r1,r6
 1931  000027b4  8c810000	lw	r1,(r4)
 1932  000027b8  00221024	and	r2,r1,r2
 1933  000027bc  03e30804	sll	r1,r31,r3
 1934  000027c0  00410825	or	r1,r2,r1
 1935  000027c4  ac810000	sw	(r4),r1
 1936  000027c8  23bdfff8	addi	r29,r29,#-8
 1937  000027cc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 1938  000027d0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 1939  000027d4  afa20000	sw	(r29),r2
 1940  000027d8  2006006d	addi	r6,r0,#109
 1941  000027dc  afa60004	sw	4(r29),r6
 1942  000027e0  0c001338	jal	_dindex
 1943  000027e4  54000000	nop; not filled.
 1944  000027e8  23bd0008	addi	r29,r29,#8
 1945  000027ec  64210000	snei	r1,r1,#0
 1946  000027f0  1420002c	bnez	r1,L66_LF1
 1947  000027f4  54000000	nop; not filled.
 1948  000027f8  23bdfff8	addi	r29,r29,#-8
 1949  000027fc  afa20000	sw	(r29),r2
 1950  00002800  2006002b	addi	r6,r0,#43
 1951  00002804  afa60004	sw	4(r29),r6
 1952  00002808  0c001310	jal	_dindex
 1953  0000280c  54000000	nop; not filled.
 1954  00002810  23bd0008	addi	r29,r29,#8
 1955  00002814  64210000	snei	r1,r1,#0
 1956  00002818  1020002c	beqz	r1,L65_LF1
 1957  0000281c  54000000	nop; not filled.
 1958  00002820          	L66_LF1:
 1959  00002820  23bdfff0	addi	r29,r29,#-16
 1960  00002824  3c060000	lhi	r6,((LC0_LF1)>>16)&0xffff
 1961  00002828  24c6d25c	addui	r6,r6,(LC0_LF1)&0xffff
 1962  0000282c  afa60000	sw	(r29),r6
 1963  00002830  afa50004	sw	4(r29),r5
 1964  00002834  8c840000	lw	r4,(r4)
 1965  00002838  afa40008	sw	8(r29),r4
 1966  0000283c  0c0079b8	jal	_printf
 1967  00002840  54000000	nop; not filled.
 1968  00002844  23bd0010	addi	r29,r29,#16
 1969  00002848          	L65_LF1:
 1970  00002848  8fa20000	lw	r2,0(r29)
 1971  0000284c  8fa30004	lw	r3,4(r29)
 1972  00002850  8fa40008	lw	r4,8(r29)
 1973  00002854  8fa5000c	lw	r5,12(r29)
 1974  00002858  8fa60010	lw	r6,16(r29)
 1975  0000285c  8fdffff8	lw	r31,-8(r30)
 1976  00002860  001ee820	add	r29,r0,r30
 1977  00002864  8fdefffc	lw	r30,-4(r30)
 1978  00002868  4be00000	jr	r31
 1979  0000286c  54000000	nop
 1980  00002870          	.endproc _MemorySetFreemap
 1981  00002870          	.data
 1982  0000d27b          	.align 2
 1983  0000d27c          	LC1_LF1:
 1984  0000d27c  4d617020	.ascii "Map has %d entries, memory size is 0x%x.\n\000"
 1984  0000d280  68617320	
 1984  0000d284  25642065	
 1984  0000d288  6e747269	
 1984  0000d28c  65732c20	
 1984  0000d290  6d656d6f	
 1984  0000d294  72792073	
 1984  0000d298  697a6520	
 1984  0000d29c  69732030	
 1984  0000d2a0  7825782e	
 1984  0000d2a4  0a00    	
 1985  0000d2a6          	.align 2
 1986  0000d2a8          	LC2_LF1:
 1987  0000d2a8  46726565	.ascii "Free pages start with page # 0x%x.\n\000"
 1987  0000d2ac  20706167	
 1987  0000d2b0  65732073	
 1987  0000d2b4  74617274	
 1987  0000d2b8  20776974	
 1987  0000d2bc  68207061	
 1987  0000d2c0  67652023	
 1987  0000d2c4  20307825	
 1987  0000d2c8  782e0a00	
 1988  0000d2cc          	.align 2
 1989  0000d2cc          	LC3_LF1:
 1990  0000d2cc  496e6974	.ascii "Initialized %d free pages.\n\000"
 1990  0000d2d0  69616c69	
 1990  0000d2d4  7a656420	
 1990  0000d2d8  25642066	
 1990  0000d2dc  72656520	
 1990  0000d2e0  70616765	
 1990  0000d2e4  732e0a00	
 1991  0000d2e8          	.text
 1992  00002870          	.align 2
 1993  00002870          	.proc _MemoryModuleInit
 1994  00002870          	.global _MemoryModuleInit
 1995  00002870          	_MemoryModuleInit:
 1996                      ;  Function 'MemoryModuleInit'; 0 bytes of locals, 10 regs to save.
 1997  00002870  afbefffc	sw	-4(r29),r30; push fp
 1998  00002874  001df020	add	r30,r0,r29; fp = sp
 1999  00002878  afbffff8	sw	-8(r29),r31; push ret addr
 2000  0000287c  2fbd0030	subui	r29,r29,#48; alloc local storage
 2001  00002880  afa20000	sw	0(r29),r2
 2002  00002884  afa30004	sw	4(r29),r3
 2003  00002888  afa40008	sw	8(r29),r4
 2004  0000288c  afa5000c	sw	12(r29),r5
 2005  00002890  afa60010	sw	16(r29),r6
 2006  00002894  afa70014	sw	20(r29),r7
 2007  00002898  afa80018	sw	24(r29),r8
 2008  0000289c  afa9001c	sw	28(r29),r9
 2009  000028a0  afaa0020	sw	32(r29),r10
 2010  000028a4  afab0024	sw	36(r29),r11
 2011  000028a8  3c01ffff	lhi	r1,#-1
 2012  000028ac  24210000	addui	r1,r1,#0
 2013  000028b0  8c220000	lw	r2,(r1)
 2014  000028b4  74410000	sgei	r1,r2,#0
 2015  000028b8  14200008	bnez	r1,L69_LF1
 2016  000028bc  54000000	nop; not filled.
 2017  000028c0  2442ffff	addui	r2,r2,#65535
 2018  000028c4          	L69_LF1:
 2019  000028c4  5c480010	srai	r8,r2,#0x10
 2020  000028c8  3c030000	lhi	r3,((_pagestart_LF1)>>16)&0xffff
 2021  000028cc  2463d3a8	addui	r3,r3,(_pagestart_LF1)&0xffff
 2022  000028d0  3c010001	lhi	r1,((_lastosaddress)>>16)&0xffff
 2023  000028d4  24213194	addui	r1,r1,(_lastosaddress)&0xffff
 2024  000028d8  8c210000	lw	r1,(r1)
 2025  000028dc  2422fffc	addui	r2,r1,#65532
 2026  000028e0  74410000	sgei	r1,r2,#0
 2027  000028e4  14200008	bnez	r1,L70_LF1
 2028  000028e8  54000000	nop; not filled.
 2029  000028ec  2442ffff	addui	r2,r2,#65535
 2030  000028f0          	L70_LF1:
 2031  000028f0  5c410010	srai	r1,r2,#0x10
 2032  000028f4  ac610000	sw	(r3),r1
 2033  000028f8  3c030000	lhi	r3,((_freemapmax_LF1)>>16)&0xffff
 2034  000028fc  2463d3ac	addui	r3,r3,(_freemapmax_LF1)&0xffff
 2035  00002900  2102001f	addi	r2,r8,#31
 2036  00002904  74410000	sgei	r1,r2,#0
 2037  00002908  14200008	bnez	r1,L71_LF1
 2038  0000290c  54000000	nop; not filled.
 2039  00002910  2102003e	addi	r2,r8,#62
 2040  00002914          	L71_LF1:
 2041  00002914  5c410005	srai	r1,r2,#0x5
 2042  00002918  ac610000	sw	(r3),r1
 2043  0000291c  23bdfff8	addi	r29,r29,#-8
 2044  00002920  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2045  00002924  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2046  00002928  afa20000	sw	(r29),r2
 2047  0000292c  200b006d	addi	r11,r0,#109
 2048  00002930  afab0004	sw	4(r29),r11
 2049  00002934  0c0011e4	jal	_dindex
 2050  00002938  54000000	nop; not filled.
 2051  0000293c  23bd0008	addi	r29,r29,#8
 2052  00002940  64210000	snei	r1,r1,#0
 2053  00002944  1420002c	bnez	r1,L73_LF1
 2054  00002948  54000000	nop; not filled.
 2055  0000294c  23bdfff8	addi	r29,r29,#-8
 2056  00002950  afa20000	sw	(r29),r2
 2057  00002954  200b002b	addi	r11,r0,#43
 2058  00002958  afab0004	sw	4(r29),r11
 2059  0000295c  0c0011bc	jal	_dindex
 2060  00002960  54000000	nop; not filled.
 2061  00002964  23bd0008	addi	r29,r29,#8
 2062  00002968  64210000	snei	r1,r1,#0
 2063  0000296c  1020002c	beqz	r1,L72_LF1
 2064  00002970  54000000	nop; not filled.
 2065  00002974          	L73_LF1:
 2066  00002974  23bdfff0	addi	r29,r29,#-16
 2067  00002978  3c0b0000	lhi	r11,((LC1_LF1)>>16)&0xffff
 2068  0000297c  256bd27c	addui	r11,r11,(LC1_LF1)&0xffff
 2069  00002980  afab0000	sw	(r29),r11
 2070  00002984  8c610000	lw	r1,(r3)
 2071  00002988  afa10004	sw	4(r29),r1
 2072  0000298c  afa80008	sw	8(r29),r8
 2073  00002990  0c007864	jal	_printf
 2074  00002994  54000000	nop; not filled.
 2075  00002998  23bd0010	addi	r29,r29,#16
 2076  0000299c          	L72_LF1:
 2077  0000299c  23bdfff8	addi	r29,r29,#-8
 2078  000029a0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2079  000029a4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2080  000029a8  afa20000	sw	(r29),r2
 2081  000029ac  200b006d	addi	r11,r0,#109
 2082  000029b0  afab0004	sw	4(r29),r11
 2083  000029b4  0c001164	jal	_dindex
 2084  000029b8  54000000	nop; not filled.
 2085  000029bc  23bd0008	addi	r29,r29,#8
 2086  000029c0  64210000	snei	r1,r1,#0
 2087  000029c4  1420002c	bnez	r1,L75_LF1
 2088  000029c8  54000000	nop; not filled.
 2089  000029cc  23bdfff8	addi	r29,r29,#-8
 2090  000029d0  afa20000	sw	(r29),r2
 2091  000029d4  200b002b	addi	r11,r0,#43
 2092  000029d8  afab0004	sw	4(r29),r11
 2093  000029dc  0c00113c	jal	_dindex
 2094  000029e0  54000000	nop; not filled.
 2095  000029e4  23bd0008	addi	r29,r29,#8
 2096  000029e8  64210000	snei	r1,r1,#0
 2097  000029ec  10200030	beqz	r1,L74_LF1
 2098  000029f0  54000000	nop; not filled.
 2099  000029f4          	L75_LF1:
 2100  000029f4  23bdfff8	addi	r29,r29,#-8
 2101  000029f8  3c0b0000	lhi	r11,((LC2_LF1)>>16)&0xffff
 2102  000029fc  256bd2a8	addui	r11,r11,(LC2_LF1)&0xffff
 2103  00002a00  afab0000	sw	(r29),r11
 2104  00002a04  3c010000	lhi	r1,((_pagestart_LF1)>>16)&0xffff
 2105  00002a08  2421d3a8	addui	r1,r1,(_pagestart_LF1)&0xffff
 2106  00002a0c  8c210000	lw	r1,(r1)
 2107  00002a10  afa10004	sw	4(r29),r1
 2108  00002a14  0c0077e0	jal	_printf
 2109  00002a18  54000000	nop; not filled.
 2110  00002a1c  23bd0008	addi	r29,r29,#8
 2111  00002a20          	L74_LF1:
 2112  00002a20  20020000	addi	r2,r0,#0
 2113  00002a24  3c040000	lhi	r4,((_freemapmax_LF1)>>16)&0xffff
 2114  00002a28  2484d3ac	addui	r4,r4,(_freemapmax_LF1)&0xffff
 2115  00002a2c  8c810000	lw	r1,(r4)
 2116  00002a30  0041082a	slt	r1,r2,r1
 2117  00002a34  1020002c	beqz	r1,L77_LF1
 2118  00002a38  54000000	nop; not filled.
 2119  00002a3c  3c030000	lhi	r3,((_freepages_LF1)>>16)&0xffff
 2120  00002a40  2463d3b4	addui	r3,r3,(_freepages_LF1)&0xffff
 2121  00002a44          	L79_LF1:
 2122  00002a44  200b0000	addi	r11,r0,#0
 2123  00002a48  ac6b0000	sw	(r3),r11
 2124  00002a4c  20630004	addi	r3,r3,#4
 2125  00002a50  20420001	addi	r2,r2,#1
 2126  00002a54  8c810000	lw	r1,(r4)
 2127  00002a58  0041082a	slt	r1,r2,r1
 2128  00002a5c  1420ffe4	bnez	r1,L79_LF1
 2129  00002a60  54000000	nop; not filled.
 2130  00002a64          	L77_LF1:
 2131  00002a64  3c020000	lhi	r2,((_nfreepages_LF1)>>16)&0xffff
 2132  00002a68  2442d3b0	addui	r2,r2,(_nfreepages_LF1)&0xffff
 2133  00002a6c  200b0000	addi	r11,r0,#0
 2134  00002a70  ac4b0000	sw	(r2),r11
 2135  00002a74  3c010000	lhi	r1,((_pagestart_LF1)>>16)&0xffff
 2136  00002a78  2421d3a8	addui	r1,r1,(_pagestart_LF1)&0xffff
 2137  00002a7c  8c240000	lw	r4,(r1)
 2138  00002a80  0088082a	slt	r1,r4,r8
 2139  00002a84  10200104	beqz	r1,L82_LF1
 2140  00002a88  54000000	nop; not filled.
 2141  00002a8c  00023820	add	r7,r0,r2
 2142  00002a90  200a0001	addi	r10,r0,#1
 2143  00002a94  3c090000	lhi	r9,((_negativeone_LF1)>>16)&0xffff
 2144  00002a98  2529d258	addui	r9,r9,(_negativeone_LF1)&0xffff
 2145  00002a9c          	L84_LF1:
 2146  00002a9c  8ce10000	lw	r1,(r7)
 2147  00002aa0  20210001	addi	r1,r1,#1
 2148  00002aa4  ace10000	sw	(r7),r1
 2149  00002aa8  00041020	add	r2,r0,r4
 2150  00002aac  74810000	sgei	r1,r4,#0
 2151  00002ab0  14200008	bnez	r1,L86_LF1
 2152  00002ab4  54000000	nop; not filled.
 2153  00002ab8  2082001f	addi	r2,r4,#31
 2154  00002abc          	L86_LF1:
 2155  00002abc  5c460005	srai	r6,r2,#0x5
 2156  00002ac0  50c10005	slli	r1,r6,#0x5
 2157  00002ac4  00810822	sub	r1,r4,r1
 2158  00002ac8  01411804	sll	r3,r10,r1
 2159  00002acc  8d210000	lw	r1,(r9)
 2160  00002ad0  00611026	xor	r2,r3,r1
 2161  00002ad4  50c10002	slli	r1,r6,#0x2
 2162  00002ad8  3c0b0000	lhi	r11,((_freepages_LF1)>>16)&0xffff
 2163  00002adc  256bd3b4	addui	r11,r11,(_freepages_LF1)&0xffff
 2164  00002ae0  002b2820	add	r5,r1,r11
 2165  00002ae4  8ca10000	lw	r1,(r5)
 2166  00002ae8  00220824	and	r1,r1,r2
 2167  00002aec  00230825	or	r1,r1,r3
 2168  00002af0  aca10000	sw	(r5),r1
 2169  00002af4  23bdfff8	addi	r29,r29,#-8
 2170  00002af8  3c0b0000	lhi	r11,((_debugstr)>>16)&0xffff
 2171  00002afc  256bfc26	addui	r11,r11,(_debugstr)&0xffff
 2172  00002b00  afab0000	sw	(r29),r11
 2173  00002b04  200b006d	addi	r11,r0,#109
 2174  00002b08  afab0004	sw	4(r29),r11
 2175  00002b0c  0c00100c	jal	_dindex
 2176  00002b10  54000000	nop; not filled.
 2177  00002b14  23bd0008	addi	r29,r29,#8
 2178  00002b18  64210000	snei	r1,r1,#0
 2179  00002b1c  14200034	bnez	r1,L90_LF1
 2180  00002b20  54000000	nop; not filled.
 2181  00002b24  23bdfff8	addi	r29,r29,#-8
 2182  00002b28  3c0b0000	lhi	r11,((_debugstr)>>16)&0xffff
 2183  00002b2c  256bfc26	addui	r11,r11,(_debugstr)&0xffff
 2184  00002b30  afab0000	sw	(r29),r11
 2185  00002b34  200b002b	addi	r11,r0,#43
 2186  00002b38  afab0004	sw	4(r29),r11
 2187  00002b3c  0c000fdc	jal	_dindex
 2188  00002b40  54000000	nop; not filled.
 2189  00002b44  23bd0008	addi	r29,r29,#8
 2190  00002b48  64210000	snei	r1,r1,#0
 2191  00002b4c  1020002c	beqz	r1,L83_LF1
 2192  00002b50  54000000	nop; not filled.
 2193  00002b54          	L90_LF1:
 2194  00002b54  23bdfff0	addi	r29,r29,#-16
 2195  00002b58  3c0b0000	lhi	r11,((LC0_LF1)>>16)&0xffff
 2196  00002b5c  256bd25c	addui	r11,r11,(LC0_LF1)&0xffff
 2197  00002b60  afab0000	sw	(r29),r11
 2198  00002b64  afa60004	sw	4(r29),r6
 2199  00002b68  8ca50000	lw	r5,(r5)
 2200  00002b6c  afa50008	sw	8(r29),r5
 2201  00002b70  0c007684	jal	_printf
 2202  00002b74  54000000	nop; not filled.
 2203  00002b78  23bd0010	addi	r29,r29,#16
 2204  00002b7c          	L83_LF1:
 2205  00002b7c  20840001	addi	r4,r4,#1
 2206  00002b80  0088082a	slt	r1,r4,r8
 2207  00002b84  1420ff14	bnez	r1,L84_LF1
 2208  00002b88  54000000	nop; not filled.
 2209  00002b8c          	L82_LF1:
 2210  00002b8c  23bdfff8	addi	r29,r29,#-8
 2211  00002b90  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2212  00002b94  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2213  00002b98  afa20000	sw	(r29),r2
 2214  00002b9c  200b006d	addi	r11,r0,#109
 2215  00002ba0  afab0004	sw	4(r29),r11
 2216  00002ba4  0c000f74	jal	_dindex
 2217  00002ba8  54000000	nop; not filled.
 2218  00002bac  23bd0008	addi	r29,r29,#8
 2219  00002bb0  64210000	snei	r1,r1,#0
 2220  00002bb4  1420002c	bnez	r1,L93_LF1
 2221  00002bb8  54000000	nop; not filled.
 2222  00002bbc  23bdfff8	addi	r29,r29,#-8
 2223  00002bc0  afa20000	sw	(r29),r2
 2224  00002bc4  200b002b	addi	r11,r0,#43
 2225  00002bc8  afab0004	sw	4(r29),r11
 2226  00002bcc  0c000f4c	jal	_dindex
 2227  00002bd0  54000000	nop; not filled.
 2228  00002bd4  23bd0008	addi	r29,r29,#8
 2229  00002bd8  64210000	snei	r1,r1,#0
 2230  00002bdc  10200030	beqz	r1,L92_LF1
 2231  00002be0  54000000	nop; not filled.
 2232  00002be4          	L93_LF1:
 2233  00002be4  23bdfff8	addi	r29,r29,#-8
 2234  00002be8  3c0b0000	lhi	r11,((LC3_LF1)>>16)&0xffff
 2235  00002bec  256bd2cc	addui	r11,r11,(LC3_LF1)&0xffff
 2236  00002bf0  afab0000	sw	(r29),r11
 2237  00002bf4  3c010000	lhi	r1,((_nfreepages_LF1)>>16)&0xffff
 2238  00002bf8  2421d3b0	addui	r1,r1,(_nfreepages_LF1)&0xffff
 2239  00002bfc  8c210000	lw	r1,(r1)
 2240  00002c00  afa10004	sw	4(r29),r1
 2241  00002c04  0c0075f0	jal	_printf
 2242  00002c08  54000000	nop; not filled.
 2243  00002c0c  23bd0008	addi	r29,r29,#8
 2244  00002c10          	L92_LF1:
 2245  00002c10  8fa20000	lw	r2,0(r29)
 2246  00002c14  8fa30004	lw	r3,4(r29)
 2247  00002c18  8fa40008	lw	r4,8(r29)
 2248  00002c1c  8fa5000c	lw	r5,12(r29)
 2249  00002c20  8fa60010	lw	r6,16(r29)
 2250  00002c24  8fa70014	lw	r7,20(r29)
 2251  00002c28  8fa80018	lw	r8,24(r29)
 2252  00002c2c  8fa9001c	lw	r9,28(r29)
 2253  00002c30  8faa0020	lw	r10,32(r29)
 2254  00002c34  8fab0024	lw	r11,36(r29)
 2255  00002c38  8fdffff8	lw	r31,-8(r30)
 2256  00002c3c  001ee820	add	r29,r0,r30
 2257  00002c40  8fdefffc	lw	r30,-4(r30)
 2258  00002c44  4be00000	jr	r31
 2259  00002c48  54000000	nop
 2260  00002c4c          	.endproc _MemoryModuleInit
 2261  00002c4c          	.data
 2262  0000d2e8          	.align 2
 2263  0000d2e8          	_mapnum42_LF1:
 2264  0000d2e8  00000000	.word 0
 2265  0000d2ec          	.align 2
 2266  0000d2ec          	LC4_LF1:
 2267  0000d2ec  416c6c6f	.ascii "Allocating memory, starting with page %d\n\000"
 2267  0000d2f0  63617469	
 2267  0000d2f4  6e67206d	
 2267  0000d2f8  656d6f72	
 2267  0000d2fc  792c2073	
 2267  0000d300  74617274	
 2267  0000d304  696e6720	
 2267  0000d308  77697468	
 2267  0000d30c  20706167	
 2267  0000d310  65202564	
 2267  0000d314  0a00    	
 2268  0000d316          	.align 2
 2269  0000d318          	LC5_LF1:
 2270  0000d318  416c6c6f	.ascii "Allocated memory, from map %d, page %d, map=0x%x.\n\000"
 2270  0000d31c  63617465	
 2270  0000d320  64206d65	
 2270  0000d324  6d6f7279	
 2270  0000d328  2c206672	
 2270  0000d32c  6f6d206d	
 2270  0000d330  61702025	
 2270  0000d334  642c2070	
 2270  0000d338  61676520	
 2270  0000d33c  25642c20	
 2270  0000d340  6d61703d	
 2270  0000d344  30782578	
 2270  0000d348  2e0a00  	
 2271  0000d34b          	.text
 2272  00002c4c          	.align 2
 2273  00002c4c          	.proc _MemoryAllocPage
 2274  00002c4c          	.global _MemoryAllocPage
 2275  00002c4c          	_MemoryAllocPage:
 2276                      ;  Function 'MemoryAllocPage'; 0 bytes of locals, 6 regs to save.
 2277  00002c4c  afbefffc	sw	-4(r29),r30; push fp
 2278  00002c50  001df020	add	r30,r0,r29; fp = sp
 2279  00002c54  afbffff8	sw	-8(r29),r31; push ret addr
 2280  00002c58  2fbd0020	subui	r29,r29,#32; alloc local storage
 2281  00002c5c  afa20000	sw	0(r29),r2
 2282  00002c60  afa30004	sw	4(r29),r3
 2283  00002c64  afa40008	sw	8(r29),r4
 2284  00002c68  afa5000c	sw	12(r29),r5
 2285  00002c6c  afa60010	sw	16(r29),r6
 2286  00002c70  afa70014	sw	20(r29),r7
 2287  00002c74  3c010000	lhi	r1,((_nfreepages_LF1)>>16)&0xffff
 2288  00002c78  2421d3b0	addui	r1,r1,(_nfreepages_LF1)&0xffff
 2289  00002c7c  8c210000	lw	r1,(r1)
 2290  00002c80  64210000	snei	r1,r1,#0
 2291  00002c84  14200010	bnez	r1,L112_LF1
 2292  00002c88  54000000	nop; not filled.
 2293  00002c8c  20010000	addi	r1,r0,#0
 2294  00002c90  08000238	j	L128_LF1
 2295  00002c94  54000000	nop; not filled.
 2296  00002c98          	L112_LF1:
 2297  00002c98  23bdfff8	addi	r29,r29,#-8
 2298  00002c9c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2299  00002ca0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2300  00002ca4  afa20000	sw	(r29),r2
 2301  00002ca8  2007006d	addi	r7,r0,#109
 2302  00002cac  afa70004	sw	4(r29),r7
 2303  00002cb0  0c000e68	jal	_dindex
 2304  00002cb4  54000000	nop; not filled.
 2305  00002cb8  23bd0008	addi	r29,r29,#8
 2306  00002cbc  64210000	snei	r1,r1,#0
 2307  00002cc0  1420002c	bnez	r1,L114_LF1
 2308  00002cc4  54000000	nop; not filled.
 2309  00002cc8  23bdfff8	addi	r29,r29,#-8
 2310  00002ccc  afa20000	sw	(r29),r2
 2311  00002cd0  2007002b	addi	r7,r0,#43
 2312  00002cd4  afa70004	sw	4(r29),r7
 2313  00002cd8  0c000e40	jal	_dindex
 2314  00002cdc  54000000	nop; not filled.
 2315  00002ce0  23bd0008	addi	r29,r29,#8
 2316  00002ce4  64210000	snei	r1,r1,#0
 2317  00002ce8  10200030	beqz	r1,L113_LF1
 2318  00002cec  54000000	nop; not filled.
 2319  00002cf0          	L114_LF1:
 2320  00002cf0  23bdfff8	addi	r29,r29,#-8
 2321  00002cf4  3c070000	lhi	r7,((LC4_LF1)>>16)&0xffff
 2322  00002cf8  24e7d2ec	addui	r7,r7,(LC4_LF1)&0xffff
 2323  00002cfc  afa70000	sw	(r29),r7
 2324  00002d00  3c010000	lhi	r1,((_mapnum42_LF1)>>16)&0xffff
 2325  00002d04  2421d2e8	addui	r1,r1,(_mapnum42_LF1)&0xffff
 2326  00002d08  8c210000	lw	r1,(r1)
 2327  00002d0c  afa10004	sw	4(r29),r1
 2328  00002d10  0c0074e4	jal	_printf
 2329  00002d14  54000000	nop; not filled.
 2330  00002d18  23bd0008	addi	r29,r29,#8
 2331  00002d1c          	L113_LF1:
 2332  00002d1c  3c020000	lhi	r2,((_mapnum42_LF1)>>16)&0xffff
 2333  00002d20  2442d2e8	addui	r2,r2,(_mapnum42_LF1)&0xffff
 2334  00002d24  8c410000	lw	r1,(r2)
 2335  00002d28  3c040000	lhi	r4,((_freepages_LF1)>>16)&0xffff
 2336  00002d2c  2484d3b4	addui	r4,r4,(_freepages_LF1)&0xffff
 2337  00002d30  50210002	slli	r1,r1,#0x2
 2338  00002d34  00240820	add	r1,r1,r4
 2339  00002d38  8c210000	lw	r1,(r1)
 2340  00002d3c  64210000	snei	r1,r1,#0
 2341  00002d40  1420004c	bnez	r1,L116_LF1
 2342  00002d44  54000000	nop; not filled.
 2343  00002d48  3c010000	lhi	r1,((_freemapmax_LF1)>>16)&0xffff
 2344  00002d4c  2421d3ac	addui	r1,r1,(_freemapmax_LF1)&0xffff
 2345  00002d50  8c230000	lw	r3,(r1)
 2346  00002d54          	L117_LF1:
 2347  00002d54  8c410000	lw	r1,(r2)
 2348  00002d58  20210001	addi	r1,r1,#1
 2349  00002d5c  ac410000	sw	(r2),r1
 2350  00002d60  0023082d	sge	r1,r1,r3
 2351  00002d64  1020000c	beqz	r1,L115_LF1
 2352  00002d68  54000000	nop; not filled.
 2353  00002d6c  20070000	addi	r7,r0,#0
 2354  00002d70  ac470000	sw	(r2),r7
 2355  00002d74          	L115_LF1:
 2356  00002d74  8c410000	lw	r1,(r2)
 2357  00002d78  50210002	slli	r1,r1,#0x2
 2358  00002d7c  00240820	add	r1,r1,r4
 2359  00002d80  8c210000	lw	r1,(r1)
 2360  00002d84  64210000	snei	r1,r1,#0
 2361  00002d88  1020ffc8	beqz	r1,L117_LF1
 2362  00002d8c  54000000	nop; not filled.
 2363  00002d90          	L116_LF1:
 2364  00002d90  3c010000	lhi	r1,((_mapnum42_LF1)>>16)&0xffff
 2365  00002d94  2421d2e8	addui	r1,r1,(_mapnum42_LF1)&0xffff
 2366  00002d98  8c210000	lw	r1,(r1)
 2367  00002d9c  50210002	slli	r1,r1,#0x2
 2368  00002da0  3c070000	lhi	r7,((_freepages_LF1)>>16)&0xffff
 2369  00002da4  24e7d3b4	addui	r7,r7,(_freepages_LF1)&0xffff
 2370  00002da8  00270820	add	r1,r1,r7
 2371  00002dac  8c230000	lw	r3,(r1)
 2372  00002db0  201f0000	addi	r31,r0,#0
 2373  00002db4  30610001	andi	r1,r3,#1
 2374  00002db8  14200020	bnez	r1,L121_LF1
 2375  00002dbc  54000000	nop; not filled.
 2376  00002dc0  20020001	addi	r2,r0,#1
 2377  00002dc4          	L122_LF1:
 2378  00002dc4  23ff0001	addi	r31,r31,#1
 2379  00002dc8  005f0804	sll	r1,r2,r31
 2380  00002dcc  00610824	and	r1,r3,r1
 2381  00002dd0  64210000	snei	r1,r1,#0
 2382  00002dd4  1020ffec	beqz	r1,L122_LF1
 2383  00002dd8  54000000	nop; not filled.
 2384  00002ddc          	L121_LF1:
 2385  00002ddc  20010001	addi	r1,r0,#1
 2386  00002de0  003f1004	sll	r2,r1,r31
 2387  00002de4  3c010000	lhi	r1,((_negativeone_LF1)>>16)&0xffff
 2388  00002de8  2421d258	addui	r1,r1,(_negativeone_LF1)&0xffff
 2389  00002dec  8c210000	lw	r1,(r1)
 2390  00002df0  00412026	xor	r4,r2,r1
 2391  00002df4  3c050000	lhi	r5,((_mapnum42_LF1)>>16)&0xffff
 2392  00002df8  24a5d2e8	addui	r5,r5,(_mapnum42_LF1)&0xffff
 2393  00002dfc  8ca30000	lw	r3,(r5)
 2394  00002e00  3c060000	lhi	r6,((_freepages_LF1)>>16)&0xffff
 2395  00002e04  24c6d3b4	addui	r6,r6,(_freepages_LF1)&0xffff
 2396  00002e08  50610002	slli	r1,r3,#0x2
 2397  00002e0c  00261020	add	r2,r1,r6
 2398  00002e10  8c410000	lw	r1,(r2)
 2399  00002e14  00240824	and	r1,r1,r4
 2400  00002e18  ac410000	sw	(r2),r1
 2401  00002e1c  50610005	slli	r1,r3,#0x5
 2402  00002e20  003f1820	add	r3,r1,r31
 2403  00002e24  23bdfff8	addi	r29,r29,#-8
 2404  00002e28  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2405  00002e2c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2406  00002e30  afa20000	sw	(r29),r2
 2407  00002e34  2007006d	addi	r7,r0,#109
 2408  00002e38  afa70004	sw	4(r29),r7
 2409  00002e3c  0c000cdc	jal	_dindex
 2410  00002e40  54000000	nop; not filled.
 2411  00002e44  23bd0008	addi	r29,r29,#8
 2412  00002e48  64210000	snei	r1,r1,#0
 2413  00002e4c  1420002c	bnez	r1,L127_LF1
 2414  00002e50  54000000	nop; not filled.
 2415  00002e54  23bdfff8	addi	r29,r29,#-8
 2416  00002e58  afa20000	sw	(r29),r2
 2417  00002e5c  2007002b	addi	r7,r0,#43
 2418  00002e60  afa70004	sw	4(r29),r7
 2419  00002e64  0c000cb4	jal	_dindex
 2420  00002e68  54000000	nop; not filled.
 2421  00002e6c  23bd0008	addi	r29,r29,#8
 2422  00002e70  64210000	snei	r1,r1,#0
 2423  00002e74  1020003c	beqz	r1,L126_LF1
 2424  00002e78  54000000	nop; not filled.
 2425  00002e7c          	L127_LF1:
 2426  00002e7c  23bdfff0	addi	r29,r29,#-16
 2427  00002e80  3c070000	lhi	r7,((LC5_LF1)>>16)&0xffff
 2428  00002e84  24e7d318	addui	r7,r7,(LC5_LF1)&0xffff
 2429  00002e88  afa70000	sw	(r29),r7
 2430  00002e8c  8ca10000	lw	r1,(r5)
 2431  00002e90  afa10004	sw	4(r29),r1
 2432  00002e94  afa30008	sw	8(r29),r3
 2433  00002e98  50210002	slli	r1,r1,#0x2
 2434  00002e9c  00260820	add	r1,r1,r6
 2435  00002ea0  8c210000	lw	r1,(r1)
 2436  00002ea4  afa1000c	sw	12(r29),r1
 2437  00002ea8  0c00734c	jal	_printf
 2438  00002eac  54000000	nop; not filled.
 2439  00002eb0  23bd0010	addi	r29,r29,#16
 2440  00002eb4          	L126_LF1:
 2441  00002eb4  3c010000	lhi	r1,((_nfreepages_LF1)>>16)&0xffff
 2442  00002eb8  2421d3b0	addui	r1,r1,(_nfreepages_LF1)&0xffff
 2443  00002ebc  8c220000	lw	r2,(r1)
 2444  00002ec0  2042ffff	addi	r2,r2,#-1
 2445  00002ec4  ac220000	sw	(r1),r2
 2446  00002ec8  00030820	add	r1,r0,r3
 2447  00002ecc          	L128_LF1:
 2448  00002ecc  8fa20000	lw	r2,0(r29)
 2449  00002ed0  8fa30004	lw	r3,4(r29)
 2450  00002ed4  8fa40008	lw	r4,8(r29)
 2451  00002ed8  8fa5000c	lw	r5,12(r29)
 2452  00002edc  8fa60010	lw	r6,16(r29)
 2453  00002ee0  8fa70014	lw	r7,20(r29)
 2454  00002ee4  8fdffff8	lw	r31,-8(r30)
 2455  00002ee8  001ee820	add	r29,r0,r30
 2456  00002eec  8fdefffc	lw	r30,-4(r30)
 2457  00002ef0  4be00000	jr	r31
 2458  00002ef4  54000000	nop
 2459  00002ef8          	.endproc _MemoryAllocPage
 2460  00002ef8          	.data
 2461  0000d34b          	.align 2
 2462  0000d34c          	LC6_LF1:
 2463  0000d34c  46726565	.ascii "Freed page 0x%x, %d remaining.\n\000"
 2463  0000d350  64207061	
 2463  0000d354  67652030	
 2463  0000d358  7825782c	
 2463  0000d35c  20256420	
 2463  0000d360  72656d61	
 2463  0000d364  696e696e	
 2463  0000d368  672e0a00	
 2464  0000d36c          	.text
 2465  00002ef8          	.align 2
 2466  00002ef8          	.proc _MemoryFreePage
 2467  00002ef8          	.global _MemoryFreePage
 2468  00002ef8          	_MemoryFreePage:
 2469                      ;  Function 'MemoryFreePage'; 0 bytes of locals, 6 regs to save.
 2470  00002ef8  afbefffc	sw	-4(r29),r30; push fp
 2471  00002efc  001df020	add	r30,r0,r29; fp = sp
 2472  00002f00  afbffff8	sw	-8(r29),r31; push ret addr
 2473  00002f04  2fbd0020	subui	r29,r29,#32; alloc local storage
 2474  00002f08  afa20000	sw	0(r29),r2
 2475  00002f0c  afa30004	sw	4(r29),r3
 2476  00002f10  afa40008	sw	8(r29),r4
 2477  00002f14  afa5000c	sw	12(r29),r5
 2478  00002f18  afa60010	sw	16(r29),r6
 2479  00002f1c  afa70014	sw	20(r29),r7
 2480  00002f20  8fc60000	lw	r6,(r30)
 2481  00002f24  20030001	addi	r3,r0,#1
 2482  00002f28  00061020	add	r2,r0,r6
 2483  00002f2c  74c10000	sgei	r1,r6,#0
 2484  00002f30  14200008	bnez	r1,L131_LF1
 2485  00002f34  54000000	nop; not filled.
 2486  00002f38  20c2001f	addi	r2,r6,#31
 2487  00002f3c          	L131_LF1:
 2488  00002f3c  5c450005	srai	r5,r2,#0x5
 2489  00002f40  50a10005	slli	r1,r5,#0x5
 2490  00002f44  00c10822	sub	r1,r6,r1
 2491  00002f48  00611804	sll	r3,r3,r1
 2492  00002f4c  3c010000	lhi	r1,((_negativeone_LF1)>>16)&0xffff
 2493  00002f50  2421d258	addui	r1,r1,(_negativeone_LF1)&0xffff
 2494  00002f54  8c210000	lw	r1,(r1)
 2495  00002f58  00611026	xor	r2,r3,r1
 2496  00002f5c  50a10002	slli	r1,r5,#0x2
 2497  00002f60  3c070000	lhi	r7,((_freepages_LF1)>>16)&0xffff
 2498  00002f64  24e7d3b4	addui	r7,r7,(_freepages_LF1)&0xffff
 2499  00002f68  00272020	add	r4,r1,r7
 2500  00002f6c  8c810000	lw	r1,(r4)
 2501  00002f70  00220824	and	r1,r1,r2
 2502  00002f74  00230825	or	r1,r1,r3
 2503  00002f78  ac810000	sw	(r4),r1
 2504  00002f7c  23bdfff8	addi	r29,r29,#-8
 2505  00002f80  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 2506  00002f84  24e7fc26	addui	r7,r7,(_debugstr)&0xffff
 2507  00002f88  afa70000	sw	(r29),r7
 2508  00002f8c  2007006d	addi	r7,r0,#109
 2509  00002f90  afa70004	sw	4(r29),r7
 2510  00002f94  0c000b84	jal	_dindex
 2511  00002f98  54000000	nop; not filled.
 2512  00002f9c  23bd0008	addi	r29,r29,#8
 2513  00002fa0  64210000	snei	r1,r1,#0
 2514  00002fa4  14200034	bnez	r1,L135_LF1
 2515  00002fa8  54000000	nop; not filled.
 2516  00002fac  23bdfff8	addi	r29,r29,#-8
 2517  00002fb0  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 2518  00002fb4  24e7fc26	addui	r7,r7,(_debugstr)&0xffff
 2519  00002fb8  afa70000	sw	(r29),r7
 2520  00002fbc  2007002b	addi	r7,r0,#43
 2521  00002fc0  afa70004	sw	4(r29),r7
 2522  00002fc4  0c000b54	jal	_dindex
 2523  00002fc8  54000000	nop; not filled.
 2524  00002fcc  23bd0008	addi	r29,r29,#8
 2525  00002fd0  64210000	snei	r1,r1,#0
 2526  00002fd4  1020002c	beqz	r1,L130_LF1
 2527  00002fd8  54000000	nop; not filled.
 2528  00002fdc          	L135_LF1:
 2529  00002fdc  23bdfff0	addi	r29,r29,#-16
 2530  00002fe0  3c070000	lhi	r7,((LC0_LF1)>>16)&0xffff
 2531  00002fe4  24e7d25c	addui	r7,r7,(LC0_LF1)&0xffff
 2532  00002fe8  afa70000	sw	(r29),r7
 2533  00002fec  afa50004	sw	4(r29),r5
 2534  00002ff0  8c840000	lw	r4,(r4)
 2535  00002ff4  afa40008	sw	8(r29),r4
 2536  00002ff8  0c0071fc	jal	_printf
 2537  00002ffc  54000000	nop; not filled.
 2538  00003000  23bd0010	addi	r29,r29,#16
 2539  00003004          	L130_LF1:
 2540  00003004  3c020000	lhi	r2,((_nfreepages_LF1)>>16)&0xffff
 2541  00003008  2442d3b0	addui	r2,r2,(_nfreepages_LF1)&0xffff
 2542  0000300c  8c410000	lw	r1,(r2)
 2543  00003010  20210001	addi	r1,r1,#1
 2544  00003014  ac410000	sw	(r2),r1
 2545  00003018  23bdfff8	addi	r29,r29,#-8
 2546  0000301c  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 2547  00003020  2463fc26	addui	r3,r3,(_debugstr)&0xffff
 2548  00003024  afa30000	sw	(r29),r3
 2549  00003028  2007006d	addi	r7,r0,#109
 2550  0000302c  afa70004	sw	4(r29),r7
 2551  00003030  0c000ae8	jal	_dindex
 2552  00003034  54000000	nop; not filled.
 2553  00003038  23bd0008	addi	r29,r29,#8
 2554  0000303c  64210000	snei	r1,r1,#0
 2555  00003040  1420002c	bnez	r1,L137_LF1
 2556  00003044  54000000	nop; not filled.
 2557  00003048  23bdfff8	addi	r29,r29,#-8
 2558  0000304c  afa30000	sw	(r29),r3
 2559  00003050  2007002b	addi	r7,r0,#43
 2560  00003054  afa70004	sw	4(r29),r7
 2561  00003058  0c000ac0	jal	_dindex
 2562  0000305c  54000000	nop; not filled.
 2563  00003060  23bd0008	addi	r29,r29,#8
 2564  00003064  64210000	snei	r1,r1,#0
 2565  00003068  1020002c	beqz	r1,L136_LF1
 2566  0000306c  54000000	nop; not filled.
 2567  00003070          	L137_LF1:
 2568  00003070  23bdfff0	addi	r29,r29,#-16
 2569  00003074  3c070000	lhi	r7,((LC6_LF1)>>16)&0xffff
 2570  00003078  24e7d34c	addui	r7,r7,(LC6_LF1)&0xffff
 2571  0000307c  afa70000	sw	(r29),r7
 2572  00003080  afa60004	sw	4(r29),r6
 2573  00003084  8c420000	lw	r2,(r2)
 2574  00003088  afa20008	sw	8(r29),r2
 2575  0000308c  0c007168	jal	_printf
 2576  00003090  54000000	nop; not filled.
 2577  00003094  23bd0010	addi	r29,r29,#16
 2578  00003098          	L136_LF1:
 2579  00003098  8fa20000	lw	r2,0(r29)
 2580  0000309c  8fa30004	lw	r3,4(r29)
 2581  000030a0  8fa40008	lw	r4,8(r29)
 2582  000030a4  8fa5000c	lw	r5,12(r29)
 2583  000030a8  8fa60010	lw	r6,16(r29)
 2584  000030ac  8fa70014	lw	r7,20(r29)
 2585  000030b0  8fdffff8	lw	r31,-8(r30)
 2586  000030b4  001ee820	add	r29,r0,r30
 2587  000030b8  8fdefffc	lw	r30,-4(r30)
 2588  000030bc  4be00000	jr	r31
 2589  000030c0  54000000	nop
 2590  000030c4          	.endproc _MemoryFreePage
 2591  000030c4          	.align 2
 2592  000030c4          	.proc _MemoryTranslateUserToSystem
 2593  000030c4          	.global _MemoryTranslateUserToSystem
 2594  000030c4          	_MemoryTranslateUserToSystem:
 2595                      ;  Function 'MemoryTranslateUserToSystem'; 0 bytes of locals, 3 regs to save.
 2596  000030c4  afbefffc	sw	-4(r29),r30; push fp
 2597  000030c8  001df020	add	r30,r0,r29; fp = sp
 2598  000030cc  afbffff8	sw	-8(r29),r31; push ret addr
 2599  000030d0  2fbd0018	subui	r29,r29,#24; alloc local storage
 2600  000030d4  afa20000	sw	0(r29),r2
 2601  000030d8  afa30004	sw	4(r29),r3
 2602  000030dc  afa40008	sw	8(r29),r4
 2603  000030e0  8fc30000	lw	r3,(r30)
 2604  000030e4  8fc10004	lw	r1,4(r30)
 2605  000030e8  583f0010	srli	r31,r1,#0x10
 2606  000030ec  3022ffff	andi	r2,r1,#0xffff
 2607  000030f0  8c6100a0	lw	r1,160(r3)
 2608  000030f4  03e1082b	sgt	r1,r31,r1
 2609  000030f8  14200024	bnez	r1,L141_LF1
 2610  000030fc  54000000	nop; not filled.
 2611  00003100  53e10002	slli	r1,r31,#0x2
 2612  00003104  00230820	add	r1,r1,r3
 2613  00003108  8c210060	lw	r1,96(r1)
 2614  0000310c  2004fff8	addi	r4,r0,#-8
 2615  00003110  00240824	and	r1,r1,r4
 2616  00003114  00220820	add	r1,r1,r2
 2617  00003118  08000008	j	L142_LF1
 2618  0000311c  54000000	nop; not filled.
 2619  00003120          	L141_LF1:
 2620  00003120  20010000	addi	r1,r0,#0
 2621  00003124          	L142_LF1:
 2622  00003124  8fa20000	lw	r2,0(r29)
 2623  00003128  8fa30004	lw	r3,4(r29)
 2624  0000312c  8fa40008	lw	r4,8(r29)
 2625  00003130  8fdffff8	lw	r31,-8(r30)
 2626  00003134  001ee820	add	r29,r0,r30
 2627  00003138  8fdefffc	lw	r30,-4(r30)
 2628  0000313c  4be00000	jr	r31
 2629  00003140  54000000	nop
 2630  00003144          	.endproc _MemoryTranslateUserToSystem
 2631  00003144          	.align 2
 2632  00003144          	.proc _MemoryCopySystemToUser
 2633  00003144          	.global _MemoryCopySystemToUser
 2634  00003144          	_MemoryCopySystemToUser:
 2635                      ;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 8 regs to save.
 2636  00003144  afbefffc	sw	-4(r29),r30; push fp
 2637  00003148  001df020	add	r30,r0,r29; fp = sp
 2638  0000314c  afbffff8	sw	-8(r29),r31; push ret addr
 2639  00003150  2fbd0028	subui	r29,r29,#40; alloc local storage
 2640  00003154  afa20000	sw	0(r29),r2
 2641  00003158  afa30004	sw	4(r29),r3
 2642  0000315c  afa40008	sw	8(r29),r4
 2643  00003160  afa5000c	sw	12(r29),r5
 2644  00003164  afa60010	sw	16(r29),r6
 2645  00003168  afa70014	sw	20(r29),r7
 2646  0000316c  afa80018	sw	24(r29),r8
 2647  00003170  afa9001c	sw	28(r29),r9
 2648  00003174  8fc70000	lw	r7,(r30)
 2649  00003178  8fc50004	lw	r5,4(r30)
 2650  0000317c  8fc40008	lw	r4,8(r30)
 2651  00003180  8fc3000c	lw	r3,12(r30)
 2652  00003184  20060000	addi	r6,r0,#0
 2653  00003188  6c610000	sgti	r1,r3,#0
 2654  0000318c  102000a4	beqz	r1,L180_LF1
 2655  00003190  54000000	nop; not filled.
 2656  00003194  3c080001	lhi	r8,#1
 2657  00003198  25080000	addui	r8,r8,#0
 2658  0000319c          	L181_LF1:
 2659  0000319c  58820010	srli	r2,r4,#0x10
 2660  000031a0  309fffff	andi	r31,r4,#0xffff
 2661  000031a4  8ce100a0	lw	r1,160(r7)
 2662  000031a8  0041082b	sgt	r1,r2,r1
 2663  000031ac  10200010	beqz	r1,L183_LF1
 2664  000031b0  54000000	nop; not filled.
 2665  000031b4  201f0000	addi	r31,r0,#0
 2666  000031b8  0800001c	j	L182_LF1
 2667  000031bc  54000000	nop; not filled.
 2668  000031c0          	L183_LF1:
 2669  000031c0  50410002	slli	r1,r2,#0x2
 2670  000031c4  00270820	add	r1,r1,r7
 2671  000031c8  8c210060	lw	r1,96(r1)
 2672  000031cc  2009fff8	addi	r9,r0,#-8
 2673  000031d0  00290824	and	r1,r1,r9
 2674  000031d4  003ff820	add	r31,r1,r31
 2675  000031d8          	L182_LF1:
 2676  000031d8  67e10000	snei	r1,r31,#0
 2677  000031dc  10200054	beqz	r1,L180_LF1
 2678  000031e0  54000000	nop; not filled.
 2679  000031e4  33e1ffff	andi	r1,r31,#65535
 2680  000031e8  01011022	sub	r2,r8,r1
 2681  000031ec  0043082b	sgt	r1,r2,r3
 2682  000031f0  10200008	beqz	r1,L185_LF1
 2683  000031f4  54000000	nop; not filled.
 2684  000031f8  00031020	add	r2,r0,r3
 2685  000031fc          	L185_LF1:
 2686  000031fc  23bdfff0	addi	r29,r29,#-16
 2687  00003200  afa50000	sw	(r29),r5
 2688  00003204  afbf0004	sw	4(r29),r31
 2689  00003208  afa20008	sw	8(r29),r2
 2690  0000320c  0c000c9c	jal	_bcopy
 2691  00003210  54000000	nop; not filled.
 2692  00003214  23bd0010	addi	r29,r29,#16
 2693  00003218  00621822	sub	r3,r3,r2
 2694  0000321c  00c23020	add	r6,r6,r2
 2695  00003220  00a22820	add	r5,r5,r2
 2696  00003224  00822020	add	r4,r4,r2
 2697  00003228  6c610000	sgti	r1,r3,#0
 2698  0000322c  1420ff6c	bnez	r1,L181_LF1
 2699  00003230  54000000	nop; not filled.
 2700  00003234          	L180_LF1:
 2701  00003234  00060820	add	r1,r0,r6
 2702  00003238  8fa20000	lw	r2,0(r29)
 2703  0000323c  8fa30004	lw	r3,4(r29)
 2704  00003240  8fa40008	lw	r4,8(r29)
 2705  00003244  8fa5000c	lw	r5,12(r29)
 2706  00003248  8fa60010	lw	r6,16(r29)
 2707  0000324c  8fa70014	lw	r7,20(r29)
 2708  00003250  8fa80018	lw	r8,24(r29)
 2709  00003254  8fa9001c	lw	r9,28(r29)
 2710  00003258  8fdffff8	lw	r31,-8(r30)
 2711  0000325c  001ee820	add	r29,r0,r30
 2712  00003260  8fdefffc	lw	r30,-4(r30)
 2713  00003264  4be00000	jr	r31
 2714  00003268  54000000	nop
 2715  0000326c          	.endproc _MemoryCopySystemToUser
 2716  0000326c          	.align 2
 2717  0000326c          	.proc _MemoryCopyUserToSystem
 2718  0000326c          	.global _MemoryCopyUserToSystem
 2719  0000326c          	_MemoryCopyUserToSystem:
 2720                      ;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 8 regs to save.
 2721  0000326c  afbefffc	sw	-4(r29),r30; push fp
 2722  00003270  001df020	add	r30,r0,r29; fp = sp
 2723  00003274  afbffff8	sw	-8(r29),r31; push ret addr
 2724  00003278  2fbd0028	subui	r29,r29,#40; alloc local storage
 2725  0000327c  afa20000	sw	0(r29),r2
 2726  00003280  afa30004	sw	4(r29),r3
 2727  00003284  afa40008	sw	8(r29),r4
 2728  00003288  afa5000c	sw	12(r29),r5
 2729  0000328c  afa60010	sw	16(r29),r6
 2730  00003290  afa70014	sw	20(r29),r7
 2731  00003294  afa80018	sw	24(r29),r8
 2732  00003298  afa9001c	sw	28(r29),r9
 2733  0000329c  8fc70000	lw	r7,(r30)
 2734  000032a0  8fc50008	lw	r5,8(r30)
 2735  000032a4  8fc40004	lw	r4,4(r30)
 2736  000032a8  8fc3000c	lw	r3,12(r30)
 2737  000032ac  20060000	addi	r6,r0,#0
 2738  000032b0  6c610000	sgti	r1,r3,#0
 2739  000032b4  102000a4	beqz	r1,L204_LF1
 2740  000032b8  54000000	nop; not filled.
 2741  000032bc  3c080001	lhi	r8,#1
 2742  000032c0  25080000	addui	r8,r8,#0
 2743  000032c4          	L205_LF1:
 2744  000032c4  58820010	srli	r2,r4,#0x10
 2745  000032c8  309fffff	andi	r31,r4,#0xffff
 2746  000032cc  8ce100a0	lw	r1,160(r7)
 2747  000032d0  0041082b	sgt	r1,r2,r1
 2748  000032d4  10200010	beqz	r1,L207_LF1
 2749  000032d8  54000000	nop; not filled.
 2750  000032dc  201f0000	addi	r31,r0,#0
 2751  000032e0  0800001c	j	L206_LF1
 2752  000032e4  54000000	nop; not filled.
 2753  000032e8          	L207_LF1:
 2754  000032e8  50410002	slli	r1,r2,#0x2
 2755  000032ec  00270820	add	r1,r1,r7
 2756  000032f0  8c210060	lw	r1,96(r1)
 2757  000032f4  2009fff8	addi	r9,r0,#-8
 2758  000032f8  00290824	and	r1,r1,r9
 2759  000032fc  003ff820	add	r31,r1,r31
 2760  00003300          	L206_LF1:
 2761  00003300  67e10000	snei	r1,r31,#0
 2762  00003304  10200054	beqz	r1,L204_LF1
 2763  00003308  54000000	nop; not filled.
 2764  0000330c  33e1ffff	andi	r1,r31,#65535
 2765  00003310  01011022	sub	r2,r8,r1
 2766  00003314  0043082b	sgt	r1,r2,r3
 2767  00003318  10200008	beqz	r1,L210_LF1
 2768  0000331c  54000000	nop; not filled.
 2769  00003320  00031020	add	r2,r0,r3
 2770  00003324          	L210_LF1:
 2771  00003324  23bdfff0	addi	r29,r29,#-16
 2772  00003328  afbf0000	sw	(r29),r31
 2773  0000332c  afa50004	sw	4(r29),r5
 2774  00003330  afa20008	sw	8(r29),r2
 2775  00003334  0c000b74	jal	_bcopy
 2776  00003338  54000000	nop; not filled.
 2777  0000333c  23bd0010	addi	r29,r29,#16
 2778  00003340  00621822	sub	r3,r3,r2
 2779  00003344  00c23020	add	r6,r6,r2
 2780  00003348  00a22820	add	r5,r5,r2
 2781  0000334c  00822020	add	r4,r4,r2
 2782  00003350  6c610000	sgti	r1,r3,#0
 2783  00003354  1420ff6c	bnez	r1,L205_LF1
 2784  00003358  54000000	nop; not filled.
 2785  0000335c          	L204_LF1:
 2786  0000335c  00060820	add	r1,r0,r6
 2787  00003360  8fa20000	lw	r2,0(r29)
 2788  00003364  8fa30004	lw	r3,4(r29)
 2789  00003368  8fa40008	lw	r4,8(r29)
 2790  0000336c  8fa5000c	lw	r5,12(r29)
 2791  00003370  8fa60010	lw	r6,16(r29)
 2792  00003374  8fa70014	lw	r7,20(r29)
 2793  00003378  8fa80018	lw	r8,24(r29)
 2794  0000337c  8fa9001c	lw	r9,28(r29)
 2795  00003380  8fdffff8	lw	r31,-8(r30)
 2796  00003384  001ee820	add	r29,r0,r30
 2797  00003388  8fdefffc	lw	r30,-4(r30)
 2798  0000338c  4be00000	jr	r31
 2799  00003390  54000000	nop
 2800  00003394          	.endproc _MemoryCopyUserToSystem
 2801  00003394          	.align 2
 2802  00003394          	.proc _MemorySetupPte
 2803  00003394          	.global _MemorySetupPte
 2804  00003394          	_MemorySetupPte:
 2805                      ;  Function 'MemorySetupPte'; 0 bytes of locals, 0 regs to save.
 2806  00003394  afbefffc	sw	-4(r29),r30; push fp
 2807  00003398  001df020	add	r30,r0,r29; fp = sp
 2808  0000339c  afbffff8	sw	-8(r29),r31; push ret addr
 2809  000033a0  2fbd0008	subui	r29,r29,#8; alloc local storage
 2810  000033a4  8fc10000	lw	r1,(r30)
 2811  000033a8  50210010	slli	r1,r1,#0x10
 2812  000033ac  34210001	ori	r1,r1,#1
 2813  000033b0  8fdffff8	lw	r31,-8(r30)
 2814  000033b4  001ee820	add	r29,r0,r30
 2815  000033b8  8fdefffc	lw	r30,-4(r30)
 2816  000033bc  4be00000	jr	r31
 2817  000033c0  54000000	nop
 2818  000033c4          	.endproc _MemorySetupPte
 2819  000033c4          	.align 2
 2820  000033c4          	.proc _MemoryFreePte
 2821  000033c4          	.global _MemoryFreePte
 2822  000033c4          	_MemoryFreePte:
 2823                      ;  Function 'MemoryFreePte'; 0 bytes of locals, 0 regs to save.
 2824  000033c4  afbefffc	sw	-4(r29),r30; push fp
 2825  000033c8  001df020	add	r30,r0,r29; fp = sp
 2826  000033cc  afbffff8	sw	-8(r29),r31; push ret addr
 2827  000033d0  2fbd0008	subui	r29,r29,#8; alloc local storage
 2828  000033d4  23bdfff8	addi	r29,r29,#-8
 2829  000033d8  97c10000	lhu	r1,(r30)
 2830  000033dc  afa10000	sw	(r29),r1
 2831  000033e0  0ffffb14	jal	_MemoryFreePage
 2832  000033e4  54000000	nop; not filled.
 2833  000033e8  23bd0008	addi	r29,r29,#8
 2834  000033ec  8fdffff8	lw	r31,-8(r30)
 2835  000033f0  001ee820	add	r29,r0,r30
 2836  000033f4  8fdefffc	lw	r30,-4(r30)
 2837  000033f8  4be00000	jr	r31
 2838  000033fc  54000000	nop
 2839  00003400          	.endproc _MemoryFreePte
 2840  00003400          	.align 2
 2841  00003400          	.proc _MemoryPteToPage
 2842  00003400          	.global _MemoryPteToPage
 2843  00003400          	_MemoryPteToPage:
 2844                      ;  Function 'MemoryPteToPage'; 0 bytes of locals, 0 regs to save.
 2845  00003400  afbefffc	sw	-4(r29),r30; push fp
 2846  00003404  001df020	add	r30,r0,r29; fp = sp
 2847  00003408  afbffff8	sw	-8(r29),r31; push ret addr
 2848  0000340c  2fbd0008	subui	r29,r29,#8; alloc local storage
 2849  00003410  8fc10000	lw	r1,(r30)
 2850  00003414  201ffff8	addi	r31,r0,#-8
 2851  00003418  003f0824	and	r1,r1,r31
 2852  0000341c  8fdffff8	lw	r31,-8(r30)
 2853  00003420  001ee820	add	r29,r0,r30
 2854  00003424  8fdefffc	lw	r30,-4(r30)
 2855  00003428  4be00000	jr	r31
 2856  0000342c  54000000	nop
 2857  00003430          	.endproc _MemoryPteToPage
 2858  00003430          	.data
 2859  0000d36c          	.align 2
 2860  0000d36c          	_invalidOps61_LF1:
 2861  0000d36c  00003404	.word 13316
 2862  0000d370          	.align 2
 2863  0000d370          	LC7_LF1:
 2864  0000d370  4f706572	.ascii "Operand for instruction %08x is 0x%x (reg=<%d,0x%x>)\n\000"
 2864  0000d374  616e6420	
 2864  0000d378  666f7220	
 2864  0000d37c  696e7374	
 2864  0000d380  72756374	
 2864  0000d384  696f6e20	
 2864  0000d388  25303878	
 2864  0000d38c  20697320	
 2864  0000d390  30782578	
 2864  0000d394  20287265	
 2864  0000d398  673d3c25	
 2864  0000d39c  642c3078	
 2864  0000d3a0  25783e29	
 2864  0000d3a4  0a00    	
 2865  0000d3a6          	.text
 2866  00003430          	.align 2
 2867  00003430          	.proc _MemoryGetOperandAddress
 2868  00003430          	.global _MemoryGetOperandAddress
 2869  00003430          	_MemoryGetOperandAddress:
 2870                      ;  Function 'MemoryGetOperandAddress'; 0 bytes of locals, 6 regs to save.
 2871  00003430  afbefffc	sw	-4(r29),r30; push fp
 2872  00003434  001df020	add	r30,r0,r29; fp = sp
 2873  00003438  afbffff8	sw	-8(r29),r31; push ret addr
 2874  0000343c  2fbd0020	subui	r29,r29,#32; alloc local storage
 2875  00003440  afa20000	sw	0(r29),r2
 2876  00003444  afa30004	sw	4(r29),r3
 2877  00003448  afa40008	sw	8(r29),r4
 2878  0000344c  afa5000c	sw	12(r29),r5
 2879  00003450  afa60010	sw	16(r29),r6
 2880  00003454  afa70014	sw	20(r29),r7
 2881  00003458  8fc20000	lw	r2,(r30)
 2882  0000345c  8fc50004	lw	r5,4(r30)
 2883  00003460  58a1001a	srli	r1,r5,#0x1a
 2884  00003464  203fffe0	addi	r31,r1,#-32
 2885  00003468  6fe1000f	sgtui	r1,r31,#15
 2886  0000346c  14200020	bnez	r1,L227_LF1
 2887  00003470  54000000	nop; not filled.
 2888  00003474  3c010000	lhi	r1,((_invalidOps61_LF1)>>16)&0xffff
 2889  00003478  2421d36c	addui	r1,r1,(_invalidOps61_LF1)&0xffff
 2890  0000347c  8c210000	lw	r1,(r1)
 2891  00003480  003f0806	srl	r1,r1,r31
 2892  00003484  30210001	andi	r1,r1,#1
 2893  00003488  10200010	beqz	r1,L226_LF1
 2894  0000348c  54000000	nop; not filled.
 2895  00003490          	L227_LF1:
 2896  00003490  2001ffff	addi	r1,r0,#-1
 2897  00003494  080000c4	j	L231_LF1
 2898  00003498  54000000	nop; not filled.
 2899  0000349c          	L226_LF1:
 2900  0000349c  58a10015	srli	r1,r5,#0x15
 2901  000034a0  3026001f	andi	r6,r1,#31
 2902  000034a4  30bfffff	andi	r31,r5,#0xffff
 2903  000034a8  5be1000f	srli	r1,r31,#0xf
 2904  000034ac  10200010	beqz	r1,L228_LF1
 2905  000034b0  54000000	nop; not filled.
 2906  000034b4  3c07ffff	lhi	r7,#-1
 2907  000034b8  24e70000	addui	r7,r7,#0
 2908  000034bc  03e7f825	or	r31,r31,r7
 2909  000034c0          	L228_LF1:
 2910  000034c0  8c420000	lw	r2,(r2)
 2911  000034c4  50c10002	slli	r1,r6,#0x2
 2912  000034c8  00220820	add	r1,r1,r2
 2913  000034cc  8c230028	lw	r3,40(r1)
 2914  000034d0  007f2020	add	r4,r3,r31
 2915  000034d4  23bdfff8	addi	r29,r29,#-8
 2916  000034d8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2917  000034dc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2918  000034e0  afa20000	sw	(r29),r2
 2919  000034e4  2007006d	addi	r7,r0,#109
 2920  000034e8  afa70004	sw	4(r29),r7
 2921  000034ec  0c00062c	jal	_dindex
 2922  000034f0  54000000	nop; not filled.
 2923  000034f4  23bd0008	addi	r29,r29,#8
 2924  000034f8  64210000	snei	r1,r1,#0
 2925  000034fc  1420002c	bnez	r1,L230_LF1
 2926  00003500  54000000	nop; not filled.
 2927  00003504  23bdfff8	addi	r29,r29,#-8
 2928  00003508  afa20000	sw	(r29),r2
 2929  0000350c  2007002b	addi	r7,r0,#43
 2930  00003510  afa70004	sw	4(r29),r7
 2931  00003514  0c000604	jal	_dindex
 2932  00003518  54000000	nop; not filled.
 2933  0000351c  23bd0008	addi	r29,r29,#8
 2934  00003520  64210000	snei	r1,r1,#0
 2935  00003524  10200030	beqz	r1,L229_LF1
 2936  00003528  54000000	nop; not filled.
 2937  0000352c          	L230_LF1:
 2938  0000352c  23bdffe8	addi	r29,r29,#-24
 2939  00003530  3c070000	lhi	r7,((LC7_LF1)>>16)&0xffff
 2940  00003534  24e7d370	addui	r7,r7,(LC7_LF1)&0xffff
 2941  00003538  afa70000	sw	(r29),r7
 2942  0000353c  afa50004	sw	4(r29),r5
 2943  00003540  afa40008	sw	8(r29),r4
 2944  00003544  afa6000c	sw	12(r29),r6
 2945  00003548  afa30010	sw	16(r29),r3
 2946  0000354c  0c006ca8	jal	_printf
 2947  00003550  54000000	nop; not filled.
 2948  00003554  23bd0018	addi	r29,r29,#24
 2949  00003558          	L229_LF1:
 2950  00003558  00040820	add	r1,r0,r4
 2951  0000355c          	L231_LF1:
 2952  0000355c  8fa20000	lw	r2,0(r29)
 2953  00003560  8fa30004	lw	r3,4(r29)
 2954  00003564  8fa40008	lw	r4,8(r29)
 2955  00003568  8fa5000c	lw	r5,12(r29)
 2956  0000356c  8fa60010	lw	r6,16(r29)
 2957  00003570  8fa70014	lw	r7,20(r29)
 2958  00003574  8fdffff8	lw	r31,-8(r30)
 2959  00003578  001ee820	add	r29,r0,r30
 2960  0000357c  8fdefffc	lw	r30,-4(r30)
 2961  00003580  4be00000	jr	r31
 2962  00003584  54000000	nop
 2963  00003588          	.endproc _MemoryGetOperandAddress
 2964  00003588          	.data
 2965  0000d3a6          	.align 2
 2966  0000d3a8          	_pagestart_LF1:
 2967  0000d3a8          	.space 4
 2968  0000d3ac          	.align 2
 2969  0000d3ac          	_freemapmax_LF1:
 2970  0000d3ac          	.space 4
 2971  0000d3b0          	.align 2
 2972  0000d3b0          	_nfreepages_LF1:
 2973  0000d3b0          	.space 4
 2974  0000d3b4          	.align 2
 2975  0000d3b4          	_freepages_LF1:
 2976  0000d3b4          	.space 8192
 2977                      ; Compiled by GCC
 2978  0000f3b4          	.text
 2979  00003588          	.align 2
 2980  00003588          	.proc _isspace
 2981  00003588          	.global _isspace
 2982  00003588          	_isspace:
 2983                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 2984  00003588  afbefffc	sw	-4(r29),r30; push fp
 2985  0000358c  001df020	add	r30,r0,r29; fp = sp
 2986  00003590  afbffff8	sw	-8(r29),r31; push ret addr
 2987  00003594  2fbd0010	subui	r29,r29,#16; alloc local storage
 2988  00003598  afa20000	sw	0(r29),r2
 2989  0000359c  83c20003	lb	r2,3(r30)
 2990  000035a0  201f0000	addi	r31,r0,#0
 2991  000035a4  304100ff	andi	r1,r2,#0x00ff
 2992  000035a8  60210020	seqi	r1,r1,#32
 2993  000035ac  14200018	bnez	r1,L6_LF2
 2994  000035b0  54000000	nop; not filled.
 2995  000035b4  2041fff7	addi	r1,r2,#-9
 2996  000035b8  302100ff	andi	r1,r1,#0x00ff
 2997  000035bc  70210001	sleui	r1,r1,#1
 2998  000035c0  10200008	beqz	r1,L5_LF2
 2999  000035c4  54000000	nop; not filled.
 3000  000035c8          	L6_LF2:
 3001  000035c8  201f0001	addi	r31,r0,#1
 3002  000035cc          	L5_LF2:
 3003  000035cc  001f0820	add	r1,r0,r31
 3004  000035d0  8fa20000	lw	r2,0(r29)
 3005  000035d4  8fdffff8	lw	r31,-8(r30)
 3006  000035d8  001ee820	add	r29,r0,r30
 3007  000035dc  8fdefffc	lw	r30,-4(r30)
 3008  000035e0  4be00000	jr	r31
 3009  000035e4  54000000	nop
 3010  000035e8          	.endproc _isspace
 3011  000035e8          	.align 2
 3012  000035e8          	.proc _isxdigit
 3013  000035e8          	.global _isxdigit
 3014  000035e8          	_isxdigit:
 3015                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 3016  000035e8  afbefffc	sw	-4(r29),r30; push fp
 3017  000035ec  001df020	add	r30,r0,r29; fp = sp
 3018  000035f0  afbffff8	sw	-8(r29),r31; push ret addr
 3019  000035f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 3020  000035f8  afa20000	sw	0(r29),r2
 3021  000035fc  83df0003	lb	r31,3(r30)
 3022  00003600  20020000	addi	r2,r0,#0
 3023  00003604  23e1ffd0	addi	r1,r31,#-48
 3024  00003608  302100ff	andi	r1,r1,#0x00ff
 3025  0000360c  70210009	sleui	r1,r1,#9
 3026  00003610  14200028	bnez	r1,L12_LF2
 3027  00003614  54000000	nop; not filled.
 3028  00003618  23e1ff9f	addi	r1,r31,#-97
 3029  0000361c  302100ff	andi	r1,r1,#0x00ff
 3030  00003620  70210005	sleui	r1,r1,#5
 3031  00003624  14200014	bnez	r1,L12_LF2
 3032  00003628  54000000	nop; not filled.
 3033  0000362c  33e100ff	andi	r1,r31,#0x00ff
 3034  00003630  64210041	snei	r1,r1,#65
 3035  00003634  14200008	bnez	r1,L11_LF2
 3036  00003638  54000000	nop; not filled.
 3037  0000363c          	L12_LF2:
 3038  0000363c  20020001	addi	r2,r0,#1
 3039  00003640          	L11_LF2:
 3040  00003640  00020820	add	r1,r0,r2
 3041  00003644  8fa20000	lw	r2,0(r29)
 3042  00003648  8fdffff8	lw	r31,-8(r30)
 3043  0000364c  001ee820	add	r29,r0,r30
 3044  00003650  8fdefffc	lw	r30,-4(r30)
 3045  00003654  4be00000	jr	r31
 3046  00003658  54000000	nop
 3047  0000365c          	.endproc _isxdigit
 3048  0000365c          	.align 2
 3049  0000365c          	.proc _dstrcpy
 3050  0000365c          	.global _dstrcpy
 3051  0000365c          	_dstrcpy:
 3052                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
 3053  0000365c  afbefffc	sw	-4(r29),r30; push fp
 3054  00003660  001df020	add	r30,r0,r29; fp = sp
 3055  00003664  afbffff8	sw	-8(r29),r31; push ret addr
 3056  00003668  2fbd0010	subui	r29,r29,#16; alloc local storage
 3057  0000366c  afa20000	sw	0(r29),r2
 3058  00003670  afa30004	sw	4(r29),r3
 3059  00003674  8fdf0000	lw	r31,(r30)
 3060  00003678  8fc20004	lw	r2,4(r30)
 3061  0000367c  001f1820	add	r3,r0,r31
 3062  00003680          	L19_LF2:
 3063  00003680  80410000	lb	r1,(r2)
 3064  00003684  a3e10000	sb	(r31),r1
 3065  00003688  20420001	addi	r2,r2,#1
 3066  0000368c  23ff0001	addi	r31,r31,#1
 3067  00003690  302100ff	andi	r1,r1,#0x00ff
 3068  00003694  64210000	snei	r1,r1,#0
 3069  00003698  1420ffe4	bnez	r1,L19_LF2
 3070  0000369c  54000000	nop; not filled.
 3071  000036a0  00030820	add	r1,r0,r3
 3072  000036a4  8fa20000	lw	r2,0(r29)
 3073  000036a8  8fa30004	lw	r3,4(r29)
 3074  000036ac  8fdffff8	lw	r31,-8(r30)
 3075  000036b0  001ee820	add	r29,r0,r30
 3076  000036b4  8fdefffc	lw	r30,-4(r30)
 3077  000036b8  4be00000	jr	r31
 3078  000036bc  54000000	nop
 3079  000036c0          	.endproc _dstrcpy
 3080  000036c0          	.align 2
 3081  000036c0          	.proc _dstrncpy
 3082  000036c0          	.global _dstrncpy
 3083  000036c0          	_dstrncpy:
 3084                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
 3085  000036c0  afbefffc	sw	-4(r29),r30; push fp
 3086  000036c4  001df020	add	r30,r0,r29; fp = sp
 3087  000036c8  afbffff8	sw	-8(r29),r31; push ret addr
 3088  000036cc  2fbd0018	subui	r29,r29,#24; alloc local storage
 3089  000036d0  afa20000	sw	0(r29),r2
 3090  000036d4  afa30004	sw	4(r29),r3
 3091  000036d8  afa40008	sw	8(r29),r4
 3092  000036dc  8fc20000	lw	r2,(r30)
 3093  000036e0  8fc30004	lw	r3,4(r30)
 3094  000036e4  8fdf0008	lw	r31,8(r30)
 3095  000036e8  00022020	add	r4,r0,r2
 3096  000036ec  08000024	j	L37_LF2
 3097  000036f0  54000000	nop; not filled.
 3098  000036f4          	L34_LF2:
 3099  000036f4  80610000	lb	r1,(r3)
 3100  000036f8  a0410000	sb	(r2),r1
 3101  000036fc  20630001	addi	r3,r3,#1
 3102  00003700  20420001	addi	r2,r2,#1
 3103  00003704  302100ff	andi	r1,r1,#0x00ff
 3104  00003708  64210000	snei	r1,r1,#0
 3105  0000370c  10200018	beqz	r1,L32_LF2
 3106  00003710  54000000	nop; not filled.
 3107  00003714          	L37_LF2:
 3108  00003714  001f0820	add	r1,r0,r31
 3109  00003718  23ffffff	addi	r31,r31,#-1
 3110  0000371c  70210000	slei	r1,r1,#0
 3111  00003720  1020ffd0	beqz	r1,L34_LF2
 3112  00003724  54000000	nop; not filled.
 3113  00003728          	L32_LF2:
 3114  00003728  00040820	add	r1,r0,r4
 3115  0000372c  8fa20000	lw	r2,0(r29)
 3116  00003730  8fa30004	lw	r3,4(r29)
 3117  00003734  8fa40008	lw	r4,8(r29)
 3118  00003738  8fdffff8	lw	r31,-8(r30)
 3119  0000373c  001ee820	add	r29,r0,r30
 3120  00003740  8fdefffc	lw	r30,-4(r30)
 3121  00003744  4be00000	jr	r31
 3122  00003748  54000000	nop
 3123  0000374c          	.endproc _dstrncpy
 3124  0000374c          	.align 2
 3125  0000374c          	.proc _dstrcat
 3126  0000374c          	.global _dstrcat
 3127  0000374c          	_dstrcat:
 3128                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
 3129  0000374c  afbefffc	sw	-4(r29),r30; push fp
 3130  00003750  001df020	add	r30,r0,r29; fp = sp
 3131  00003754  afbffff8	sw	-8(r29),r31; push ret addr
 3132  00003758  2fbd0010	subui	r29,r29,#16; alloc local storage
 3133  0000375c  afa20000	sw	0(r29),r2
 3134  00003760  afa30004	sw	4(r29),r3
 3135  00003764  8fdf0000	lw	r31,(r30)
 3136  00003768  001f1820	add	r3,r0,r31
 3137  0000376c  90610000	lbu	r1,(r3)
 3138  00003770  64210000	snei	r1,r1,#0
 3139  00003774  10200018	beqz	r1,L50_LF2
 3140  00003778  54000000	nop; not filled.
 3141  0000377c          	L51_LF2:
 3142  0000377c  23ff0001	addi	r31,r31,#1
 3143  00003780  93e10000	lbu	r1,(r31)
 3144  00003784  64210000	snei	r1,r1,#0
 3145  00003788  1420fff0	bnez	r1,L51_LF2
 3146  0000378c  54000000	nop; not filled.
 3147  00003790          	L50_LF2:
 3148  00003790  001f1020	add	r2,r0,r31
 3149  00003794  8fdf0004	lw	r31,4(r30)
 3150  00003798          	L54_LF2:
 3151  00003798  83e10000	lb	r1,(r31)
 3152  0000379c  a0410000	sb	(r2),r1
 3153  000037a0  23ff0001	addi	r31,r31,#1
 3154  000037a4  20420001	addi	r2,r2,#1
 3155  000037a8  302100ff	andi	r1,r1,#0x00ff
 3156  000037ac  64210000	snei	r1,r1,#0
 3157  000037b0  1420ffe4	bnez	r1,L54_LF2
 3158  000037b4  54000000	nop; not filled.
 3159  000037b8  00030820	add	r1,r0,r3
 3160  000037bc  8fa20000	lw	r2,0(r29)
 3161  000037c0  8fa30004	lw	r3,4(r29)
 3162  000037c4  8fdffff8	lw	r31,-8(r30)
 3163  000037c8  001ee820	add	r29,r0,r30
 3164  000037cc  8fdefffc	lw	r30,-4(r30)
 3165  000037d0  4be00000	jr	r31
 3166  000037d4  54000000	nop
 3167  000037d8          	.endproc _dstrcat
 3168  000037d8          	.align 2
 3169  000037d8          	.proc _dstrncmp
 3170  000037d8          	.global _dstrncmp
 3171  000037d8          	_dstrncmp:
 3172                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
 3173  000037d8  afbefffc	sw	-4(r29),r30; push fp
 3174  000037dc  001df020	add	r30,r0,r29; fp = sp
 3175  000037e0  afbffff8	sw	-8(r29),r31; push ret addr
 3176  000037e4  2fbd0018	subui	r29,r29,#24; alloc local storage
 3177  000037e8  afa20000	sw	0(r29),r2
 3178  000037ec  afa30004	sw	4(r29),r3
 3179  000037f0  afa40008	sw	8(r29),r4
 3180  000037f4  afa5000c	sw	12(r29),r5
 3181  000037f8  8fc30000	lw	r3,(r30)
 3182  000037fc  8fc40004	lw	r4,4(r30)
 3183  00003800  8fc50008	lw	r5,8(r30)
 3184  00003804  20020000	addi	r2,r0,#0
 3185  00003808  0045082a	slt	r1,r2,r5
 3186  0000380c  1020003c	beqz	r1,L73_LF2
 3187  00003810  54000000	nop; not filled.
 3188  00003814          	L75_LF2:
 3189  00003814  909f0000	lbu	r31,(r4)
 3190  00003818  67e10000	snei	r1,r31,#0
 3191  0000381c  10200038	beqz	r1,L86_LF2
 3192  00003820  54000000	nop; not filled.
 3193  00003824  90610000	lbu	r1,(r3)
 3194  00003828  003f0829	sne	r1,r1,r31
 3195  0000382c  1420001c	bnez	r1,L73_LF2
 3196  00003830  54000000	nop; not filled.
 3197  00003834  20630001	addi	r3,r3,#1
 3198  00003838  20840001	addi	r4,r4,#1
 3199  0000383c  20420001	addi	r2,r2,#1
 3200  00003840  0045082a	slt	r1,r2,r5
 3201  00003844  1420ffcc	bnez	r1,L75_LF2
 3202  00003848  54000000	nop; not filled.
 3203  0000384c          	L73_LF2:
 3204  0000384c  00450828	seq	r1,r2,r5
 3205  00003850  10200010	beqz	r1,L80_LF2
 3206  00003854  54000000	nop; not filled.
 3207  00003858          	L86_LF2:
 3208  00003858  20010000	addi	r1,r0,#0
 3209  0000385c  08000028	j	L84_LF2
 3210  00003860  54000000	nop; not filled.
 3211  00003864          	L80_LF2:
 3212  00003864  907f0000	lbu	r31,(r3)
 3213  00003868  90830000	lbu	r3,(r4)
 3214  0000386c  03e30822	sub	r1,r31,r3
 3215  00003870  74210000	sgei	r1,r1,#0
 3216  00003874  2002ffff	addi	r2,r0,#-1
 3217  00003878  10200008	beqz	r1,L82_LF2
 3218  0000387c  54000000	nop; not filled.
 3219  00003880  03e31029	sne	r2,r31,r3
 3220  00003884          	L82_LF2:
 3221  00003884  00020820	add	r1,r0,r2
 3222  00003888          	L84_LF2:
 3223  00003888  8fa20000	lw	r2,0(r29)
 3224  0000388c  8fa30004	lw	r3,4(r29)
 3225  00003890  8fa40008	lw	r4,8(r29)
 3226  00003894  8fa5000c	lw	r5,12(r29)
 3227  00003898  8fdffff8	lw	r31,-8(r30)
 3228  0000389c  001ee820	add	r29,r0,r30
 3229  000038a0  8fdefffc	lw	r30,-4(r30)
 3230  000038a4  4be00000	jr	r31
 3231  000038a8  54000000	nop
 3232  000038ac          	.endproc _dstrncmp
 3233  000038ac          	.align 2
 3234  000038ac          	.proc _dstrlen
 3235  000038ac          	.global _dstrlen
 3236  000038ac          	_dstrlen:
 3237                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
 3238  000038ac  afbefffc	sw	-4(r29),r30; push fp
 3239  000038b0  001df020	add	r30,r0,r29; fp = sp
 3240  000038b4  afbffff8	sw	-8(r29),r31; push ret addr
 3241  000038b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 3242  000038bc  afa20000	sw	0(r29),r2
 3243  000038c0  8fdf0000	lw	r31,(r30)
 3244  000038c4  20020000	addi	r2,r0,#0
 3245  000038c8  08000008	j	L97_LF2
 3246  000038cc  54000000	nop; not filled.
 3247  000038d0          	L95_LF2:
 3248  000038d0  20420001	addi	r2,r2,#1
 3249  000038d4          	L97_LF2:
 3250  000038d4  93e10000	lbu	r1,(r31)
 3251  000038d8  23ff0001	addi	r31,r31,#1
 3252  000038dc  64210000	snei	r1,r1,#0
 3253  000038e0  1420ffec	bnez	r1,L95_LF2
 3254  000038e4  54000000	nop; not filled.
 3255  000038e8  00020820	add	r1,r0,r2
 3256  000038ec  8fa20000	lw	r2,0(r29)
 3257  000038f0  8fdffff8	lw	r31,-8(r30)
 3258  000038f4  001ee820	add	r29,r0,r30
 3259  000038f8  8fdefffc	lw	r30,-4(r30)
 3260  000038fc  4be00000	jr	r31
 3261  00003900  54000000	nop
 3262  00003904          	.endproc _dstrlen
 3263  00003904          	.align 2
 3264  00003904          	.proc _dstrstr
 3265  00003904          	.global _dstrstr
 3266  00003904          	_dstrstr:
 3267                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
 3268  00003904  afbefffc	sw	-4(r29),r30; push fp
 3269  00003908  001df020	add	r30,r0,r29; fp = sp
 3270  0000390c  afbffff8	sw	-8(r29),r31; push ret addr
 3271  00003910  2fbd0020	subui	r29,r29,#32; alloc local storage
 3272  00003914  afa20000	sw	0(r29),r2
 3273  00003918  afa30004	sw	4(r29),r3
 3274  0000391c  afa40008	sw	8(r29),r4
 3275  00003920  afa5000c	sw	12(r29),r5
 3276  00003924  afa60010	sw	16(r29),r6
 3277  00003928  afa70014	sw	20(r29),r7
 3278  0000392c  8fc50000	lw	r5,(r30)
 3279  00003930  8fc70004	lw	r7,4(r30)
 3280  00003934  20030000	addi	r3,r0,#0
 3281  00003938  90e10000	lbu	r1,(r7)
 3282  0000393c  20e20001	addi	r2,r7,#1
 3283  00003940  64210000	snei	r1,r1,#0
 3284  00003944  1020001c	beqz	r1,L125_LF2
 3285  00003948  54000000	nop; not filled.
 3286  0000394c          	L126_LF2:
 3287  0000394c  20630001	addi	r3,r3,#1
 3288  00003950  90410000	lbu	r1,(r2)
 3289  00003954  20420001	addi	r2,r2,#1
 3290  00003958  64210000	snei	r1,r1,#0
 3291  0000395c  1420ffec	bnez	r1,L126_LF2
 3292  00003960  54000000	nop; not filled.
 3293  00003964          	L125_LF2:
 3294  00003964  00033020	add	r6,r0,r3
 3295  00003968  080000ac	j	L149_LF2
 3296  0000396c  54000000	nop; not filled.
 3297  00003970          	L130_LF2:
 3298  00003970  00051820	add	r3,r0,r5
 3299  00003974  00072020	add	r4,r0,r7
 3300  00003978  20020000	addi	r2,r0,#0
 3301  0000397c  0046082a	slt	r1,r2,r6
 3302  00003980  1020003c	beqz	r1,L134_LF2
 3303  00003984  54000000	nop; not filled.
 3304  00003988          	L136_LF2:
 3305  00003988  909f0000	lbu	r31,(r4)
 3306  0000398c  67e10000	snei	r1,r31,#0
 3307  00003990  10200038	beqz	r1,L150_LF2
 3308  00003994  54000000	nop; not filled.
 3309  00003998  90610000	lbu	r1,(r3)
 3310  0000399c  003f0829	sne	r1,r1,r31
 3311  000039a0  1420001c	bnez	r1,L134_LF2
 3312  000039a4  54000000	nop; not filled.
 3313  000039a8  20630001	addi	r3,r3,#1
 3314  000039ac  20840001	addi	r4,r4,#1
 3315  000039b0  20420001	addi	r2,r2,#1
 3316  000039b4  0046082a	slt	r1,r2,r6
 3317  000039b8  1420ffcc	bnez	r1,L136_LF2
 3318  000039bc  54000000	nop; not filled.
 3319  000039c0          	L134_LF2:
 3320  000039c0  00460828	seq	r1,r2,r6
 3321  000039c4  10200010	beqz	r1,L141_LF2
 3322  000039c8  54000000	nop; not filled.
 3323  000039cc          	L150_LF2:
 3324  000039cc  20010000	addi	r1,r0,#0
 3325  000039d0  08000028	j	L132_LF2
 3326  000039d4  54000000	nop; not filled.
 3327  000039d8          	L141_LF2:
 3328  000039d8  90630000	lbu	r3,(r3)
 3329  000039dc  90820000	lbu	r2,(r4)
 3330  000039e0  00620822	sub	r1,r3,r2
 3331  000039e4  74210000	sgei	r1,r1,#0
 3332  000039e8  201fffff	addi	r31,r0,#-1
 3333  000039ec  10200008	beqz	r1,L143_LF2
 3334  000039f0  54000000	nop; not filled.
 3335  000039f4  0062f829	sne	r31,r3,r2
 3336  000039f8          	L143_LF2:
 3337  000039f8  001f0820	add	r1,r0,r31
 3338  000039fc          	L132_LF2:
 3339  000039fc  64210000	snei	r1,r1,#0
 3340  00003a00  14200010	bnez	r1,L131_LF2
 3341  00003a04  54000000	nop; not filled.
 3342  00003a08  00050820	add	r1,r0,r5
 3343  00003a0c  0800001c	j	L146_LF2
 3344  00003a10  54000000	nop; not filled.
 3345  00003a14          	L131_LF2:
 3346  00003a14  20a50001	addi	r5,r5,#1
 3347  00003a18          	L149_LF2:
 3348  00003a18  90a10000	lbu	r1,(r5)
 3349  00003a1c  64210000	snei	r1,r1,#0
 3350  00003a20  1420ff4c	bnez	r1,L130_LF2
 3351  00003a24  54000000	nop; not filled.
 3352  00003a28  20010000	addi	r1,r0,#0
 3353  00003a2c          	L146_LF2:
 3354  00003a2c  8fa20000	lw	r2,0(r29)
 3355  00003a30  8fa30004	lw	r3,4(r29)
 3356  00003a34  8fa40008	lw	r4,8(r29)
 3357  00003a38  8fa5000c	lw	r5,12(r29)
 3358  00003a3c  8fa60010	lw	r6,16(r29)
 3359  00003a40  8fa70014	lw	r7,20(r29)
 3360  00003a44  8fdffff8	lw	r31,-8(r30)
 3361  00003a48  001ee820	add	r29,r0,r30
 3362  00003a4c  8fdefffc	lw	r30,-4(r30)
 3363  00003a50  4be00000	jr	r31
 3364  00003a54  54000000	nop
 3365  00003a58          	.endproc _dstrstr
 3366  00003a58          	.align 2
 3367  00003a58          	.proc _dmindex
 3368  00003a58          	.global _dmindex
 3369  00003a58          	_dmindex:
 3370                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
 3371  00003a58  afbefffc	sw	-4(r29),r30; push fp
 3372  00003a5c  001df020	add	r30,r0,r29; fp = sp
 3373  00003a60  afbffff8	sw	-8(r29),r31; push ret addr
 3374  00003a64  2fbd0020	subui	r29,r29,#32; alloc local storage
 3375  00003a68  afa20000	sw	0(r29),r2
 3376  00003a6c  afa30004	sw	4(r29),r3
 3377  00003a70  afa40008	sw	8(r29),r4
 3378  00003a74  afa5000c	sw	12(r29),r5
 3379  00003a78  afa60010	sw	16(r29),r6
 3380  00003a7c  8fc40000	lw	r4,(r30)
 3381  00003a80  8fc60004	lw	r6,4(r30)
 3382  00003a84  90810000	lbu	r1,(r4)
 3383  00003a88  64210000	snei	r1,r1,#0
 3384  00003a8c  10200060	beqz	r1,L164_LF2
 3385  00003a90  54000000	nop; not filled.
 3386  00003a94  00012820	add	r5,r0,r1
 3387  00003a98          	L165_LF2:
 3388  00003a98  00061020	add	r2,r0,r6
 3389  00003a9c  80df0000	lb	r31,(r6)
 3390  00003aa0  33e100ff	andi	r1,r31,#0x00ff
 3391  00003aa4  64210000	snei	r1,r1,#0
 3392  00003aa8  1020003c	beqz	r1,L163_LF2
 3393  00003aac  54000000	nop; not filled.
 3394  00003ab0  90830000	lbu	r3,(r4)
 3395  00003ab4          	L169_LF2:
 3396  00003ab4  33e100ff	andi	r1,r31,#0x00ff
 3397  00003ab8  00610828	seq	r1,r3,r1
 3398  00003abc  10200010	beqz	r1,L168_LF2
 3399  00003ac0  54000000	nop; not filled.
 3400  00003ac4  00040820	add	r1,r0,r4
 3401  00003ac8  08000028	j	L173_LF2
 3402  00003acc  54000000	nop; not filled.
 3403  00003ad0          	L168_LF2:
 3404  00003ad0  20420001	addi	r2,r2,#1
 3405  00003ad4  805f0000	lb	r31,(r2)
 3406  00003ad8  33e100ff	andi	r1,r31,#0x00ff
 3407  00003adc  64210000	snei	r1,r1,#0
 3408  00003ae0  1420ffd0	bnez	r1,L169_LF2
 3409  00003ae4  54000000	nop; not filled.
 3410  00003ae8          	L163_LF2:
 3411  00003ae8  14a0ffac	bnez	r5,L165_LF2
 3412  00003aec  54000000	nop; not filled.
 3413  00003af0          	L164_LF2:
 3414  00003af0  20010000	addi	r1,r0,#0
 3415  00003af4          	L173_LF2:
 3416  00003af4  8fa20000	lw	r2,0(r29)
 3417  00003af8  8fa30004	lw	r3,4(r29)
 3418  00003afc  8fa40008	lw	r4,8(r29)
 3419  00003b00  8fa5000c	lw	r5,12(r29)
 3420  00003b04  8fa60010	lw	r6,16(r29)
 3421  00003b08  8fdffff8	lw	r31,-8(r30)
 3422  00003b0c  001ee820	add	r29,r0,r30
 3423  00003b10  8fdefffc	lw	r30,-4(r30)
 3424  00003b14  4be00000	jr	r31
 3425  00003b18  54000000	nop
 3426  00003b1c          	.endproc _dmindex
 3427  00003b1c          	.align 2
 3428  00003b1c          	.proc _dindex
 3429  00003b1c          	.global _dindex
 3430  00003b1c          	_dindex:
 3431                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
 3432  00003b1c  afbefffc	sw	-4(r29),r30; push fp
 3433  00003b20  001df020	add	r30,r0,r29; fp = sp
 3434  00003b24  afbffff8	sw	-8(r29),r31; push ret addr
 3435  00003b28  2fbd0010	subui	r29,r29,#16; alloc local storage
 3436  00003b2c  afa20000	sw	0(r29),r2
 3437  00003b30  afa30004	sw	4(r29),r3
 3438  00003b34  8fc20000	lw	r2,(r30)
 3439  00003b38  8fc30004	lw	r3,4(r30)
 3440  00003b3c  08000024	j	L187_LF2
 3441  00003b40  54000000	nop; not filled.
 3442  00003b44          	L183_LF2:
 3443  00003b44  33e100ff	andi	r1,r31,#0x00ff
 3444  00003b48  00230828	seq	r1,r1,r3
 3445  00003b4c  10200010	beqz	r1,L184_LF2
 3446  00003b50  54000000	nop; not filled.
 3447  00003b54  00020820	add	r1,r0,r2
 3448  00003b58  08000020	j	L186_LF2
 3449  00003b5c  54000000	nop; not filled.
 3450  00003b60          	L184_LF2:
 3451  00003b60  20420001	addi	r2,r2,#1
 3452  00003b64          	L187_LF2:
 3453  00003b64  805f0000	lb	r31,(r2)
 3454  00003b68  33e100ff	andi	r1,r31,#0x00ff
 3455  00003b6c  64210000	snei	r1,r1,#0
 3456  00003b70  1420ffd0	bnez	r1,L183_LF2
 3457  00003b74  54000000	nop; not filled.
 3458  00003b78  20010000	addi	r1,r0,#0
 3459  00003b7c          	L186_LF2:
 3460  00003b7c  8fa20000	lw	r2,0(r29)
 3461  00003b80  8fa30004	lw	r3,4(r29)
 3462  00003b84  8fdffff8	lw	r31,-8(r30)
 3463  00003b88  001ee820	add	r29,r0,r30
 3464  00003b8c  8fdefffc	lw	r30,-4(r30)
 3465  00003b90  4be00000	jr	r31
 3466  00003b94  54000000	nop
 3467  00003b98          	.endproc _dindex
 3468  00003b98          	.align 2
 3469  00003b98          	.proc _ditoa
 3470  00003b98          	.global _ditoa
 3471  00003b98          	_ditoa:
 3472                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
 3473  00003b98  afbefffc	sw	-4(r29),r30; push fp
 3474  00003b9c  001df020	add	r30,r0,r29; fp = sp
 3475  00003ba0  afbffff8	sw	-8(r29),r31; push ret addr
 3476  00003ba4  2fbd0020	subui	r29,r29,#32; alloc local storage
 3477  00003ba8  afa20000	sw	0(r29),r2
 3478  00003bac  afa30004	sw	4(r29),r3
 3479  00003bb0  afa40008	sw	8(r29),r4
 3480  00003bb4  afa5000c	sw	12(r29),r5
 3481  00003bb8  afa60010	sw	16(r29),r6
 3482  00003bbc  8fc30000	lw	r3,(r30)
 3483  00003bc0  8fc40004	lw	r4,4(r30)
 3484  00003bc4  68610000	slti	r1,r3,#0
 3485  00003bc8  10200010	beqz	r1,L203_LF2
 3486  00003bcc  54000000	nop; not filled.
 3487  00003bd0  2006002d	addi	r6,r0,(#0x2d)&0xff
 3488  00003bd4  08000014	j	L216_LF2
 3489  00003bd8  54000000	nop; not filled.
 3490  00003bdc          	L203_LF2:
 3491  00003bdc  64610000	snei	r1,r3,#0
 3492  00003be0  14200018	bnez	r1,L205_LF2
 3493  00003be4  54000000	nop; not filled.
 3494  00003be8  20060030	addi	r6,r0,(#0x30)&0xff
 3495  00003bec          	L216_LF2:
 3496  00003bec  a0860000	sb	(r4),r6
 3497  00003bf0  20840001	addi	r4,r4,#1
 3498  00003bf4  0800007c	j	L204_LF2
 3499  00003bf8  54000000	nop; not filled.
 3500  00003bfc          	L205_LF2:
 3501  00003bfc  201f0001	addi	r31,r0,#1
 3502  00003c00  03e3082c	sle	r1,r31,r3
 3503  00003c04  1020001c	beqz	r1,L208_LF2
 3504  00003c08  54000000	nop; not filled.
 3505  00003c0c          	L209_LF2:
 3506  00003c0c  53e10002	slli	r1,r31,#0x2
 3507  00003c10  003f0820	add	r1,r1,r31
 3508  00003c14  503f0001	slli	r31,r1,#0x1
 3509  00003c18  03e3082c	sle	r1,r31,r3
 3510  00003c1c  1420ffec	bnez	r1,L209_LF2
 3511  00003c20  54000000	nop; not filled.
 3512  00003c24          	L208_LF2:
 3513  00003c24  2005000a	addi	r5,r0,#10
 3514  00003c28          	L212_LF2:
 3515  00003c28  03e00035	movi2fp	f0,r31
 3516  00003c2c  00a00835	movi2fp	f1,r5
 3517  00003c30  0401000f	div	f0,f0,f1
 3518  00003c34  0000f834	movfp2i	r31,f0
 3519  00003c38  00600035	movi2fp	f0,r3
 3520  00003c3c  03e00835	movi2fp	f1,r31
 3521  00003c40  0401000f	div	f0,f0,f1
 3522  00003c44  00001034	movfp2i	r2,f0
 3523  00003c48  20410030	addi	r1,r2,#48
 3524  00003c4c  a0810000	sb	(r4),r1
 3525  00003c50  20840001	addi	r4,r4,#1
 3526  00003c54  00400035	movi2fp	f0,r2
 3527  00003c58  03e00835	movi2fp	f1,r31
 3528  00003c5c  0401000e	mult	f0,f0,f1
 3529  00003c60  00000834	movfp2i	r1,f0
 3530  00003c64  00611822	sub	r3,r3,r1
 3531  00003c68  6fe10001	sgti	r1,r31,#1
 3532  00003c6c  1420ffb8	bnez	r1,L212_LF2
 3533  00003c70  54000000	nop; not filled.
 3534  00003c74          	L204_LF2:
 3535  00003c74  20060000	addi	r6,r0,(#0x0)&0xff
 3536  00003c78  a0860000	sb	(r4),r6
 3537  00003c7c  8fa20000	lw	r2,0(r29)
 3538  00003c80  8fa30004	lw	r3,4(r29)
 3539  00003c84  8fa40008	lw	r4,8(r29)
 3540  00003c88  8fa5000c	lw	r5,12(r29)
 3541  00003c8c  8fa60010	lw	r6,16(r29)
 3542  00003c90  8fdffff8	lw	r31,-8(r30)
 3543  00003c94  001ee820	add	r29,r0,r30
 3544  00003c98  8fdefffc	lw	r30,-4(r30)
 3545  00003c9c  4be00000	jr	r31
 3546  00003ca0  54000000	nop
 3547  00003ca4          	.endproc _ditoa
 3548  00003ca4          	.align 2
 3549  00003ca4          	.proc _dstrtol
 3550  00003ca4          	.global _dstrtol
 3551  00003ca4          	_dstrtol:
 3552                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
 3553  00003ca4  afbefffc	sw	-4(r29),r30; push fp
 3554  00003ca8  001df020	add	r30,r0,r29; fp = sp
 3555  00003cac  afbffff8	sw	-8(r29),r31; push ret addr
 3556  00003cb0  2fbd0020	subui	r29,r29,#32; alloc local storage
 3557  00003cb4  afa20000	sw	0(r29),r2
 3558  00003cb8  afa30004	sw	4(r29),r3
 3559  00003cbc  afa40008	sw	8(r29),r4
 3560  00003cc0  afa5000c	sw	12(r29),r5
 3561  00003cc4  afa60010	sw	16(r29),r6
 3562  00003cc8  8fc20000	lw	r2,(r30)
 3563  00003ccc  8fc50004	lw	r5,4(r30)
 3564  00003cd0  8fc40008	lw	r4,8(r30)
 3565  00003cd4  20030000	addi	r3,r0,#0
 3566  00003cd8  08000008	j	L247_LF2
 3567  00003cdc  54000000	nop; not filled.
 3568  00003ce0          	L220_LF2:
 3569  00003ce0  20420001	addi	r2,r2,#1
 3570  00003ce4          	L247_LF2:
 3571  00003ce4  805f0000	lb	r31,(r2)
 3572  00003ce8  33e100ff	andi	r1,r31,#0x00ff
 3573  00003cec  60210020	seqi	r1,r1,#32
 3574  00003cf0  1420ffec	bnez	r1,L220_LF2
 3575  00003cf4  54000000	nop; not filled.
 3576  00003cf8  23e1fff7	addi	r1,r31,#-9
 3577  00003cfc  302100ff	andi	r1,r1,#0x00ff
 3578  00003d00  70210001	sleui	r1,r1,#1
 3579  00003d04  1420ffd8	bnez	r1,L220_LF2
 3580  00003d08  54000000	nop; not filled.
 3581  00003d0c  64a10000	snei	r1,r5,#0
 3582  00003d10  10200008	beqz	r1,L222_LF2
 3583  00003d14  54000000	nop; not filled.
 3584  00003d18  aca20000	sw	(r5),r2
 3585  00003d1c          	L222_LF2:
 3586  00003d1c  905f0000	lbu	r31,(r2)
 3587  00003d20  67e10000	snei	r1,r31,#0
 3588  00003d24  10200090	beqz	r1,L248_LF2
 3589  00003d28  54000000	nop; not filled.
 3590  00003d2c  63e1002d	seqi	r1,r31,#45
 3591  00003d30  10200014	beqz	r1,L224_LF2
 3592  00003d34  54000000	nop; not filled.
 3593  00003d38  2006ffff	addi	r6,r0,#-1
 3594  00003d3c  20420001	addi	r2,r2,#1
 3595  00003d40  08000008	j	L225_LF2
 3596  00003d44  54000000	nop; not filled.
 3597  00003d48          	L224_LF2:
 3598  00003d48  20060001	addi	r6,r0,#1
 3599  00003d4c          	L225_LF2:
 3600  00003d4c  64810000	snei	r1,r4,#0
 3601  00003d50  14200054	bnez	r1,L226_LF2
 3602  00003d54  54000000	nop; not filled.
 3603  00003d58  90410000	lbu	r1,(r2)
 3604  00003d5c  60210030	seqi	r1,r1,#48
 3605  00003d60  10200040	beqz	r1,L227_LF2
 3606  00003d64  54000000	nop; not filled.
 3607  00003d68  20420001	addi	r2,r2,#1
 3608  00003d6c  905f0000	lbu	r31,(r2)
 3609  00003d70  63e10078	seqi	r1,r31,#120
 3610  00003d74  14200010	bnez	r1,L229_LF2
 3611  00003d78  54000000	nop; not filled.
 3612  00003d7c  63e10058	seqi	r1,r31,#88
 3613  00003d80  10200014	beqz	r1,L228_LF2
 3614  00003d84  54000000	nop; not filled.
 3615  00003d88          	L229_LF2:
 3616  00003d88  20040010	addi	r4,r0,#16
 3617  00003d8c  20420001	addi	r2,r2,#1
 3618  00003d90  08000014	j	L226_LF2
 3619  00003d94  54000000	nop; not filled.
 3620  00003d98          	L228_LF2:
 3621  00003d98  20040008	addi	r4,r0,#8
 3622  00003d9c  08000008	j	L226_LF2
 3623  00003da0  54000000	nop; not filled.
 3624  00003da4          	L227_LF2:
 3625  00003da4  2004000a	addi	r4,r0,#10
 3626  00003da8          	L226_LF2:
 3627  00003da8  2081ffff	addi	r1,r4,#-1
 3628  00003dac  6c21000f	sgtui	r1,r1,#15
 3629  00003db0  10200010	beqz	r1,L233_LF2
 3630  00003db4  54000000	nop; not filled.
 3631  00003db8          	L248_LF2:
 3632  00003db8  00030820	add	r1,r0,r3
 3633  00003dbc  080000c4	j	L245_LF2
 3634  00003dc0  54000000	nop; not filled.
 3635  00003dc4          	L233_LF2:
 3636  00003dc4  805f0000	lb	r31,(r2)
 3637  00003dc8  23e1ffd0	addi	r1,r31,#-48
 3638  00003dcc  302100ff	andi	r1,r1,#0x00ff
 3639  00003dd0  70210009	sleui	r1,r1,#9
 3640  00003dd4  10200014	beqz	r1,L236_LF2
 3641  00003dd8  54000000	nop; not filled.
 3642  00003ddc  33e100ff	andi	r1,r31,#0x00ff
 3643  00003de0  2021ffd0	addi	r1,r1,#-48
 3644  00003de4  08000050	j	L237_LF2
 3645  00003de8  54000000	nop; not filled.
 3646  00003dec          	L236_LF2:
 3647  00003dec  23e1ff9f	addi	r1,r31,#-97
 3648  00003df0  302100ff	andi	r1,r1,#0x00ff
 3649  00003df4  70210019	sleui	r1,r1,#25
 3650  00003df8  10200014	beqz	r1,L238_LF2
 3651  00003dfc  54000000	nop; not filled.
 3652  00003e00  33e100ff	andi	r1,r31,#0x00ff
 3653  00003e04  2021ffa9	addi	r1,r1,#-87
 3654  00003e08  0800002c	j	L237_LF2
 3655  00003e0c  54000000	nop; not filled.
 3656  00003e10          	L238_LF2:
 3657  00003e10  23e1ffbf	addi	r1,r31,#-65
 3658  00003e14  302100ff	andi	r1,r1,#0x00ff
 3659  00003e18  70210019	sleui	r1,r1,#25
 3660  00003e1c  10200014	beqz	r1,L240_LF2
 3661  00003e20  54000000	nop; not filled.
 3662  00003e24  33e100ff	andi	r1,r31,#0x00ff
 3663  00003e28  2021ffc9	addi	r1,r1,#-55
 3664  00003e2c  08000008	j	L237_LF2
 3665  00003e30  54000000	nop; not filled.
 3666  00003e34          	L240_LF2:
 3667  00003e34  200103e8	addi	r1,r0,#1000
 3668  00003e38          	L237_LF2:
 3669  00003e38  0024f82a	slt	r31,r1,r4
 3670  00003e3c  13e00024	beqz	r31,L246_LF2
 3671  00003e40  54000000	nop; not filled.
 3672  00003e44  00600035	movi2fp	f0,r3
 3673  00003e48  00800835	movi2fp	f1,r4
 3674  00003e4c  0401000e	mult	f0,f0,f1
 3675  00003e50  00001834	movfp2i	r3,f0
 3676  00003e54  00611820	add	r3,r3,r1
 3677  00003e58  20420001	addi	r2,r2,#1
 3678  00003e5c  17e0ff64	bnez	r31,L233_LF2
 3679  00003e60  54000000	nop; not filled.
 3680  00003e64          	L246_LF2:
 3681  00003e64  64a10000	snei	r1,r5,#0
 3682  00003e68  10200008	beqz	r1,L244_LF2
 3683  00003e6c  54000000	nop; not filled.
 3684  00003e70  aca20000	sw	(r5),r2
 3685  00003e74          	L244_LF2:
 3686  00003e74  00600035	movi2fp	f0,r3
 3687  00003e78  00c00835	movi2fp	f1,r6
 3688  00003e7c  0401000e	mult	f0,f0,f1
 3689  00003e80  00000834	movfp2i	r1,f0
 3690  00003e84          	L245_LF2:
 3691  00003e84  8fa20000	lw	r2,0(r29)
 3692  00003e88  8fa30004	lw	r3,4(r29)
 3693  00003e8c  8fa40008	lw	r4,8(r29)
 3694  00003e90  8fa5000c	lw	r5,12(r29)
 3695  00003e94  8fa60010	lw	r6,16(r29)
 3696  00003e98  8fdffff8	lw	r31,-8(r30)
 3697  00003e9c  001ee820	add	r29,r0,r30
 3698  00003ea0  8fdefffc	lw	r30,-4(r30)
 3699  00003ea4  4be00000	jr	r31
 3700  00003ea8  54000000	nop
 3701  00003eac          	.endproc _dstrtol
 3702  00003eac          	.align 2
 3703  00003eac          	.proc _bcopy
 3704  00003eac          	.global _bcopy
 3705  00003eac          	_bcopy:
 3706                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 3707  00003eac  afbefffc	sw	-4(r29),r30; push fp
 3708  00003eb0  001df020	add	r30,r0,r29; fp = sp
 3709  00003eb4  afbffff8	sw	-8(r29),r31; push ret addr
 3710  00003eb8  2fbd0018	subui	r29,r29,#24; alloc local storage
 3711  00003ebc  afa20000	sw	0(r29),r2
 3712  00003ec0  afa30004	sw	4(r29),r3
 3713  00003ec4  afa40008	sw	8(r29),r4
 3714  00003ec8  8fc30000	lw	r3,(r30)
 3715  00003ecc  8fc20004	lw	r2,4(r30)
 3716  00003ed0  8fdf0008	lw	r31,8(r30)
 3717  00003ed4  08000014	j	L259_LF2
 3718  00003ed8  54000000	nop; not filled.
 3719  00003edc          	L257_LF2:
 3720  00003edc  80640000	lb	r4,(r3)
 3721  00003ee0  a0440000	sb	(r2),r4
 3722  00003ee4  20630001	addi	r3,r3,#1
 3723  00003ee8  20420001	addi	r2,r2,#1
 3724  00003eec          	L259_LF2:
 3725  00003eec  001f0820	add	r1,r0,r31
 3726  00003ef0  23ffffff	addi	r31,r31,#-1
 3727  00003ef4  6c210000	sgti	r1,r1,#0
 3728  00003ef8  1420ffe0	bnez	r1,L257_LF2
 3729  00003efc  54000000	nop; not filled.
 3730  00003f00  8fa20000	lw	r2,0(r29)
 3731  00003f04  8fa30004	lw	r3,4(r29)
 3732  00003f08  8fa40008	lw	r4,8(r29)
 3733  00003f0c  8fdffff8	lw	r31,-8(r30)
 3734  00003f10  001ee820	add	r29,r0,r30
 3735  00003f14  8fdefffc	lw	r30,-4(r30)
 3736  00003f18  4be00000	jr	r31
 3737  00003f1c  54000000	nop
 3738  00003f20          	.endproc _bcopy
 3739  00003f20          	.align 2
 3740  00003f20          	.proc _bzero
 3741  00003f20          	.global _bzero
 3742  00003f20          	_bzero:
 3743                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 3744  00003f20  afbefffc	sw	-4(r29),r30; push fp
 3745  00003f24  001df020	add	r30,r0,r29; fp = sp
 3746  00003f28  afbffff8	sw	-8(r29),r31; push ret addr
 3747  00003f2c  2fbd0010	subui	r29,r29,#16; alloc local storage
 3748  00003f30  afa20000	sw	0(r29),r2
 3749  00003f34  afa30004	sw	4(r29),r3
 3750  00003f38  8fc20000	lw	r2,(r30)
 3751  00003f3c  8fdf0004	lw	r31,4(r30)
 3752  00003f40  08000010	j	L270_LF2
 3753  00003f44  54000000	nop; not filled.
 3754  00003f48          	L268_LF2:
 3755  00003f48  20030000	addi	r3,r0,(#0x0)&0xff
 3756  00003f4c  a0430000	sb	(r2),r3
 3757  00003f50  20420001	addi	r2,r2,#1
 3758  00003f54          	L270_LF2:
 3759  00003f54  001f0820	add	r1,r0,r31
 3760  00003f58  23ffffff	addi	r31,r31,#-1
 3761  00003f5c  6c210000	sgti	r1,r1,#0
 3762  00003f60  1420ffe4	bnez	r1,L268_LF2
 3763  00003f64  54000000	nop; not filled.
 3764  00003f68  8fa20000	lw	r2,0(r29)
 3765  00003f6c  8fa30004	lw	r3,4(r29)
 3766  00003f70  8fdffff8	lw	r31,-8(r30)
 3767  00003f74  001ee820	add	r29,r0,r30
 3768  00003f78  8fdefffc	lw	r30,-4(r30)
 3769  00003f7c  4be00000	jr	r31
 3770  00003f80  54000000	nop
 3771  00003f84          	.endproc _bzero
 3772                      ; Compiled by GCC
 3774  00003f84          	.align 2
 3775  00003f84          	.proc _isspace
 3776  00003f84          	.global _isspace
 3777  00003f84          	_isspace:
 3778                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 3779  00003f84  afbefffc	sw	-4(r29),r30; push fp
 3780  00003f88  001df020	add	r30,r0,r29; fp = sp
 3781  00003f8c  afbffff8	sw	-8(r29),r31; push ret addr
 3782  00003f90  2fbd0010	subui	r29,r29,#16; alloc local storage
 3783  00003f94  afa20000	sw	0(r29),r2
 3784  00003f98  83c20003	lb	r2,3(r30)
 3785  00003f9c  201f0000	addi	r31,r0,#0
 3786  00003fa0  304100ff	andi	r1,r2,#0x00ff
 3787  00003fa4  60210020	seqi	r1,r1,#32
 3788  00003fa8  14200018	bnez	r1,L6_LF3
 3789  00003fac  54000000	nop; not filled.
 3790  00003fb0  2041fff7	addi	r1,r2,#-9
 3791  00003fb4  302100ff	andi	r1,r1,#0x00ff
 3792  00003fb8  70210001	sleui	r1,r1,#1
 3793  00003fbc  10200008	beqz	r1,L5_LF3
 3794  00003fc0  54000000	nop; not filled.
 3795  00003fc4          	L6_LF3:
 3796  00003fc4  201f0001	addi	r31,r0,#1
 3797  00003fc8          	L5_LF3:
 3798  00003fc8  001f0820	add	r1,r0,r31
 3799  00003fcc  8fa20000	lw	r2,0(r29)
 3800  00003fd0  8fdffff8	lw	r31,-8(r30)
 3801  00003fd4  001ee820	add	r29,r0,r30
 3802  00003fd8  8fdefffc	lw	r30,-4(r30)
 3803  00003fdc  4be00000	jr	r31
 3804  00003fe0  54000000	nop
 3805  00003fe4          	.endproc _isspace
 3806  00003fe4          	.align 2
 3807  00003fe4          	.proc _isxdigit
 3808  00003fe4          	.global _isxdigit
 3809  00003fe4          	_isxdigit:
 3810                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 3811  00003fe4  afbefffc	sw	-4(r29),r30; push fp
 3812  00003fe8  001df020	add	r30,r0,r29; fp = sp
 3813  00003fec  afbffff8	sw	-8(r29),r31; push ret addr
 3814  00003ff0  2fbd0010	subui	r29,r29,#16; alloc local storage
 3815  00003ff4  afa20000	sw	0(r29),r2
 3816  00003ff8  83df0003	lb	r31,3(r30)
 3817  00003ffc  20020000	addi	r2,r0,#0
 3818  00004000  23e1ffd0	addi	r1,r31,#-48
 3819  00004004  302100ff	andi	r1,r1,#0x00ff
 3820  00004008  70210009	sleui	r1,r1,#9
 3821  0000400c  14200028	bnez	r1,L12_LF3
 3822  00004010  54000000	nop; not filled.
 3823  00004014  23e1ff9f	addi	r1,r31,#-97
 3824  00004018  302100ff	andi	r1,r1,#0x00ff
 3825  0000401c  70210005	sleui	r1,r1,#5
 3826  00004020  14200014	bnez	r1,L12_LF3
 3827  00004024  54000000	nop; not filled.
 3828  00004028  33e100ff	andi	r1,r31,#0x00ff
 3829  0000402c  64210041	snei	r1,r1,#65
 3830  00004030  14200008	bnez	r1,L11_LF3
 3831  00004034  54000000	nop; not filled.
 3832  00004038          	L12_LF3:
 3833  00004038  20020001	addi	r2,r0,#1
 3834  0000403c          	L11_LF3:
 3835  0000403c  00020820	add	r1,r0,r2
 3836  00004040  8fa20000	lw	r2,0(r29)
 3837  00004044  8fdffff8	lw	r31,-8(r30)
 3838  00004048  001ee820	add	r29,r0,r30
 3839  0000404c  8fdefffc	lw	r30,-4(r30)
 3840  00004050  4be00000	jr	r31
 3841  00004054  54000000	nop
 3842  00004058          	.endproc _isxdigit
 3843  00004058          	.align 2
 3844  00004058          	.proc _DisableIntrs
 3845  00004058          	.global _DisableIntrs
 3846  00004058          	_DisableIntrs:
 3847                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 3848  00004058  afbefffc	sw	-4(r29),r30; push fp
 3849  0000405c  001df020	add	r30,r0,r29; fp = sp
 3850  00004060  afbffff8	sw	-8(r29),r31; push ret addr
 3851  00004064  2fbd0010	subui	r29,r29,#16; alloc local storage
 3852  00004068  afa20000	sw	0(r29),r2
 3853  0000406c  23bdfff8	addi	r29,r29,#-8
 3854  00004070  2002000f	addi	r2,r0,#15
 3855  00004074  afa20000	sw	(r29),r2
 3856  00004078  0c006028	jal	_SetIntrs
 3857  0000407c  54000000	nop; not filled.
 3858  00004080  23bd0008	addi	r29,r29,#8
 3859  00004084  8fa20000	lw	r2,0(r29)
 3860  00004088  8fdffff8	lw	r31,-8(r30)
 3861  0000408c  001ee820	add	r29,r0,r30
 3862  00004090  8fdefffc	lw	r30,-4(r30)
 3863  00004094  4be00000	jr	r31
 3864  00004098  54000000	nop
 3865  0000409c          	.endproc _DisableIntrs
 3866  0000409c          	.align 2
 3867  0000409c          	.proc _EnableIntrs
 3868  0000409c          	.global _EnableIntrs
 3869  0000409c          	_EnableIntrs:
 3870                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 3871  0000409c  afbefffc	sw	-4(r29),r30; push fp
 3872  000040a0  001df020	add	r30,r0,r29; fp = sp
 3873  000040a4  afbffff8	sw	-8(r29),r31; push ret addr
 3874  000040a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 3875  000040ac  afa20000	sw	0(r29),r2
 3876  000040b0  23bdfff8	addi	r29,r29,#-8
 3877  000040b4  20020000	addi	r2,r0,#0
 3878  000040b8  afa20000	sw	(r29),r2
 3879  000040bc  0c005fe4	jal	_SetIntrs
 3880  000040c0  54000000	nop; not filled.
 3881  000040c4  23bd0008	addi	r29,r29,#8
 3882  000040c8  8fa20000	lw	r2,0(r29)
 3883  000040cc  8fdffff8	lw	r31,-8(r30)
 3884  000040d0  001ee820	add	r29,r0,r30
 3885  000040d4  8fdefffc	lw	r30,-4(r30)
 3886  000040d8  4be00000	jr	r31
 3887  000040dc  54000000	nop
 3888  000040e0          	.endproc _EnableIntrs
 3889  000040e0          	.align 2
 3890  000040e0          	.proc _RestoreIntrs
 3891  000040e0          	.global _RestoreIntrs
 3892  000040e0          	_RestoreIntrs:
 3893                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 3894  000040e0  afbefffc	sw	-4(r29),r30; push fp
 3895  000040e4  001df020	add	r30,r0,r29; fp = sp
 3896  000040e8  afbffff8	sw	-8(r29),r31; push ret addr
 3897  000040ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 3898  000040f0  afa20000	sw	0(r29),r2
 3899  000040f4  23bdfff8	addi	r29,r29,#-8
 3900  000040f8  8fc20000	lw	r2,(r30)
 3901  000040fc  afa20000	sw	(r29),r2
 3902  00004100  0c005fa0	jal	_SetIntrs
 3903  00004104  54000000	nop; not filled.
 3904  00004108  23bd0008	addi	r29,r29,#8
 3905  0000410c  8fa20000	lw	r2,0(r29)
 3906  00004110  8fdffff8	lw	r31,-8(r30)
 3907  00004114  001ee820	add	r29,r0,r30
 3908  00004118  8fdefffc	lw	r30,-4(r30)
 3909  0000411c  4be00000	jr	r31
 3910  00004120  54000000	nop
 3911  00004124          	.endproc _RestoreIntrs
 3912  00004124          	.align 2
 3913  00004124          	.proc _QueueLinkInit
 3914  00004124          	.global _QueueLinkInit
 3915  00004124          	_QueueLinkInit:
 3916                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 3917  00004124  afbefffc	sw	-4(r29),r30; push fp
 3918  00004128  001df020	add	r30,r0,r29; fp = sp
 3919  0000412c  afbffff8	sw	-8(r29),r31; push ret addr
 3920  00004130  2fbd0010	subui	r29,r29,#16; alloc local storage
 3921  00004134  afa20000	sw	0(r29),r2
 3922  00004138  8fc10000	lw	r1,(r30)
 3923  0000413c  8fc20004	lw	r2,4(r30)
 3924  00004140  201f0000	addi	r31,r0,#0
 3925  00004144  ac3f0000	sw	(r1),r31
 3926  00004148  ac22000c	sw	12(r1),r2
 3927  0000414c  8fa20000	lw	r2,0(r29)
 3928  00004150  8fdffff8	lw	r31,-8(r30)
 3929  00004154  001ee820	add	r29,r0,r30
 3930  00004158  8fdefffc	lw	r30,-4(r30)
 3931  0000415c  4be00000	jr	r31
 3932  00004160  54000000	nop
 3933  00004164          	.endproc _QueueLinkInit
 3934  00004164          	.align 2
 3935  00004164          	.proc _QueueNext
 3936  00004164          	.global _QueueNext
 3937  00004164          	_QueueNext:
 3938                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 3939  00004164  afbefffc	sw	-4(r29),r30; push fp
 3940  00004168  001df020	add	r30,r0,r29; fp = sp
 3941  0000416c  afbffff8	sw	-8(r29),r31; push ret addr
 3942  00004170  2fbd0008	subui	r29,r29,#8; alloc local storage
 3943  00004174  8fc10000	lw	r1,(r30)
 3944  00004178  8c210000	lw	r1,(r1)
 3945  0000417c  8fdffff8	lw	r31,-8(r30)
 3946  00004180  001ee820	add	r29,r0,r30
 3947  00004184  8fdefffc	lw	r30,-4(r30)
 3948  00004188  4be00000	jr	r31
 3949  0000418c  54000000	nop
 3950  00004190          	.endproc _QueueNext
 3951  00004190          	.align 2
 3952  00004190          	.proc _QueuePrev
 3953  00004190          	.global _QueuePrev
 3954  00004190          	_QueuePrev:
 3955                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 3956  00004190  afbefffc	sw	-4(r29),r30; push fp
 3957  00004194  001df020	add	r30,r0,r29; fp = sp
 3958  00004198  afbffff8	sw	-8(r29),r31; push ret addr
 3959  0000419c  2fbd0008	subui	r29,r29,#8; alloc local storage
 3960  000041a0  8fc10000	lw	r1,(r30)
 3961  000041a4  8c210004	lw	r1,4(r1)
 3962  000041a8  8fdffff8	lw	r31,-8(r30)
 3963  000041ac  001ee820	add	r29,r0,r30
 3964  000041b0  8fdefffc	lw	r30,-4(r30)
 3965  000041b4  4be00000	jr	r31
 3966  000041b8  54000000	nop
 3967  000041bc          	.endproc _QueuePrev
 3968  000041bc          	.align 2
 3969  000041bc          	.proc _QueueFirst
 3970  000041bc          	.global _QueueFirst
 3971  000041bc          	_QueueFirst:
 3972                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 3973  000041bc  afbefffc	sw	-4(r29),r30; push fp
 3974  000041c0  001df020	add	r30,r0,r29; fp = sp
 3975  000041c4  afbffff8	sw	-8(r29),r31; push ret addr
 3976  000041c8  2fbd0008	subui	r29,r29,#8; alloc local storage
 3977  000041cc  8fc10000	lw	r1,(r30)
 3978  000041d0  8c210000	lw	r1,(r1)
 3979  000041d4  8fdffff8	lw	r31,-8(r30)
 3980  000041d8  001ee820	add	r29,r0,r30
 3981  000041dc  8fdefffc	lw	r30,-4(r30)
 3982  000041e0  4be00000	jr	r31
 3983  000041e4  54000000	nop
 3984  000041e8          	.endproc _QueueFirst
 3985  000041e8          	.align 2
 3986  000041e8          	.proc _QueueLast
 3987  000041e8          	.global _QueueLast
 3988  000041e8          	_QueueLast:
 3989                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 3990  000041e8  afbefffc	sw	-4(r29),r30; push fp
 3991  000041ec  001df020	add	r30,r0,r29; fp = sp
 3992  000041f0  afbffff8	sw	-8(r29),r31; push ret addr
 3993  000041f4  2fbd0008	subui	r29,r29,#8; alloc local storage
 3994  000041f8  8fc10000	lw	r1,(r30)
 3995  000041fc  8c210004	lw	r1,4(r1)
 3996  00004200  8fdffff8	lw	r31,-8(r30)
 3997  00004204  001ee820	add	r29,r0,r30
 3998  00004208  8fdefffc	lw	r30,-4(r30)
 3999  0000420c  4be00000	jr	r31
 4000  00004210  54000000	nop
 4001  00004214          	.endproc _QueueLast
 4002  00004214          	.align 2
 4003  00004214          	.proc _QueueInsertAfter
 4004  00004214          	.global _QueueInsertAfter
 4005  00004214          	_QueueInsertAfter:
 4006                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 4007  00004214  afbefffc	sw	-4(r29),r30; push fp
 4008  00004218  001df020	add	r30,r0,r29; fp = sp
 4009  0000421c  afbffff8	sw	-8(r29),r31; push ret addr
 4010  00004220  2fbd0010	subui	r29,r29,#16; alloc local storage
 4011  00004224  afa20000	sw	0(r29),r2
 4012  00004228  afa30004	sw	4(r29),r3
 4013  0000422c  8fc30000	lw	r3,(r30)
 4014  00004230  8fc20004	lw	r2,4(r30)
 4015  00004234  8fc10008	lw	r1,8(r30)
 4016  00004238  ac230008	sw	8(r1),r3
 4017  0000423c  ac220004	sw	4(r1),r2
 4018  00004240  8c5f0000	lw	r31,(r2)
 4019  00004244  ac3f0000	sw	(r1),r31
 4020  00004248  ac410000	sw	(r2),r1
 4021  0000424c  8c220000	lw	r2,(r1)
 4022  00004250  ac410004	sw	4(r2),r1
 4023  00004254  8c610008	lw	r1,8(r3)
 4024  00004258  20210001	addi	r1,r1,#1
 4025  0000425c  ac610008	sw	8(r3),r1
 4026  00004260  8fa20000	lw	r2,0(r29)
 4027  00004264  8fa30004	lw	r3,4(r29)
 4028  00004268  8fdffff8	lw	r31,-8(r30)
 4029  0000426c  001ee820	add	r29,r0,r30
 4030  00004270  8fdefffc	lw	r30,-4(r30)
 4031  00004274  4be00000	jr	r31
 4032  00004278  54000000	nop
 4033  0000427c          	.endproc _QueueInsertAfter
 4034  0000427c          	.align 2
 4035  0000427c          	.proc _QueueInsertFirst
 4036  0000427c          	.global _QueueInsertFirst
 4037  0000427c          	_QueueInsertFirst:
 4038                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 4039  0000427c  afbefffc	sw	-4(r29),r30; push fp
 4040  00004280  001df020	add	r30,r0,r29; fp = sp
 4041  00004284  afbffff8	sw	-8(r29),r31; push ret addr
 4042  00004288  2fbd0010	subui	r29,r29,#16; alloc local storage
 4043  0000428c  afa20000	sw	0(r29),r2
 4044  00004290  afa30004	sw	4(r29),r3
 4045  00004294  8fc30000	lw	r3,(r30)
 4046  00004298  8fc10004	lw	r1,4(r30)
 4047  0000429c  ac230008	sw	8(r1),r3
 4048  000042a0  ac230004	sw	4(r1),r3
 4049  000042a4  8c7f0000	lw	r31,(r3)
 4050  000042a8  ac3f0000	sw	(r1),r31
 4051  000042ac  ac610000	sw	(r3),r1
 4052  000042b0  8c220000	lw	r2,(r1)
 4053  000042b4  ac410004	sw	4(r2),r1
 4054  000042b8  8c610008	lw	r1,8(r3)
 4055  000042bc  20210001	addi	r1,r1,#1
 4056  000042c0  ac610008	sw	8(r3),r1
 4057  000042c4  8fa20000	lw	r2,0(r29)
 4058  000042c8  8fa30004	lw	r3,4(r29)
 4059  000042cc  8fdffff8	lw	r31,-8(r30)
 4060  000042d0  001ee820	add	r29,r0,r30
 4061  000042d4  8fdefffc	lw	r30,-4(r30)
 4062  000042d8  4be00000	jr	r31
 4063  000042dc  54000000	nop
 4064  000042e0          	.endproc _QueueInsertFirst
 4065  000042e0          	.align 2
 4066  000042e0          	.proc _QueueInsertLast
 4067  000042e0          	.global _QueueInsertLast
 4068  000042e0          	_QueueInsertLast:
 4069                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 4070  000042e0  afbefffc	sw	-4(r29),r30; push fp
 4071  000042e4  001df020	add	r30,r0,r29; fp = sp
 4072  000042e8  afbffff8	sw	-8(r29),r31; push ret addr
 4073  000042ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 4074  000042f0  afa20000	sw	0(r29),r2
 4075  000042f4  afa30004	sw	4(r29),r3
 4076  000042f8  8fc30000	lw	r3,(r30)
 4077  000042fc  8fc10004	lw	r1,4(r30)
 4078  00004300  8c620004	lw	r2,4(r3)
 4079  00004304  ac230008	sw	8(r1),r3
 4080  00004308  ac220004	sw	4(r1),r2
 4081  0000430c  8c5f0000	lw	r31,(r2)
 4082  00004310  ac3f0000	sw	(r1),r31
 4083  00004314  ac410000	sw	(r2),r1
 4084  00004318  8c220000	lw	r2,(r1)
 4085  0000431c  ac410004	sw	4(r2),r1
 4086  00004320  8c610008	lw	r1,8(r3)
 4087  00004324  20210001	addi	r1,r1,#1
 4088  00004328  ac610008	sw	8(r3),r1
 4089  0000432c  8fa20000	lw	r2,0(r29)
 4090  00004330  8fa30004	lw	r3,4(r29)
 4091  00004334  8fdffff8	lw	r31,-8(r30)
 4092  00004338  001ee820	add	r29,r0,r30
 4093  0000433c  8fdefffc	lw	r30,-4(r30)
 4094  00004340  4be00000	jr	r31
 4095  00004344  54000000	nop
 4096  00004348          	.endproc _QueueInsertLast
 4097  00004348          	.align 2
 4098  00004348          	.proc _QueueRemove
 4099  00004348          	.global _QueueRemove
 4100  00004348          	_QueueRemove:
 4101                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 4102  00004348  afbefffc	sw	-4(r29),r30; push fp
 4103  0000434c  001df020	add	r30,r0,r29; fp = sp
 4104  00004350  afbffff8	sw	-8(r29),r31; push ret addr
 4105  00004354  2fbd0010	subui	r29,r29,#16; alloc local storage
 4106  00004358  afa20000	sw	0(r29),r2
 4107  0000435c  afa30004	sw	4(r29),r3
 4108  00004360  8fdf0000	lw	r31,(r30)
 4109  00004364  8fe10008	lw	r1,8(r31)
 4110  00004368  8c210008	lw	r1,8(r1)
 4111  0000436c  6c210000	sgti	r1,r1,#0
 4112  00004370  1020002c	beqz	r1,L44_LF3
 4113  00004374  54000000	nop; not filled.
 4114  00004378  8fe10004	lw	r1,4(r31)
 4115  0000437c  8fe30000	lw	r3,(r31)
 4116  00004380  ac230000	sw	(r1),r3
 4117  00004384  8fe10000	lw	r1,(r31)
 4118  00004388  8fe30004	lw	r3,4(r31)
 4119  0000438c  ac230004	sw	4(r1),r3
 4120  00004390  8fe20008	lw	r2,8(r31)
 4121  00004394  8c410008	lw	r1,8(r2)
 4122  00004398  2021ffff	addi	r1,r1,#-1
 4123  0000439c  ac410008	sw	8(r2),r1
 4124  000043a0          	L44_LF3:
 4125  000043a0  20030000	addi	r3,r0,#0
 4126  000043a4  afe30000	sw	(r31),r3
 4127  000043a8  8fa20000	lw	r2,0(r29)
 4128  000043ac  8fa30004	lw	r3,4(r29)
 4129  000043b0  8fdffff8	lw	r31,-8(r30)
 4130  000043b4  001ee820	add	r29,r0,r30
 4131  000043b8  8fdefffc	lw	r30,-4(r30)
 4132  000043bc  4be00000	jr	r31
 4133  000043c0  54000000	nop
 4134  000043c4          	.endproc _QueueRemove
 4135  000043c4          	.align 2
 4136  000043c4          	.proc _QueueLength
 4137  000043c4          	.global _QueueLength
 4138  000043c4          	_QueueLength:
 4139                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 4140  000043c4  afbefffc	sw	-4(r29),r30; push fp
 4141  000043c8  001df020	add	r30,r0,r29; fp = sp
 4142  000043cc  afbffff8	sw	-8(r29),r31; push ret addr
 4143  000043d0  2fbd0008	subui	r29,r29,#8; alloc local storage
 4144  000043d4  8fc10000	lw	r1,(r30)
 4145  000043d8  8c210008	lw	r1,8(r1)
 4146  000043dc  8fdffff8	lw	r31,-8(r30)
 4147  000043e0  001ee820	add	r29,r0,r30
 4148  000043e4  8fdefffc	lw	r30,-4(r30)
 4149  000043e8  4be00000	jr	r31
 4150  000043ec  54000000	nop
 4151  000043f0          	.endproc _QueueLength
 4152  000043f0          	.align 2
 4153  000043f0          	.proc _QueueEmpty
 4154  000043f0          	.global _QueueEmpty
 4155  000043f0          	_QueueEmpty:
 4156                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 4157  000043f0  afbefffc	sw	-4(r29),r30; push fp
 4158  000043f4  001df020	add	r30,r0,r29; fp = sp
 4159  000043f8  afbffff8	sw	-8(r29),r31; push ret addr
 4160  000043fc  2fbd0008	subui	r29,r29,#8; alloc local storage
 4161  00004400  8fc10000	lw	r1,(r30)
 4162  00004404  8c210008	lw	r1,8(r1)
 4163  00004408  60210000	seqi	r1,r1,#0
 4164  0000440c  8fdffff8	lw	r31,-8(r30)
 4165  00004410  001ee820	add	r29,r0,r30
 4166  00004414  8fdefffc	lw	r30,-4(r30)
 4167  00004418  4be00000	jr	r31
 4168  0000441c  54000000	nop
 4169  00004420          	.endproc _QueueEmpty
 4170  00004420          	.data
 4171  0000f3b4          	.align 2
 4172  0000f3b4          	_processQuantum_LF3:
 4173  0000f3b4  00002710	.word 10000
 4174  0000f3b8          	.align 2
 4175  0000f3b8          	LC0_LF3:
 4176  0000f3b8  456e7465	.ascii "Entering ProcessModuleInit\n\000"
 4176  0000f3bc  72696e67	
 4176  0000f3c0  2050726f	
 4176  0000f3c4  63657373	
 4176  0000f3c8  4d6f6475	
 4176  0000f3cc  6c65496e	
 4176  0000f3d0  69740a00	
 4177  0000f3d4          	.align 2
 4178  0000f3d4          	LC1_LF3:
 4179  0000f3d4  496e6974	.ascii "Initializing PCB %d @ 0x%x.\n\000"
 4179  0000f3d8  69616c69	
 4179  0000f3dc  7a696e67	
 4179  0000f3e0  20504342	
 4179  0000f3e4  20256420	
 4179  0000f3e8  40203078	
 4179  0000f3ec  25782e0a	
 4179  0000f3f0  00      	
 4180  0000f3f1          	.align 2
 4181  0000f3f4          	LC2_LF3:
 4182  0000f3f4  4c656176	.ascii "Leaving ProcessModuleInit\n\000"
 4182  0000f3f8  696e6720	
 4182  0000f3fc  50726f63	
 4182  0000f400  6573734d	
 4182  0000f404  6f64756c	
 4182  0000f408  65496e69	
 4182  0000f40c  740a00  	
 4183  0000f40f          	.text
 4184  00004420          	.align 2
 4185  00004420          	.proc _ProcessModuleInit
 4186  00004420          	.global _ProcessModuleInit
 4187  00004420          	_ProcessModuleInit:
 4188                      ;  Function 'ProcessModuleInit'; 0 bytes of locals, 7 regs to save.
 4189  00004420  afbefffc	sw	-4(r29),r30; push fp
 4190  00004424  001df020	add	r30,r0,r29; fp = sp
 4191  00004428  afbffff8	sw	-8(r29),r31; push ret addr
 4192  0000442c  2fbd0028	subui	r29,r29,#40; alloc local storage
 4193  00004430  afa20000	sw	0(r29),r2
 4194  00004434  afa30004	sw	4(r29),r3
 4195  00004438  afa40008	sw	8(r29),r4
 4196  0000443c  afa5000c	sw	12(r29),r5
 4197  00004440  afa60010	sw	16(r29),r6
 4198  00004444  afa70014	sw	20(r29),r7
 4199  00004448  afa80018	sw	24(r29),r8
 4200  0000444c  23bdfff8	addi	r29,r29,#-8
 4201  00004450  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4202  00004454  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4203  00004458  afa20000	sw	(r29),r2
 4204  0000445c  20080070	addi	r8,r0,#112
 4205  00004460  afa80004	sw	4(r29),r8
 4206  00004464  0ffff6b4	jal	_dindex
 4207  00004468  54000000	nop; not filled.
 4208  0000446c  23bd0008	addi	r29,r29,#8
 4209  00004470  64210000	snei	r1,r1,#0
 4210  00004474  1420002c	bnez	r1,L53_LF3
 4211  00004478  54000000	nop; not filled.
 4212  0000447c  23bdfff8	addi	r29,r29,#-8
 4213  00004480  afa20000	sw	(r29),r2
 4214  00004484  2008002b	addi	r8,r0,#43
 4215  00004488  afa80004	sw	4(r29),r8
 4216  0000448c  0ffff68c	jal	_dindex
 4217  00004490  54000000	nop; not filled.
 4218  00004494  23bd0008	addi	r29,r29,#8
 4219  00004498  64210000	snei	r1,r1,#0
 4220  0000449c  10200020	beqz	r1,L52_LF3
 4221  000044a0  54000000	nop; not filled.
 4222  000044a4          	L53_LF3:
 4223  000044a4  23bdfff8	addi	r29,r29,#-8
 4224  000044a8  3c080000	lhi	r8,((LC0_LF3)>>16)&0xffff
 4225  000044ac  2508f3b8	addui	r8,r8,(LC0_LF3)&0xffff
 4226  000044b0  afa80000	sw	(r29),r8
 4227  000044b4  0c005d40	jal	_printf
 4228  000044b8  54000000	nop; not filled.
 4229  000044bc  23bd0008	addi	r29,r29,#8
 4230  000044c0          	L52_LF3:
 4231  000044c0  23bdfff8	addi	r29,r29,#-8
 4232  000044c4  3c020000	lhi	r2,((_freepcbs_LF3)>>16)&0xffff
 4233  000044c8  2442fcf4	addui	r2,r2,(_freepcbs_LF3)&0xffff
 4234  000044cc  afa20000	sw	(r29),r2
 4235  000044d0  0c003284	jal	_QueueInit
 4236  000044d4  54000000	nop; not filled.
 4237  000044d8  3c080000	lhi	r8,((_runQueue_LF3)>>16)&0xffff
 4238  000044dc  2508fd00	addui	r8,r8,(_runQueue_LF3)&0xffff
 4239  000044e0  afa80000	sw	(r29),r8
 4240  000044e4  0c003270	jal	_QueueInit
 4241  000044e8  54000000	nop; not filled.
 4242  000044ec  3c080000	lhi	r8,((_waitQueue_LF3)>>16)&0xffff
 4243  000044f0  2508fd0c	addui	r8,r8,(_waitQueue_LF3)&0xffff
 4244  000044f4  afa80000	sw	(r29),r8
 4245  000044f8  0c00325c	jal	_QueueInit
 4246  000044fc  54000000	nop; not filled.
 4247  00004500  3c080000	lhi	r8,((_zombieQueue_LF3)>>16)&0xffff
 4248  00004504  2508fd18	addui	r8,r8,(_zombieQueue_LF3)&0xffff
 4249  00004508  afa80000	sw	(r29),r8
 4250  0000450c  0c003248	jal	_QueueInit
 4251  00004510  54000000	nop; not filled.
 4252  00004514  20040000	addi	r4,r0,#0
 4253  00004518  23bd0008	addi	r29,r29,#8
 4254  0000451c  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 4255  00004520  24e7fc26	addui	r7,r7,(_debugstr)&0xffff
 4256  00004524  3c010000	lhi	r1,((_pcbs_LF3)>>16)&0xffff
 4257  00004528  2421fd24	addui	r1,r1,(_pcbs_LF3)&0xffff
 4258  0000452c  00022820	add	r5,r0,r2
 4259  00004530  202200a4	addi	r2,r1,#164
 4260  00004534  00011820	add	r3,r0,r1
 4261  00004538  00033020	add	r6,r0,r3
 4262  0000453c          	L57_LF3:
 4263  0000453c  23bdfff8	addi	r29,r29,#-8
 4264  00004540  afa70000	sw	(r29),r7
 4265  00004544  20080070	addi	r8,r0,#112
 4266  00004548  afa80004	sw	4(r29),r8
 4267  0000454c  0ffff5cc	jal	_dindex
 4268  00004550  54000000	nop; not filled.
 4269  00004554  23bd0008	addi	r29,r29,#8
 4270  00004558  64210000	snei	r1,r1,#0
 4271  0000455c  1420002c	bnez	r1,L59_LF3
 4272  00004560  54000000	nop; not filled.
 4273  00004564  23bdfff8	addi	r29,r29,#-8
 4274  00004568  afa70000	sw	(r29),r7
 4275  0000456c  2008002b	addi	r8,r0,#43
 4276  00004570  afa80004	sw	4(r29),r8
 4277  00004574  0ffff5a4	jal	_dindex
 4278  00004578  54000000	nop; not filled.
 4279  0000457c  23bd0008	addi	r29,r29,#8
 4280  00004580  64210000	snei	r1,r1,#0
 4281  00004584  10200028	beqz	r1,L58_LF3
 4282  00004588  54000000	nop; not filled.
 4283  0000458c          	L59_LF3:
 4284  0000458c  23bdfff0	addi	r29,r29,#-16
 4285  00004590  3c080000	lhi	r8,((LC1_LF3)>>16)&0xffff
 4286  00004594  2508f3d4	addui	r8,r8,(LC1_LF3)&0xffff
 4287  00004598  afa80000	sw	(r29),r8
 4288  0000459c  afa40004	sw	4(r29),r4
 4289  000045a0  afa60008	sw	8(r29),r6
 4290  000045a4  0c005c50	jal	_printf
 4291  000045a8  54000000	nop; not filled.
 4292  000045ac  23bd0010	addi	r29,r29,#16
 4293  000045b0          	L58_LF3:
 4294  000045b0  20080001	addi	r8,r0,#1
 4295  000045b4  ac68000c	sw	12(r3),r8
 4296  000045b8  20080000	addi	r8,r0,#0
 4297  000045bc  ac480000	sw	(r2),r8
 4298  000045c0  ac43000c	sw	12(r2),r3
 4299  000045c4  ac450008	sw	8(r2),r5
 4300  000045c8  ac450004	sw	4(r2),r5
 4301  000045cc  8ca80000	lw	r8,(r5)
 4302  000045d0  ac480000	sw	(r2),r8
 4303  000045d4  aca20000	sw	(r5),r2
 4304  000045d8  8c410000	lw	r1,(r2)
 4305  000045dc  ac220004	sw	4(r1),r2
 4306  000045e0  8ca10008	lw	r1,8(r5)
 4307  000045e4  20210001	addi	r1,r1,#1
 4308  000045e8  aca10008	sw	8(r5),r1
 4309  000045ec  204200b4	addi	r2,r2,#180
 4310  000045f0  206300b4	addi	r3,r3,#180
 4311  000045f4  20c600b4	addi	r6,r6,#180
 4312  000045f8  20840001	addi	r4,r4,#1
 4313  000045fc  7081001f	slei	r1,r4,#31
 4314  00004600  1420ff38	bnez	r1,L57_LF3
 4315  00004604  54000000	nop; not filled.
 4316  00004608  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4317  0000460c  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 4318  00004610  20080000	addi	r8,r0,#0
 4319  00004614  ac280000	sw	(r1),r8
 4320  00004618  23bdfff8	addi	r29,r29,#-8
 4321  0000461c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4322  00004620  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4323  00004624  afa20000	sw	(r29),r2
 4324  00004628  20080070	addi	r8,r0,#112
 4325  0000462c  afa80004	sw	4(r29),r8
 4326  00004630  0ffff4e8	jal	_dindex
 4327  00004634  54000000	nop; not filled.
 4328  00004638  23bd0008	addi	r29,r29,#8
 4329  0000463c  64210000	snei	r1,r1,#0
 4330  00004640  1420002c	bnez	r1,L65_LF3
 4331  00004644  54000000	nop; not filled.
 4332  00004648  23bdfff8	addi	r29,r29,#-8
 4333  0000464c  afa20000	sw	(r29),r2
 4334  00004650  2008002b	addi	r8,r0,#43
 4335  00004654  afa80004	sw	4(r29),r8
 4336  00004658  0ffff4c0	jal	_dindex
 4337  0000465c  54000000	nop; not filled.
 4338  00004660  23bd0008	addi	r29,r29,#8
 4339  00004664  64210000	snei	r1,r1,#0
 4340  00004668  10200020	beqz	r1,L64_LF3
 4341  0000466c  54000000	nop; not filled.
 4342  00004670          	L65_LF3:
 4343  00004670  23bdfff8	addi	r29,r29,#-8
 4344  00004674  3c080000	lhi	r8,((LC2_LF3)>>16)&0xffff
 4345  00004678  2508f3f4	addui	r8,r8,(LC2_LF3)&0xffff
 4346  0000467c  afa80000	sw	(r29),r8
 4347  00004680  0c005b74	jal	_printf
 4348  00004684  54000000	nop; not filled.
 4349  00004688  23bd0008	addi	r29,r29,#8
 4350  0000468c          	L64_LF3:
 4351  0000468c  8fa20000	lw	r2,0(r29)
 4352  00004690  8fa30004	lw	r3,4(r29)
 4353  00004694  8fa40008	lw	r4,8(r29)
 4354  00004698  8fa5000c	lw	r5,12(r29)
 4355  0000469c  8fa60010	lw	r6,16(r29)
 4356  000046a0  8fa70014	lw	r7,20(r29)
 4357  000046a4  8fa80018	lw	r8,24(r29)
 4358  000046a8  8fdffff8	lw	r31,-8(r30)
 4359  000046ac  001ee820	add	r29,r0,r30
 4360  000046b0  8fdefffc	lw	r30,-4(r30)
 4361  000046b4  4be00000	jr	r31
 4362  000046b8  54000000	nop
 4363  000046bc          	.endproc _ProcessModuleInit
 4364  000046bc          	.align 2
 4365  000046bc          	.proc _ProcessSetStatus
 4366  000046bc          	.global _ProcessSetStatus
 4367  000046bc          	_ProcessSetStatus:
 4368                      ;  Function 'ProcessSetStatus'; 0 bytes of locals, 2 regs to save.
 4369  000046bc  afbefffc	sw	-4(r29),r30; push fp
 4370  000046c0  001df020	add	r30,r0,r29; fp = sp
 4371  000046c4  afbffff8	sw	-8(r29),r31; push ret addr
 4372  000046c8  2fbd0010	subui	r29,r29,#16; alloc local storage
 4373  000046cc  afa20000	sw	0(r29),r2
 4374  000046d0  afa30004	sw	4(r29),r3
 4375  000046d4  8fc30000	lw	r3,(r30)
 4376  000046d8  8fc20004	lw	r2,4(r30)
 4377  000046dc  8c61000c	lw	r1,12(r3)
 4378  000046e0  201fffc0	addi	r31,r0,#-64
 4379  000046e4  003f0824	and	r1,r1,r31
 4380  000046e8  00220825	or	r1,r1,r2
 4381  000046ec  ac61000c	sw	12(r3),r1
 4382  000046f0  8fa20000	lw	r2,0(r29)
 4383  000046f4  8fa30004	lw	r3,4(r29)
 4384  000046f8  8fdffff8	lw	r31,-8(r30)
 4385  000046fc  001ee820	add	r29,r0,r30
 4386  00004700  8fdefffc	lw	r30,-4(r30)
 4387  00004704  4be00000	jr	r31
 4388  00004708  54000000	nop
 4389  0000470c          	.endproc _ProcessSetStatus
 4390  0000470c          	.align 2
 4391  0000470c          	.proc _ProcessFreeResources
 4392  0000470c          	.global _ProcessFreeResources
 4393  0000470c          	_ProcessFreeResources:
 4394                      ;  Function 'ProcessFreeResources'; 0 bytes of locals, 4 regs to save.
 4395  0000470c  afbefffc	sw	-4(r29),r30; push fp
 4396  00004710  001df020	add	r30,r0,r29; fp = sp
 4397  00004714  afbffff8	sw	-8(r29),r31; push ret addr
 4398  00004718  2fbd0018	subui	r29,r29,#24; alloc local storage
 4399  0000471c  afa20000	sw	0(r29),r2
 4400  00004720  afa30004	sw	4(r29),r3
 4401  00004724  afa40008	sw	8(r29),r4
 4402  00004728  afa5000c	sw	12(r29),r5
 4403  0000472c  8fc40000	lw	r4,(r30)
 4404  00004730  3c030000	lhi	r3,((_freepcbs_LF3)>>16)&0xffff
 4405  00004734  2463fcf4	addui	r3,r3,(_freepcbs_LF3)&0xffff
 4406  00004738  208200a4	addi	r2,r4,#164
 4407  0000473c  8c610004	lw	r1,4(r3)
 4408  00004740  ac8300ac	sw	172(r4),r3
 4409  00004744  ac8100a8	sw	168(r4),r1
 4410  00004748  8c250000	lw	r5,(r1)
 4411  0000474c  ac450000	sw	(r2),r5
 4412  00004750  ac220000	sw	(r1),r2
 4413  00004754  8c410000	lw	r1,(r2)
 4414  00004758  ac220004	sw	4(r1),r2
 4415  0000475c  8c610008	lw	r1,8(r3)
 4416  00004760  20210001	addi	r1,r1,#1
 4417  00004764  ac610008	sw	8(r3),r1
 4418  00004768  20020000	addi	r2,r0,#0
 4419  0000476c  8c8100a0	lw	r1,160(r4)
 4420  00004770  0041082a	slt	r1,r2,r1
 4421  00004774  10200038	beqz	r1,L83_LF3
 4422  00004778  54000000	nop; not filled.
 4423  0000477c  00041820	add	r3,r0,r4
 4424  00004780          	L85_LF3:
 4425  00004780  23bdfff8	addi	r29,r29,#-8
 4426  00004784  8c650060	lw	r5,96(r3)
 4427  00004788  afa50000	sw	(r29),r5
 4428  0000478c  0fffec34	jal	_MemoryFreePte
 4429  00004790  54000000	nop; not filled.
 4430  00004794  23bd0008	addi	r29,r29,#8
 4431  00004798  20630004	addi	r3,r3,#4
 4432  0000479c  20420001	addi	r2,r2,#1
 4433  000047a0  8c8100a0	lw	r1,160(r4)
 4434  000047a4  0041082a	slt	r1,r2,r1
 4435  000047a8  1420ffd4	bnez	r1,L85_LF3
 4436  000047ac  54000000	nop; not filled.
 4437  000047b0          	L83_LF3:
 4438  000047b0  23bdfff8	addi	r29,r29,#-8
 4439  000047b4  94810008	lhu	r1,8(r4)
 4440  000047b8  afa10000	sw	(r29),r1
 4441  000047bc  0fffe738	jal	_MemoryFreePage
 4442  000047c0  54000000	nop; not filled.
 4443  000047c4  23bd0008	addi	r29,r29,#8
 4444  000047c8  8c81000c	lw	r1,12(r4)
 4445  000047cc  2005ffc0	addi	r5,r0,#-64
 4446  000047d0  00250824	and	r1,r1,r5
 4447  000047d4  34210001	ori	r1,r1,#1
 4448  000047d8  ac81000c	sw	12(r4),r1
 4449  000047dc  8fa20000	lw	r2,0(r29)
 4450  000047e0  8fa30004	lw	r3,4(r29)
 4451  000047e4  8fa40008	lw	r4,8(r29)
 4452  000047e8  8fa5000c	lw	r5,12(r29)
 4453  000047ec  8fdffff8	lw	r31,-8(r30)
 4454  000047f0  001ee820	add	r29,r0,r30
 4455  000047f4  8fdefffc	lw	r30,-4(r30)
 4456  000047f8  4be00000	jr	r31
 4457  000047fc  54000000	nop
 4458  00004800          	.endproc _ProcessFreeResources
 4459  00004800          	.align 2
 4460  00004800          	.proc _ProcessSetResult
 4461  00004800          	.global _ProcessSetResult
 4462  00004800          	_ProcessSetResult:
 4463                      ;  Function 'ProcessSetResult'; 0 bytes of locals, 0 regs to save.
 4464  00004800  afbefffc	sw	-4(r29),r30; push fp
 4465  00004804  001df020	add	r30,r0,r29; fp = sp
 4466  00004808  afbffff8	sw	-8(r29),r31; push ret addr
 4467  0000480c  2fbd0008	subui	r29,r29,#8; alloc local storage
 4468  00004810  8fc10000	lw	r1,(r30)
 4469  00004814  8c210000	lw	r1,(r1)
 4470  00004818  8fdf0004	lw	r31,4(r30)
 4471  0000481c  ac3f002c	sw	44(r1),r31
 4472  00004820  8fdffff8	lw	r31,-8(r30)
 4473  00004824  001ee820	add	r29,r0,r30
 4474  00004828  8fdefffc	lw	r30,-4(r30)
 4475  0000482c  4be00000	jr	r31
 4476  00004830  54000000	nop
 4477  00004834          	.endproc _ProcessSetResult
 4478  00004834          	.data
 4479  0000f40f          	.align 2
 4480  0000f410          	LC3_LF3:
 4481  0000f410  4e6f7720	.ascii "Now entering ProcessSchedule (cur=0x%x, %d ready)\n\000"
 4481  0000f414  656e7465	
 4481  0000f418  72696e67	
 4481  0000f41c  2050726f	
 4481  0000f420  63657373	
 4481  0000f424  53636865	
 4481  0000f428  64756c65	
 4481  0000f42c  20286375	
 4481  0000f430  723d3078	
 4481  0000f434  25782c20	
 4481  0000f438  25642072	
 4481  0000f43c  65616479	
 4481  0000f440  290a00  	
 4482  0000f443          	.align 2
 4483  0000f444          	LC4_LF3:
 4484  0000f444  4e6f2072	.ascii "No runnable processes - exiting!\n\000"
 4484  0000f448  756e6e61	
 4484  0000f44c  626c6520	
 4484  0000f450  70726f63	
 4484  0000f454  65737365	
 4484  0000f458  73202d20	
 4484  0000f45c  65786974	
 4484  0000f460  696e6721	
 4484  0000f464  0a00    	
 4485  0000f466          	.align 2
 4486  0000f468          	LC5_LF3:
 4487  0000f468  41626f75	.ascii "About to switch to PCB 0x%x,flags=0x%x @ 0x%x\n\000"
 4487  0000f46c  7420746f	
 4487  0000f470  20737769	
 4487  0000f474  74636820	
 4487  0000f478  746f2050	
 4487  0000f47c  43422030	
 4487  0000f480  7825782c	
 4487  0000f484  666c6167	
 4487  0000f488  733d3078	
 4487  0000f48c  25782040	
 4487  0000f490  20307825	
 4487  0000f494  780a00  	
 4488  0000f497          	.align 2
 4489  0000f498          	LC6_LF3:
 4490  0000f498  46726565	.ascii "Freeing zombie PCB 0x%x.\n\000"
 4490  0000f49c  696e6720	
 4490  0000f4a0  7a6f6d62	
 4490  0000f4a4  69652050	
 4490  0000f4a8  43422030	
 4490  0000f4ac  7825782e	
 4490  0000f4b0  0a00    	
 4491  0000f4b2          	.align 2
 4492  0000f4b4          	LC7_LF3:
 4493  0000f4b4  4c656176	.ascii "Leaving ProcessSchedule (cur=0x%x)\n\000"
 4493  0000f4b8  696e6720	
 4493  0000f4bc  50726f63	
 4493  0000f4c0  65737353	
 4493  0000f4c4  63686564	
 4493  0000f4c8  756c6520	
 4493  0000f4cc  28637572	
 4493  0000f4d0  3d307825	
 4493  0000f4d4  78290a00	
 4494  0000f4d8          	.text
 4495  00004834          	.align 2
 4496  00004834          	.proc _ProcessSchedule
 4497  00004834          	.global _ProcessSchedule
 4498  00004834          	_ProcessSchedule:
 4499                      ;  Function 'ProcessSchedule'; 0 bytes of locals, 7 regs to save.
 4500  00004834  afbefffc	sw	-4(r29),r30; push fp
 4501  00004838  001df020	add	r30,r0,r29; fp = sp
 4502  0000483c  afbffff8	sw	-8(r29),r31; push ret addr
 4503  00004840  2fbd0028	subui	r29,r29,#40; alloc local storage
 4504  00004844  afa20000	sw	0(r29),r2
 4505  00004848  afa30004	sw	4(r29),r3
 4506  0000484c  afa40008	sw	8(r29),r4
 4507  00004850  afa5000c	sw	12(r29),r5
 4508  00004854  afa60010	sw	16(r29),r6
 4509  00004858  afa70014	sw	20(r29),r7
 4510  0000485c  afa80018	sw	24(r29),r8
 4511  00004860  23bdfff8	addi	r29,r29,#-8
 4512  00004864  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4513  00004868  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4514  0000486c  afa20000	sw	(r29),r2
 4515  00004870  20080070	addi	r8,r0,#112
 4516  00004874  afa80004	sw	4(r29),r8
 4517  00004878  0ffff2a0	jal	_dindex
 4518  0000487c  54000000	nop; not filled.
 4519  00004880  23bd0008	addi	r29,r29,#8
 4520  00004884  64210000	snei	r1,r1,#0
 4521  00004888  1420002c	bnez	r1,L92_LF3
 4522  0000488c  54000000	nop; not filled.
 4523  00004890  23bdfff8	addi	r29,r29,#-8
 4524  00004894  afa20000	sw	(r29),r2
 4525  00004898  2008002b	addi	r8,r0,#43
 4526  0000489c  afa80004	sw	4(r29),r8
 4527  000048a0  0ffff278	jal	_dindex
 4528  000048a4  54000000	nop; not filled.
 4529  000048a8  23bd0008	addi	r29,r29,#8
 4530  000048ac  64210000	snei	r1,r1,#0
 4531  000048b0  10200040	beqz	r1,L91_LF3
 4532  000048b4  54000000	nop; not filled.
 4533  000048b8          	L92_LF3:
 4534  000048b8  3c010000	lhi	r1,((_runQueue_LF3)>>16)&0xffff
 4535  000048bc  2421fd00	addui	r1,r1,(_runQueue_LF3)&0xffff
 4536  000048c0  8c220008	lw	r2,8(r1)
 4537  000048c4  23bdfff0	addi	r29,r29,#-16
 4538  000048c8  3c080000	lhi	r8,((LC3_LF3)>>16)&0xffff
 4539  000048cc  2508f410	addui	r8,r8,(LC3_LF3)&0xffff
 4540  000048d0  afa80000	sw	(r29),r8
 4541  000048d4  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4542  000048d8  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 4543  000048dc  8c210000	lw	r1,(r1)
 4544  000048e0  afa10004	sw	4(r29),r1
 4545  000048e4  afa20008	sw	8(r29),r2
 4546  000048e8  0c00590c	jal	_printf
 4547  000048ec  54000000	nop; not filled.
 4548  000048f0  23bd0010	addi	r29,r29,#16
 4549  000048f4          	L91_LF3:
 4550  000048f4  3c050000	lhi	r5,((_runQueue_LF3)>>16)&0xffff
 4551  000048f8  24a5fd00	addui	r5,r5,(_runQueue_LF3)&0xffff
 4552  000048fc  8ca10008	lw	r1,8(r5)
 4553  00004900  60210000	seqi	r1,r1,#0
 4554  00004904  10200028	beqz	r1,L94_LF3
 4555  00004908  54000000	nop; not filled.
 4556  0000490c  23bdfff8	addi	r29,r29,#-8
 4557  00004910  3c080000	lhi	r8,((LC4_LF3)>>16)&0xffff
 4558  00004914  2508f444	addui	r8,r8,(LC4_LF3)&0xffff
 4559  00004918  afa80000	sw	(r29),r8
 4560  0000491c  0c0058d8	jal	_printf
 4561  00004920  54000000	nop; not filled.
 4562  00004924  0c0058b8	jal	_exitsim
 4563  00004928  54000000	nop; not filled.
 4564  0000492c  23bd0008	addi	r29,r29,#8
 4565  00004930          	L94_LF3:
 4566  00004930  8ca10000	lw	r1,(r5)
 4567  00004934  8c24000c	lw	r4,12(r1)
 4568  00004938  208300a4	addi	r3,r4,#164
 4569  0000493c  8c8100ac	lw	r1,172(r4)
 4570  00004940  8c210008	lw	r1,8(r1)
 4571  00004944  6c210000	sgti	r1,r1,#0
 4572  00004948  1020002c	beqz	r1,L99_LF3
 4573  0000494c  54000000	nop; not filled.
 4574  00004950  8c8100a8	lw	r1,168(r4)
 4575  00004954  8c680000	lw	r8,(r3)
 4576  00004958  ac280000	sw	(r1),r8
 4577  0000495c  8c610000	lw	r1,(r3)
 4578  00004960  8c8800a8	lw	r8,168(r4)
 4579  00004964  ac280004	sw	4(r1),r8
 4580  00004968  8c8200ac	lw	r2,172(r4)
 4581  0000496c  8c410008	lw	r1,8(r2)
 4582  00004970  2021ffff	addi	r1,r1,#-1
 4583  00004974  ac410008	sw	8(r2),r1
 4584  00004978          	L99_LF3:
 4585  00004978  20080000	addi	r8,r0,#0
 4586  0000497c  ac680000	sw	(r3),r8
 4587  00004980  8ca10004	lw	r1,4(r5)
 4588  00004984  ac8500ac	sw	172(r4),r5
 4589  00004988  ac8100a8	sw	168(r4),r1
 4590  0000498c  8c280000	lw	r8,(r1)
 4591  00004990  ac680000	sw	(r3),r8
 4592  00004994  ac230000	sw	(r1),r3
 4593  00004998  8c610000	lw	r1,(r3)
 4594  0000499c  ac230004	sw	4(r1),r3
 4595  000049a0  8ca10008	lw	r1,8(r5)
 4596  000049a4  20210001	addi	r1,r1,#1
 4597  000049a8  aca10008	sw	8(r5),r1
 4598  000049ac  8ca10000	lw	r1,(r5)
 4599  000049b0  8c24000c	lw	r4,12(r1)
 4600  000049b4  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4601  000049b8  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 4602  000049bc  ac240000	sw	(r1),r4
 4603  000049c0  23bdfff8	addi	r29,r29,#-8
 4604  000049c4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4605  000049c8  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4606  000049cc  afa20000	sw	(r29),r2
 4607  000049d0  20080070	addi	r8,r0,#112
 4608  000049d4  afa80004	sw	4(r29),r8
 4609  000049d8  0ffff140	jal	_dindex
 4610  000049dc  54000000	nop; not filled.
 4611  000049e0  23bd0008	addi	r29,r29,#8
 4612  000049e4  64210000	snei	r1,r1,#0
 4613  000049e8  1420002c	bnez	r1,L105_LF3
 4614  000049ec  54000000	nop; not filled.
 4615  000049f0  23bdfff8	addi	r29,r29,#-8
 4616  000049f4  afa20000	sw	(r29),r2
 4617  000049f8  2008002b	addi	r8,r0,#43
 4618  000049fc  afa80004	sw	4(r29),r8
 4619  00004a00  0ffff118	jal	_dindex
 4620  00004a04  54000000	nop; not filled.
 4621  00004a08  23bd0008	addi	r29,r29,#8
 4622  00004a0c  64210000	snei	r1,r1,#0
 4623  00004a10  10200038	beqz	r1,L104_LF3
 4624  00004a14  54000000	nop; not filled.
 4625  00004a18          	L105_LF3:
 4626  00004a18  23bdfff0	addi	r29,r29,#-16
 4627  00004a1c  3c080000	lhi	r8,((LC5_LF3)>>16)&0xffff
 4628  00004a20  2508f468	addui	r8,r8,(LC5_LF3)&0xffff
 4629  00004a24  afa80000	sw	(r29),r8
 4630  00004a28  afa40004	sw	4(r29),r4
 4631  00004a2c  8c88000c	lw	r8,12(r4)
 4632  00004a30  afa80008	sw	8(r29),r8
 4633  00004a34  8c810004	lw	r1,4(r4)
 4634  00004a38  8c210128	lw	r1,296(r1)
 4635  00004a3c  afa1000c	sw	12(r29),r1
 4636  00004a40  0c0057b4	jal	_printf
 4637  00004a44  54000000	nop; not filled.
 4638  00004a48  23bd0010	addi	r29,r29,#16
 4639  00004a4c          	L104_LF3:
 4640  00004a4c  3c070000	lhi	r7,((_zombieQueue_LF3)>>16)&0xffff
 4641  00004a50  24e7fd18	addui	r7,r7,(_zombieQueue_LF3)&0xffff
 4642  00004a54  3c060000	lhi	r6,((_debugstr)>>16)&0xffff
 4643  00004a58  24c6fc26	addui	r6,r6,(_debugstr)&0xffff
 4644  00004a5c  3c050000	lhi	r5,((_freepcbs_LF3)>>16)&0xffff
 4645  00004a60  24a5fcf4	addui	r5,r5,(_freepcbs_LF3)&0xffff
 4646  00004a64          	L106_LF3:
 4647  00004a64  8ce10008	lw	r1,8(r7)
 4648  00004a68  60210000	seqi	r1,r1,#0
 4649  00004a6c  1420016c	bnez	r1,L107_LF3
 4650  00004a70  54000000	nop; not filled.
 4651  00004a74  8ce10000	lw	r1,(r7)
 4652  00004a78  8c24000c	lw	r4,12(r1)
 4653  00004a7c  23bdfff8	addi	r29,r29,#-8
 4654  00004a80  afa60000	sw	(r29),r6
 4655  00004a84  20080070	addi	r8,r0,#112
 4656  00004a88  afa80004	sw	4(r29),r8
 4657  00004a8c  0ffff08c	jal	_dindex
 4658  00004a90  54000000	nop; not filled.
 4659  00004a94  23bd0008	addi	r29,r29,#8
 4660  00004a98  64210000	snei	r1,r1,#0
 4661  00004a9c  1420002c	bnez	r1,L113_LF3
 4662  00004aa0  54000000	nop; not filled.
 4663  00004aa4  23bdfff8	addi	r29,r29,#-8
 4664  00004aa8  afa60000	sw	(r29),r6
 4665  00004aac  2008002b	addi	r8,r0,#43
 4666  00004ab0  afa80004	sw	4(r29),r8
 4667  00004ab4  0ffff064	jal	_dindex
 4668  00004ab8  54000000	nop; not filled.
 4669  00004abc  23bd0008	addi	r29,r29,#8
 4670  00004ac0  64210000	snei	r1,r1,#0
 4671  00004ac4  10200024	beqz	r1,L112_LF3
 4672  00004ac8  54000000	nop; not filled.
 4673  00004acc          	L113_LF3:
 4674  00004acc  23bdfff8	addi	r29,r29,#-8
 4675  00004ad0  3c080000	lhi	r8,((LC6_LF3)>>16)&0xffff
 4676  00004ad4  2508f498	addui	r8,r8,(LC6_LF3)&0xffff
 4677  00004ad8  afa80000	sw	(r29),r8
 4678  00004adc  afa40004	sw	4(r29),r4
 4679  00004ae0  0c005714	jal	_printf
 4680  00004ae4  54000000	nop; not filled.
 4681  00004ae8  23bd0008	addi	r29,r29,#8
 4682  00004aec          	L112_LF3:
 4683  00004aec  209f00a4	addi	r31,r4,#164
 4684  00004af0  8c8100ac	lw	r1,172(r4)
 4685  00004af4  8c210008	lw	r1,8(r1)
 4686  00004af8  6c210000	sgti	r1,r1,#0
 4687  00004afc  1020002c	beqz	r1,L115_LF3
 4688  00004b00  54000000	nop; not filled.
 4689  00004b04  8c8100a8	lw	r1,168(r4)
 4690  00004b08  8fe80000	lw	r8,(r31)
 4691  00004b0c  ac280000	sw	(r1),r8
 4692  00004b10  8fe10000	lw	r1,(r31)
 4693  00004b14  8c8800a8	lw	r8,168(r4)
 4694  00004b18  ac280004	sw	4(r1),r8
 4695  00004b1c  8c8200ac	lw	r2,172(r4)
 4696  00004b20  8c410008	lw	r1,8(r2)
 4697  00004b24  2021ffff	addi	r1,r1,#-1
 4698  00004b28  ac410008	sw	8(r2),r1
 4699  00004b2c          	L115_LF3:
 4700  00004b2c  20080000	addi	r8,r0,#0
 4701  00004b30  afe80000	sw	(r31),r8
 4702  00004b34  8ca10004	lw	r1,4(r5)
 4703  00004b38  ac8500ac	sw	172(r4),r5
 4704  00004b3c  ac8100a8	sw	168(r4),r1
 4705  00004b40  8c280000	lw	r8,(r1)
 4706  00004b44  afe80000	sw	(r31),r8
 4707  00004b48  ac3f0000	sw	(r1),r31
 4708  00004b4c  8fe10000	lw	r1,(r31)
 4709  00004b50  ac3f0004	sw	4(r1),r31
 4710  00004b54  8ca10008	lw	r1,8(r5)
 4711  00004b58  20210001	addi	r1,r1,#1
 4712  00004b5c  aca10008	sw	8(r5),r1
 4713  00004b60  20030000	addi	r3,r0,#0
 4714  00004b64  8c8100a0	lw	r1,160(r4)
 4715  00004b68  0061082a	slt	r1,r3,r1
 4716  00004b6c  10200038	beqz	r1,L121_LF3
 4717  00004b70  54000000	nop; not filled.
 4718  00004b74  00041020	add	r2,r0,r4
 4719  00004b78          	L123_LF3:
 4720  00004b78  23bdfff8	addi	r29,r29,#-8
 4721  00004b7c  8c480060	lw	r8,96(r2)
 4722  00004b80  afa80000	sw	(r29),r8
 4723  00004b84  0fffe83c	jal	_MemoryFreePte
 4724  00004b88  54000000	nop; not filled.
 4725  00004b8c  23bd0008	addi	r29,r29,#8
 4726  00004b90  20420004	addi	r2,r2,#4
 4727  00004b94  20630001	addi	r3,r3,#1
 4728  00004b98  8c8100a0	lw	r1,160(r4)
 4729  00004b9c  0061082a	slt	r1,r3,r1
 4730  00004ba0  1420ffd4	bnez	r1,L123_LF3
 4731  00004ba4  54000000	nop; not filled.
 4732  00004ba8          	L121_LF3:
 4733  00004ba8  23bdfff8	addi	r29,r29,#-8
 4734  00004bac  94810008	lhu	r1,8(r4)
 4735  00004bb0  afa10000	sw	(r29),r1
 4736  00004bb4  0fffe340	jal	_MemoryFreePage
 4737  00004bb8  54000000	nop; not filled.
 4738  00004bbc  23bd0008	addi	r29,r29,#8
 4739  00004bc0  8c81000c	lw	r1,12(r4)
 4740  00004bc4  2008ffc0	addi	r8,r0,#-64
 4741  00004bc8  00280824	and	r1,r1,r8
 4742  00004bcc  34210001	ori	r1,r1,#1
 4743  00004bd0  ac81000c	sw	12(r4),r1
 4744  00004bd4  0bfffe8c	j	L106_LF3
 4745  00004bd8  54000000	nop; not filled.
 4746  00004bdc          	L107_LF3:
 4747  00004bdc  23bdfff8	addi	r29,r29,#-8
 4748  00004be0  3c010000	lhi	r1,((_processQuantum_LF3)>>16)&0xffff
 4749  00004be4  2421f3b4	addui	r1,r1,(_processQuantum_LF3)&0xffff
 4750  00004be8  8c210000	lw	r1,(r1)
 4751  00004bec  afa10000	sw	(r29),r1
 4752  00004bf0  0c003c3c	jal	_TimerSet
 4753  00004bf4  54000000	nop; not filled.
 4754  00004bf8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4755  00004bfc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4756  00004c00  afa20000	sw	(r29),r2
 4757  00004c04  20080070	addi	r8,r0,#112
 4758  00004c08  afa80004	sw	4(r29),r8
 4759  00004c0c  0fffef0c	jal	_dindex
 4760  00004c10  54000000	nop; not filled.
 4761  00004c14  23bd0008	addi	r29,r29,#8
 4762  00004c18  64210000	snei	r1,r1,#0
 4763  00004c1c  1420002c	bnez	r1,L127_LF3
 4764  00004c20  54000000	nop; not filled.
 4765  00004c24  23bdfff8	addi	r29,r29,#-8
 4766  00004c28  afa20000	sw	(r29),r2
 4767  00004c2c  2008002b	addi	r8,r0,#43
 4768  00004c30  afa80004	sw	4(r29),r8
 4769  00004c34  0fffeee4	jal	_dindex
 4770  00004c38  54000000	nop; not filled.
 4771  00004c3c  23bd0008	addi	r29,r29,#8
 4772  00004c40  64210000	snei	r1,r1,#0
 4773  00004c44  10200030	beqz	r1,L126_LF3
 4774  00004c48  54000000	nop; not filled.
 4775  00004c4c          	L127_LF3:
 4776  00004c4c  23bdfff8	addi	r29,r29,#-8
 4777  00004c50  3c080000	lhi	r8,((LC7_LF3)>>16)&0xffff
 4778  00004c54  2508f4b4	addui	r8,r8,(LC7_LF3)&0xffff
 4779  00004c58  afa80000	sw	(r29),r8
 4780  00004c5c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4781  00004c60  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 4782  00004c64  8c210000	lw	r1,(r1)
 4783  00004c68  afa10004	sw	4(r29),r1
 4784  00004c6c  0c005588	jal	_printf
 4785  00004c70  54000000	nop; not filled.
 4786  00004c74  23bd0008	addi	r29,r29,#8
 4787  00004c78          	L126_LF3:
 4788  00004c78  8fa20000	lw	r2,0(r29)
 4789  00004c7c  8fa30004	lw	r3,4(r29)
 4790  00004c80  8fa40008	lw	r4,8(r29)
 4791  00004c84  8fa5000c	lw	r5,12(r29)
 4792  00004c88  8fa60010	lw	r6,16(r29)
 4793  00004c8c  8fa70014	lw	r7,20(r29)
 4794  00004c90  8fa80018	lw	r8,24(r29)
 4795  00004c94  8fdffff8	lw	r31,-8(r30)
 4796  00004c98  001ee820	add	r29,r0,r30
 4797  00004c9c  8fdefffc	lw	r30,-4(r30)
 4798  00004ca0  4be00000	jr	r31
 4799  00004ca4  54000000	nop
 4800  00004ca8          	.endproc _ProcessSchedule
 4801  00004ca8          	.data
 4802  0000f4d8          	.align 2
 4803  0000f4d8          	LC8_LF3:
 4804  0000f4d8  53757370	.ascii "Suspending PCB 0x%x (%s).\n\000"
 4804  0000f4dc  656e6469	
 4804  0000f4e0  6e672050	
 4804  0000f4e4  43422030	
 4804  0000f4e8  78257820	
 4804  0000f4ec  28257329	
 4804  0000f4f0  2e0a00  	
 4805  0000f4f3          	.align 2
 4806  0000f4f4          	LC9_LF3:
 4807  0000f4f4  25733a20	.ascii "%s: %s\n\000"
 4807  0000f4f8  25730a00	
 4808  0000f4fc          	.align 2
 4809  0000f4fc          	LC10_LF3:
 4810  0000f4fc  50726f63	.ascii "ProcessSuspend\000"
 4810  0000f500  65737353	
 4810  0000f504  75737065	
 4810  0000f508  6e6400  	
 4811  0000f50b          	.align 2
 4812  0000f50c          	LC11_LF3:
 4813  0000f50c  54727969	.ascii "Trying to suspend a non-running process!\n\000"
 4813  0000f510  6e672074	
 4813  0000f514  6f207375	
 4813  0000f518  7370656e	
 4813  0000f51c  64206120	
 4813  0000f520  6e6f6e2d	
 4813  0000f524  72756e6e	
 4813  0000f528  696e6720	
 4813  0000f52c  70726f63	
 4813  0000f530  65737321	
 4813  0000f534  0a00    	
 4814  0000f536          	.text
 4815  00004ca8          	.align 2
 4816  00004ca8          	.proc _ProcessSuspend
 4817  00004ca8          	.global _ProcessSuspend
 4818  00004ca8          	_ProcessSuspend:
 4819                      ;  Function 'ProcessSuspend'; 0 bytes of locals, 3 regs to save.
 4820  00004ca8  afbefffc	sw	-4(r29),r30; push fp
 4821  00004cac  001df020	add	r30,r0,r29; fp = sp
 4822  00004cb0  afbffff8	sw	-8(r29),r31; push ret addr
 4823  00004cb4  2fbd0018	subui	r29,r29,#24; alloc local storage
 4824  00004cb8  afa20000	sw	0(r29),r2
 4825  00004cbc  afa30004	sw	4(r29),r3
 4826  00004cc0  afa40008	sw	8(r29),r4
 4827  00004cc4  8fc30000	lw	r3,(r30)
 4828  00004cc8  23bdfff8	addi	r29,r29,#-8
 4829  00004ccc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4830  00004cd0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4831  00004cd4  afa20000	sw	(r29),r2
 4832  00004cd8  20040070	addi	r4,r0,#112
 4833  00004cdc  afa40004	sw	4(r29),r4
 4834  00004ce0  0fffee38	jal	_dindex
 4835  00004ce4  54000000	nop; not filled.
 4836  00004ce8  23bd0008	addi	r29,r29,#8
 4837  00004cec  64210000	snei	r1,r1,#0
 4838  00004cf0  1420002c	bnez	r1,L130_LF3
 4839  00004cf4  54000000	nop; not filled.
 4840  00004cf8  23bdfff8	addi	r29,r29,#-8
 4841  00004cfc  afa20000	sw	(r29),r2
 4842  00004d00  2004002b	addi	r4,r0,#43
 4843  00004d04  afa40004	sw	4(r29),r4
 4844  00004d08  0fffee10	jal	_dindex
 4845  00004d0c  54000000	nop; not filled.
 4846  00004d10  23bd0008	addi	r29,r29,#8
 4847  00004d14  64210000	snei	r1,r1,#0
 4848  00004d18  1020002c	beqz	r1,L129_LF3
 4849  00004d1c  54000000	nop; not filled.
 4850  00004d20          	L130_LF3:
 4851  00004d20  23bdfff0	addi	r29,r29,#-16
 4852  00004d24  3c040000	lhi	r4,((LC8_LF3)>>16)&0xffff
 4853  00004d28  2484f4d8	addui	r4,r4,(LC8_LF3)&0xffff
 4854  00004d2c  afa40000	sw	(r29),r4
 4855  00004d30  afa30004	sw	4(r29),r3
 4856  00004d34  20610010	addi	r1,r3,#16
 4857  00004d38  afa10008	sw	8(r29),r1
 4858  00004d3c  0c0054b8	jal	_printf
 4859  00004d40  54000000	nop; not filled.
 4860  00004d44  23bd0010	addi	r29,r29,#16
 4861  00004d48          	L129_LF3:
 4862  00004d48  8064000f	lb	r4,15(r3)
 4863  00004d4c  58810001	srli	r1,r4,#0x1
 4864  00004d50  30210001	andi	r1,r1,#1
 4865  00004d54  14200038	bnez	r1,L132_LF3
 4866  00004d58  54000000	nop; not filled.
 4867  00004d5c  23bdfff0	addi	r29,r29,#-16
 4868  00004d60  3c040000	lhi	r4,((LC9_LF3)>>16)&0xffff
 4869  00004d64  2484f4f4	addui	r4,r4,(LC9_LF3)&0xffff
 4870  00004d68  afa40000	sw	(r29),r4
 4871  00004d6c  3c010000	lhi	r1,((LC10_LF3)>>16)&0xffff
 4872  00004d70  2421f4fc	addui	r1,r1,(LC10_LF3)&0xffff
 4873  00004d74  afa10004	sw	4(r29),r1
 4874  00004d78  3c040000	lhi	r4,((LC11_LF3)>>16)&0xffff
 4875  00004d7c  2484f50c	addui	r4,r4,(LC11_LF3)&0xffff
 4876  00004d80  afa40008	sw	8(r29),r4
 4877  00004d84  0c005470	jal	_printf
 4878  00004d88  54000000	nop; not filled.
 4879  00004d8c  23bd0010	addi	r29,r29,#16
 4880  00004d90          	L132_LF3:
 4881  00004d90  8c61000c	lw	r1,12(r3)
 4882  00004d94  2004ffc0	addi	r4,r0,#-64
 4883  00004d98  00240824	and	r1,r1,r4
 4884  00004d9c  34210004	ori	r1,r1,#4
 4885  00004da0  ac61000c	sw	12(r3),r1
 4886  00004da4  207f00a4	addi	r31,r3,#164
 4887  00004da8  8c6100ac	lw	r1,172(r3)
 4888  00004dac  8c210008	lw	r1,8(r1)
 4889  00004db0  6c210000	sgti	r1,r1,#0
 4890  00004db4  1020002c	beqz	r1,L135_LF3
 4891  00004db8  54000000	nop; not filled.
 4892  00004dbc  8c6100a8	lw	r1,168(r3)
 4893  00004dc0  8fe40000	lw	r4,(r31)
 4894  00004dc4  ac240000	sw	(r1),r4
 4895  00004dc8  8fe10000	lw	r1,(r31)
 4896  00004dcc  8c6400a8	lw	r4,168(r3)
 4897  00004dd0  ac240004	sw	4(r1),r4
 4898  00004dd4  8c6200ac	lw	r2,172(r3)
 4899  00004dd8  8c410008	lw	r1,8(r2)
 4900  00004ddc  2021ffff	addi	r1,r1,#-1
 4901  00004de0  ac410008	sw	8(r2),r1
 4902  00004de4          	L135_LF3:
 4903  00004de4  20040000	addi	r4,r0,#0
 4904  00004de8  afe40000	sw	(r31),r4
 4905  00004dec  3c020000	lhi	r2,((_waitQueue_LF3)>>16)&0xffff
 4906  00004df0  2442fd0c	addui	r2,r2,(_waitQueue_LF3)&0xffff
 4907  00004df4  8c410004	lw	r1,4(r2)
 4908  00004df8  ac6200ac	sw	172(r3),r2
 4909  00004dfc  ac6100a8	sw	168(r3),r1
 4910  00004e00  8c240000	lw	r4,(r1)
 4911  00004e04  afe40000	sw	(r31),r4
 4912  00004e08  ac3f0000	sw	(r1),r31
 4913  00004e0c  8fe10000	lw	r1,(r31)
 4914  00004e10  ac3f0004	sw	4(r1),r31
 4915  00004e14  8c410008	lw	r1,8(r2)
 4916  00004e18  20210001	addi	r1,r1,#1
 4917  00004e1c  ac410008	sw	8(r2),r1
 4918  00004e20  8fa20000	lw	r2,0(r29)
 4919  00004e24  8fa30004	lw	r3,4(r29)
 4920  00004e28  8fa40008	lw	r4,8(r29)
 4921  00004e2c  8fdffff8	lw	r31,-8(r30)
 4922  00004e30  001ee820	add	r29,r0,r30
 4923  00004e34  8fdefffc	lw	r30,-4(r30)
 4924  00004e38  4be00000	jr	r31
 4925  00004e3c  54000000	nop
 4926  00004e40          	.endproc _ProcessSuspend
 4927  00004e40          	.data
 4928  0000f536          	.align 2
 4929  0000f538          	LC12_LF3:
 4930  0000f538  57616b69	.ascii "Waking up PCB 0x%x.\n\000"
 4930  0000f53c  6e672075	
 4930  0000f540  70205043	
 4930  0000f544  42203078	
 4930  0000f548  25782e0a	
 4930  0000f54c  00      	
 4931  0000f54d          	.align 2
 4932  0000f550          	LC13_LF3:
 4933  0000f550  50726f63	.ascii "ProcessWakeup\000"
 4933  0000f554  65737357	
 4933  0000f558  616b6575	
 4933  0000f55c  7000    	
 4934  0000f55e          	.align 2
 4935  0000f560          	LC14_LF3:
 4936  0000f560  54727969	.ascii "Trying to wake up a non-sleeping process!\n\000"
 4936  0000f564  6e672074	
 4936  0000f568  6f207761	
 4936  0000f56c  6b652075	
 4936  0000f570  70206120	
 4936  0000f574  6e6f6e2d	
 4936  0000f578  736c6565	
 4936  0000f57c  70696e67	
 4936  0000f580  2070726f	
 4936  0000f584  63657373	
 4936  0000f588  210a00  	
 4937  0000f58b          	.text
 4938  00004e40          	.align 2
 4939  00004e40          	.proc _ProcessWakeup
 4940  00004e40          	.global _ProcessWakeup
 4941  00004e40          	_ProcessWakeup:
 4942                      ;  Function 'ProcessWakeup'; 0 bytes of locals, 3 regs to save.
 4943  00004e40  afbefffc	sw	-4(r29),r30; push fp
 4944  00004e44  001df020	add	r30,r0,r29; fp = sp
 4945  00004e48  afbffff8	sw	-8(r29),r31; push ret addr
 4946  00004e4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 4947  00004e50  afa20000	sw	0(r29),r2
 4948  00004e54  afa30004	sw	4(r29),r3
 4949  00004e58  afa40008	sw	8(r29),r4
 4950  00004e5c  8fc30000	lw	r3,(r30)
 4951  00004e60  23bdfff8	addi	r29,r29,#-8
 4952  00004e64  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4953  00004e68  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4954  00004e6c  afa20000	sw	(r29),r2
 4955  00004e70  20040070	addi	r4,r0,#112
 4956  00004e74  afa40004	sw	4(r29),r4
 4957  00004e78  0fffeca0	jal	_dindex
 4958  00004e7c  54000000	nop; not filled.
 4959  00004e80  23bd0008	addi	r29,r29,#8
 4960  00004e84  64210000	snei	r1,r1,#0
 4961  00004e88  1420002c	bnez	r1,L141_LF3
 4962  00004e8c  54000000	nop; not filled.
 4963  00004e90  23bdfff8	addi	r29,r29,#-8
 4964  00004e94  afa20000	sw	(r29),r2
 4965  00004e98  2004002b	addi	r4,r0,#43
 4966  00004e9c  afa40004	sw	4(r29),r4
 4967  00004ea0  0fffec78	jal	_dindex
 4968  00004ea4  54000000	nop; not filled.
 4969  00004ea8  23bd0008	addi	r29,r29,#8
 4970  00004eac  64210000	snei	r1,r1,#0
 4971  00004eb0  10200024	beqz	r1,L140_LF3
 4972  00004eb4  54000000	nop; not filled.
 4973  00004eb8          	L141_LF3:
 4974  00004eb8  23bdfff8	addi	r29,r29,#-8
 4975  00004ebc  3c040000	lhi	r4,((LC12_LF3)>>16)&0xffff
 4976  00004ec0  2484f538	addui	r4,r4,(LC12_LF3)&0xffff
 4977  00004ec4  afa40000	sw	(r29),r4
 4978  00004ec8  afa30004	sw	4(r29),r3
 4979  00004ecc  0c005328	jal	_printf
 4980  00004ed0  54000000	nop; not filled.
 4981  00004ed4  23bd0008	addi	r29,r29,#8
 4982  00004ed8          	L140_LF3:
 4983  00004ed8  8064000f	lb	r4,15(r3)
 4984  00004edc  58810002	srli	r1,r4,#0x2
 4985  00004ee0  30210001	andi	r1,r1,#1
 4986  00004ee4  14200038	bnez	r1,L143_LF3
 4987  00004ee8  54000000	nop; not filled.
 4988  00004eec  23bdfff0	addi	r29,r29,#-16
 4989  00004ef0  3c040000	lhi	r4,((LC9_LF3)>>16)&0xffff
 4990  00004ef4  2484f4f4	addui	r4,r4,(LC9_LF3)&0xffff
 4991  00004ef8  afa40000	sw	(r29),r4
 4992  00004efc  3c010000	lhi	r1,((LC13_LF3)>>16)&0xffff
 4993  00004f00  2421f550	addui	r1,r1,(LC13_LF3)&0xffff
 4994  00004f04  afa10004	sw	4(r29),r1
 4995  00004f08  3c040000	lhi	r4,((LC14_LF3)>>16)&0xffff
 4996  00004f0c  2484f560	addui	r4,r4,(LC14_LF3)&0xffff
 4997  00004f10  afa40008	sw	8(r29),r4
 4998  00004f14  0c0052e0	jal	_printf
 4999  00004f18  54000000	nop; not filled.
 5000  00004f1c  23bd0010	addi	r29,r29,#16
 5001  00004f20          	L143_LF3:
 5002  00004f20  8c61000c	lw	r1,12(r3)
 5003  00004f24  2004ffc0	addi	r4,r0,#-64
 5004  00004f28  00240824	and	r1,r1,r4
 5005  00004f2c  34210002	ori	r1,r1,#2
 5006  00004f30  ac61000c	sw	12(r3),r1
 5007  00004f34  207f00a4	addi	r31,r3,#164
 5008  00004f38  8c6100ac	lw	r1,172(r3)
 5009  00004f3c  8c210008	lw	r1,8(r1)
 5010  00004f40  6c210000	sgti	r1,r1,#0
 5011  00004f44  1020002c	beqz	r1,L146_LF3
 5012  00004f48  54000000	nop; not filled.
 5013  00004f4c  8c6100a8	lw	r1,168(r3)
 5014  00004f50  8fe40000	lw	r4,(r31)
 5015  00004f54  ac240000	sw	(r1),r4
 5016  00004f58  8fe10000	lw	r1,(r31)
 5017  00004f5c  8c6400a8	lw	r4,168(r3)
 5018  00004f60  ac240004	sw	4(r1),r4
 5019  00004f64  8c6200ac	lw	r2,172(r3)
 5020  00004f68  8c410008	lw	r1,8(r2)
 5021  00004f6c  2021ffff	addi	r1,r1,#-1
 5022  00004f70  ac410008	sw	8(r2),r1
 5023  00004f74          	L146_LF3:
 5024  00004f74  20040000	addi	r4,r0,#0
 5025  00004f78  afe40000	sw	(r31),r4
 5026  00004f7c  3c020000	lhi	r2,((_runQueue_LF3)>>16)&0xffff
 5027  00004f80  2442fd00	addui	r2,r2,(_runQueue_LF3)&0xffff
 5028  00004f84  8c410004	lw	r1,4(r2)
 5029  00004f88  ac6200ac	sw	172(r3),r2
 5030  00004f8c  ac6100a8	sw	168(r3),r1
 5031  00004f90  8c240000	lw	r4,(r1)
 5032  00004f94  afe40000	sw	(r31),r4
 5033  00004f98  ac3f0000	sw	(r1),r31
 5034  00004f9c  8fe10000	lw	r1,(r31)
 5035  00004fa0  ac3f0004	sw	4(r1),r31
 5036  00004fa4  8c410008	lw	r1,8(r2)
 5037  00004fa8  20210001	addi	r1,r1,#1
 5038  00004fac  ac410008	sw	8(r2),r1
 5039  00004fb0  8fa20000	lw	r2,0(r29)
 5040  00004fb4  8fa30004	lw	r3,4(r29)
 5041  00004fb8  8fa40008	lw	r4,8(r29)
 5042  00004fbc  8fdffff8	lw	r31,-8(r30)
 5043  00004fc0  001ee820	add	r29,r0,r30
 5044  00004fc4  8fdefffc	lw	r30,-4(r30)
 5045  00004fc8  4be00000	jr	r31
 5046  00004fcc  54000000	nop
 5047  00004fd0          	.endproc _ProcessWakeup
 5048  00004fd0          	.data
 5049  0000f58b          	.align 2
 5050  0000f58c          	LC15_LF3:
 5051  0000f58c  456e7465	.ascii "Entering ProcessDestroy for 0x%x.\n\000"
 5051  0000f590  72696e67	
 5051  0000f594  2050726f	
 5051  0000f598  63657373	
 5051  0000f59c  44657374	
 5051  0000f5a0  726f7920	
 5051  0000f5a4  666f7220	
 5051  0000f5a8  30782578	
 5051  0000f5ac  2e0a00  	
 5052  0000f5af          	.align 2
 5053  0000f5b0          	LC16_LF3:
 5054  0000f5b0  4c656176	.ascii "Leaving ProcessDestroy for 0x%x.\n\000"
 5054  0000f5b4  696e6720	
 5054  0000f5b8  50726f63	
 5054  0000f5bc  65737344	
 5054  0000f5c0  65737472	
 5054  0000f5c4  6f792066	
 5054  0000f5c8  6f722030	
 5054  0000f5cc  7825782e	
 5054  0000f5d0  0a00    	
 5055  0000f5d2          	.text
 5056  00004fd0          	.align 2
 5057  00004fd0          	.proc _ProcessDestroy
 5058  00004fd0          	.global _ProcessDestroy
 5059  00004fd0          	_ProcessDestroy:
 5060                      ;  Function 'ProcessDestroy'; 0 bytes of locals, 3 regs to save.
 5061  00004fd0  afbefffc	sw	-4(r29),r30; push fp
 5062  00004fd4  001df020	add	r30,r0,r29; fp = sp
 5063  00004fd8  afbffff8	sw	-8(r29),r31; push ret addr
 5064  00004fdc  2fbd0018	subui	r29,r29,#24; alloc local storage
 5065  00004fe0  afa20000	sw	0(r29),r2
 5066  00004fe4  afa30004	sw	4(r29),r3
 5067  00004fe8  afa40008	sw	8(r29),r4
 5068  00004fec  8fc30000	lw	r3,(r30)
 5069  00004ff0  23bdfff8	addi	r29,r29,#-8
 5070  00004ff4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5071  00004ff8  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5072  00004ffc  afa20000	sw	(r29),r2
 5073  00005000  20040070	addi	r4,r0,#112
 5074  00005004  afa40004	sw	4(r29),r4
 5075  00005008  0fffeb10	jal	_dindex
 5076  0000500c  54000000	nop; not filled.
 5077  00005010  23bd0008	addi	r29,r29,#8
 5078  00005014  64210000	snei	r1,r1,#0
 5079  00005018  1420002c	bnez	r1,L152_LF3
 5080  0000501c  54000000	nop; not filled.
 5081  00005020  23bdfff8	addi	r29,r29,#-8
 5082  00005024  afa20000	sw	(r29),r2
 5083  00005028  2004002b	addi	r4,r0,#43
 5084  0000502c  afa40004	sw	4(r29),r4
 5085  00005030  0fffeae8	jal	_dindex
 5086  00005034  54000000	nop; not filled.
 5087  00005038  23bd0008	addi	r29,r29,#8
 5088  0000503c  64210000	snei	r1,r1,#0
 5089  00005040  10200024	beqz	r1,L151_LF3
 5090  00005044  54000000	nop; not filled.
 5091  00005048          	L152_LF3:
 5092  00005048  23bdfff8	addi	r29,r29,#-8
 5093  0000504c  3c040000	lhi	r4,((LC15_LF3)>>16)&0xffff
 5094  00005050  2484f58c	addui	r4,r4,(LC15_LF3)&0xffff
 5095  00005054  afa40000	sw	(r29),r4
 5096  00005058  afa30004	sw	4(r29),r3
 5097  0000505c  0c005198	jal	_printf
 5098  00005060  54000000	nop; not filled.
 5099  00005064  23bd0008	addi	r29,r29,#8
 5100  00005068          	L151_LF3:
 5101  00005068  8c61000c	lw	r1,12(r3)
 5102  0000506c  2004ffc0	addi	r4,r0,#-64
 5103  00005070  00240824	and	r1,r1,r4
 5104  00005074  34210010	ori	r1,r1,#16
 5105  00005078  ac61000c	sw	12(r3),r1
 5106  0000507c  207f00a4	addi	r31,r3,#164
 5107  00005080  8c6100ac	lw	r1,172(r3)
 5108  00005084  8c210008	lw	r1,8(r1)
 5109  00005088  6c210000	sgti	r1,r1,#0
 5110  0000508c  1020002c	beqz	r1,L155_LF3
 5111  00005090  54000000	nop; not filled.
 5112  00005094  8c6100a8	lw	r1,168(r3)
 5113  00005098  8fe40000	lw	r4,(r31)
 5114  0000509c  ac240000	sw	(r1),r4
 5115  000050a0  8fe10000	lw	r1,(r31)
 5116  000050a4  8c6400a8	lw	r4,168(r3)
 5117  000050a8  ac240004	sw	4(r1),r4
 5118  000050ac  8c6200ac	lw	r2,172(r3)
 5119  000050b0  8c410008	lw	r1,8(r2)
 5120  000050b4  2021ffff	addi	r1,r1,#-1
 5121  000050b8  ac410008	sw	8(r2),r1
 5122  000050bc          	L155_LF3:
 5123  000050bc  20040000	addi	r4,r0,#0
 5124  000050c0  afe40000	sw	(r31),r4
 5125  000050c4  3c020000	lhi	r2,((_zombieQueue_LF3)>>16)&0xffff
 5126  000050c8  2442fd18	addui	r2,r2,(_zombieQueue_LF3)&0xffff
 5127  000050cc  ac6200ac	sw	172(r3),r2
 5128  000050d0  ac6200a8	sw	168(r3),r2
 5129  000050d4  8c440000	lw	r4,(r2)
 5130  000050d8  afe40000	sw	(r31),r4
 5131  000050dc  ac5f0000	sw	(r2),r31
 5132  000050e0  8fe10000	lw	r1,(r31)
 5133  000050e4  ac3f0004	sw	4(r1),r31
 5134  000050e8  8c410008	lw	r1,8(r2)
 5135  000050ec  20210001	addi	r1,r1,#1
 5136  000050f0  ac410008	sw	8(r2),r1
 5137  000050f4  23bdfff8	addi	r29,r29,#-8
 5138  000050f8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5139  000050fc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5140  00005100  afa20000	sw	(r29),r2
 5141  00005104  20040070	addi	r4,r0,#112
 5142  00005108  afa40004	sw	4(r29),r4
 5143  0000510c  0fffea0c	jal	_dindex
 5144  00005110  54000000	nop; not filled.
 5145  00005114  23bd0008	addi	r29,r29,#8
 5146  00005118  64210000	snei	r1,r1,#0
 5147  0000511c  1420002c	bnez	r1,L159_LF3
 5148  00005120  54000000	nop; not filled.
 5149  00005124  23bdfff8	addi	r29,r29,#-8
 5150  00005128  afa20000	sw	(r29),r2
 5151  0000512c  2004002b	addi	r4,r0,#43
 5152  00005130  afa40004	sw	4(r29),r4
 5153  00005134  0fffe9e4	jal	_dindex
 5154  00005138  54000000	nop; not filled.
 5155  0000513c  23bd0008	addi	r29,r29,#8
 5156  00005140  64210000	snei	r1,r1,#0
 5157  00005144  10200024	beqz	r1,L158_LF3
 5158  00005148  54000000	nop; not filled.
 5159  0000514c          	L159_LF3:
 5160  0000514c  23bdfff8	addi	r29,r29,#-8
 5161  00005150  3c040000	lhi	r4,((LC16_LF3)>>16)&0xffff
 5162  00005154  2484f5b0	addui	r4,r4,(LC16_LF3)&0xffff
 5163  00005158  afa40000	sw	(r29),r4
 5164  0000515c  afa30004	sw	4(r29),r3
 5165  00005160  0c005094	jal	_printf
 5166  00005164  54000000	nop; not filled.
 5167  00005168  23bd0008	addi	r29,r29,#8
 5168  0000516c          	L158_LF3:
 5169  0000516c  8fa20000	lw	r2,0(r29)
 5170  00005170  8fa30004	lw	r3,4(r29)
 5171  00005174  8fa40008	lw	r4,8(r29)
 5172  00005178  8fdffff8	lw	r31,-8(r30)
 5173  0000517c  001ee820	add	r29,r0,r30
 5174  00005180  8fdefffc	lw	r30,-4(r30)
 5175  00005184  4be00000	jr	r31
 5176  00005188  54000000	nop
 5177  0000518c          	.endproc _ProcessDestroy
 5178  0000518c          	.data
 5179  0000f5d2          	.align 2
 5180  0000f5d4          	LC17_LF3:
 5181  0000f5d4  4f6c6420	.ascii "Old interrupt value was 0x%x.\n\000"
 5181  0000f5d8  696e7465	
 5181  0000f5dc  72727570	
 5181  0000f5e0  74207661	
 5181  0000f5e4  6c756520	
 5181  0000f5e8  77617320	
 5181  0000f5ec  30782578	
 5181  0000f5f0  2e0a00  	
 5182  0000f5f3          	.align 2
 5183  0000f5f4          	LC18_LF3:
 5184  0000f5f4  456e7465	.ascii "Entering ProcessFork args=0x%x 0x%x %s %d\n\000"
 5184  0000f5f8  72696e67	
 5184  0000f5fc  2050726f	
 5184  0000f600  63657373	
 5184  0000f604  466f726b	
 5184  0000f608  20617267	
 5184  0000f60c  733d3078	
 5184  0000f610  25782030	
 5184  0000f614  78257820	
 5184  0000f618  25732025	
 5184  0000f61c  640a00  	
 5185  0000f61f          	.align 2
 5186  0000f620          	LC19_LF3:
 5187  0000f620  46415441	.ascii "FATAL error: no free processes!\n\000"
 5187  0000f624  4c206572	
 5187  0000f628  726f723a	
 5187  0000f62c  206e6f20	
 5187  0000f630  66726565	
 5187  0000f634  2070726f	
 5187  0000f638  63657373	
 5187  0000f63c  6573210a	
 5187  0000f640  00      	
 5188  0000f641          	.align 2
 5189  0000f644          	LC20_LF3:
 5190  0000f644  476f7420	.ascii "Got a link @ 0x%x\n\000"
 5190  0000f648  61206c69	
 5190  0000f64c  6e6b2040	
 5190  0000f650  20307825	
 5190  0000f654  780a00  	
 5191  0000f657          	.align 2
 5192  0000f658          	LC21_LF3:
 5193  0000f658  4265666f	.ascii "Before restore interrupt value is 0x%x.\n\000"
 5193  0000f65c  72652072	
 5193  0000f660  6573746f	
 5193  0000f664  72652069	
 5193  0000f668  6e746572	
 5193  0000f66c  72757074	
 5193  0000f670  2076616c	
 5193  0000f674  75652069	
 5193  0000f678  73203078	
 5193  0000f67c  25782e0a	
 5193  0000f680  00      	
 5194  0000f681          	.align 2
 5195  0000f684          	LC22_LF3:
 5196  0000f684  4e657720	.ascii "New interrupt value is 0x%x.\n\000"
 5196  0000f688  696e7465	
 5196  0000f68c  72727570	
 5196  0000f690  74207661	
 5196  0000f694  6c756520	
 5196  0000f698  69732030	
 5196  0000f69c  7825782e	
 5196  0000f6a0  0a00    	
 5197  0000f6a2          	.align 2
 5198  0000f6a4          	LC23_LF3:
 5199  0000f6a4  46415441	.ascii "FATAL: couldn\'t allocate memory - no free pages!\n\000"
 5199  0000f6a8  4c3a2063	
 5199  0000f6ac  6f756c64	
 5199  0000f6b0  6e277420	
 5199  0000f6b4  616c6c6f	
 5199  0000f6b8  63617465	
 5199  0000f6bc  206d656d	
 5199  0000f6c0  6f727920	
 5199  0000f6c4  2d206e6f	
 5199  0000f6c8  20667265	
 5199  0000f6cc  65207061	
 5199  0000f6d0  67657321	
 5199  0000f6d4  0a00    	
 5200  0000f6d6          	.align 2
 5201  0000f6d8          	LC24_LF3:
 5202  0000f6d8  46415441	.ascii "FATAL: couldn\'t allocate system stack - no free pages!\n\000"
 5202  0000f6dc  4c3a2063	
 5202  0000f6e0  6f756c64	
 5202  0000f6e4  6e277420	
 5202  0000f6e8  616c6c6f	
 5202  0000f6ec  63617465	
 5202  0000f6f0  20737973	
 5202  0000f6f4  74656d20	
 5202  0000f6f8  73746163	
 5202  0000f6fc  6b202d20	
 5202  0000f700  6e6f2066	
 5202  0000f704  72656520	
 5202  0000f708  70616765	
 5202  0000f70c  73210a00	
 5203  0000f710          	.align 2
 5204  0000f710          	LC25_LF3:
 5205  0000f710  53657474	.ascii "Setting up PCB @ 0x%x (sys stack=0x%x, mem=0x%x, size=0x%x)\n\000"
 5205  0000f714  696e6720	
 5205  0000f718  75702050	
 5205  0000f71c  43422040	
 5205  0000f720  20307825	
 5205  0000f724  78202873	
 5205  0000f728  79732073	
 5205  0000f72c  7461636b	
 5205  0000f730  3d307825	
 5205  0000f734  782c206d	
 5205  0000f738  656d3d30	
 5205  0000f73c  7825782c	
 5205  0000f740  2073697a	
 5205  0000f744  653d3078	
 5205  0000f748  2578290a	
 5205  0000f74c  00      	
 5206  0000f74d          	.align 2
 5207  0000f750          	LC26_LF3:
 5208  0000f750  41626f75	.ascii "About to load %s\n\000"
 5208  0000f754  7420746f	
 5208  0000f758  206c6f61	
 5208  0000f75c  64202573	
 5208  0000f760  0a00    	
 5209  0000f762          	.align 2
 5210  0000f764          	LC27_LF3:
 5211  0000f764  46696c65	.ascii "File %s -> start=0x%08x\n\000"
 5211  0000f768  20257320	
 5211  0000f76c  2d3e2073	
 5211  0000f770  74617274	
 5211  0000f774  3d307825	
 5211  0000f778  3038780a	
 5211  0000f77c  00      	
 5212  0000f77d          	.align 2
 5213  0000f780          	LC28_LF3:
 5214  0000f780  46696c65	.ascii "File %s -> code @ 0x%08x (size=0x%08x)\n\000"
 5214  0000f784  20257320	
 5214  0000f788  2d3e2063	
 5214  0000f78c  6f646520	
 5214  0000f790  40203078	
 5214  0000f794  25303878	
 5214  0000f798  20287369	
 5214  0000f79c  7a653d30	
 5214  0000f7a0  78253038	
 5214  0000f7a4  78290a00	
 5215  0000f7a8          	.align 2
 5216  0000f7a8          	LC29_LF3:
 5217  0000f7a8  46696c65	.ascii "File %s -> data @ 0x%08x (size=0x%08x)\n\000"
 5217  0000f7ac  20257320	
 5217  0000f7b0  2d3e2064	
 5217  0000f7b4  61746120	
 5217  0000f7b8  40203078	
 5217  0000f7bc  25303878	
 5217  0000f7c0  20287369	
 5217  0000f7c4  7a653d30	
 5217  0000f7c8  78253038	
 5217  0000f7cc  78290a00	
 5218  0000f7d0          	.align 2
 5219  0000f7d0          	LC30_LF3:
 5220  0000f7d0  506c6163	.ascii "Placing %d bytes at vaddr %08x.\n\000"
 5220  0000f7d4  696e6720	
 5220  0000f7d8  25642062	
 5220  0000f7dc  79746573	
 5220  0000f7e0  20617420	
 5220  0000f7e4  76616464	
 5220  0000f7e8  72202530	
 5220  0000f7ec  38782e0a	
 5220  0000f7f0  00      	
 5221  0000f7f1          	.align 2
 5222  0000f7f4          	LC31_LF3:
 5223  0000f7f4  53657474	.ascii "Setting currentPCB=0x%x, stackframe=0x%x\n\000"
 5223  0000f7f8  696e6720	
 5223  0000f7fc  63757272	
 5223  0000f800  656e7450	
 5223  0000f804  43423d30	
 5223  0000f808  7825782c	
 5223  0000f80c  20737461	
 5223  0000f810  636b6672	
 5223  0000f814  616d653d	
 5223  0000f818  30782578	
 5223  0000f81c  0a00    	
 5224  0000f81e          	.align 2
 5225  0000f820          	LC32_LF3:
 5226  0000f820  4c656176	.ascii "Leaving ProcessFork (%s)\n\000"
 5226  0000f824  696e6720	
 5226  0000f828  50726f63	
 5226  0000f82c  65737346	
 5226  0000f830  6f726b20	
 5226  0000f834  28257329	
 5226  0000f838  0a00    	
 5227  0000f83a          	.text
 5228  0000518c          	.align 2
 5229  0000518c          	.proc _ProcessFork
 5230  0000518c          	.global _ProcessFork
 5231  0000518c          	_ProcessFork:
 5232                      ;  Function 'ProcessFork'; 128 bytes of locals, 10 regs to save.
 5233  0000518c  afbefffc	sw	-4(r29),r30; push fp
 5234  00005190  001df020	add	r30,r0,r29; fp = sp
 5235  00005194  afbffff8	sw	-8(r29),r31; push ret addr
 5236  00005198  2fbd00b0	subui	r29,r29,#176; alloc local storage
 5237  0000519c  afa20000	sw	0(r29),r2
 5238  000051a0  afa30004	sw	4(r29),r3
 5239  000051a4  afa40008	sw	8(r29),r4
 5240  000051a8  afa5000c	sw	12(r29),r5
 5241  000051ac  afa60010	sw	16(r29),r6
 5242  000051b0  afa70014	sw	20(r29),r7
 5243  000051b4  afa80018	sw	24(r29),r8
 5244  000051b8  afa9001c	sw	28(r29),r9
 5245  000051bc  afaa0020	sw	32(r29),r10
 5246  000051c0  afab0024	sw	36(r29),r11
 5247  000051c4  8fc80000	lw	r8,(r30)
 5248  000051c8  8fca0008	lw	r10,8(r30)
 5249  000051cc  8fc7000c	lw	r7,12(r30)
 5250  000051d0  200b0000	addi	r11,r0,#0
 5251  000051d4  afcbff78	sw	-136(r30),r11
 5252  000051d8  23bdfff8	addi	r29,r29,#-8
 5253  000051dc  200b000f	addi	r11,r0,#15
 5254  000051e0  afab0000	sw	(r29),r11
 5255  000051e4  0c004ebc	jal	_SetIntrs
 5256  000051e8  54000000	nop; not filled.
 5257  000051ec  00011820	add	r3,r0,r1
 5258  000051f0  23bd0008	addi	r29,r29,#8
 5259  000051f4  23bdfff8	addi	r29,r29,#-8
 5260  000051f8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5261  000051fc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5262  00005200  afa20000	sw	(r29),r2
 5263  00005204  200b0049	addi	r11,r0,#73
 5264  00005208  afab0004	sw	4(r29),r11
 5265  0000520c  0fffe90c	jal	_dindex
 5266  00005210  54000000	nop; not filled.
 5267  00005214  23bd0008	addi	r29,r29,#8
 5268  00005218  64210000	snei	r1,r1,#0
 5269  0000521c  1420002c	bnez	r1,L165_LF3
 5270  00005220  54000000	nop; not filled.
 5271  00005224  23bdfff8	addi	r29,r29,#-8
 5272  00005228  afa20000	sw	(r29),r2
 5273  0000522c  200b002b	addi	r11,r0,#43
 5274  00005230  afab0004	sw	4(r29),r11
 5275  00005234  0fffe8e4	jal	_dindex
 5276  00005238  54000000	nop; not filled.
 5277  0000523c  23bd0008	addi	r29,r29,#8
 5278  00005240  64210000	snei	r1,r1,#0
 5279  00005244  10200024	beqz	r1,L164_LF3
 5280  00005248  54000000	nop; not filled.
 5281  0000524c          	L165_LF3:
 5282  0000524c  23bdfff8	addi	r29,r29,#-8
 5283  00005250  3c0b0000	lhi	r11,((LC17_LF3)>>16)&0xffff
 5284  00005254  256bf5d4	addui	r11,r11,(LC17_LF3)&0xffff
 5285  00005258  afab0000	sw	(r29),r11
 5286  0000525c  afa30004	sw	4(r29),r3
 5287  00005260  0c004f94	jal	_printf
 5288  00005264  54000000	nop; not filled.
 5289  00005268  23bd0008	addi	r29,r29,#8
 5290  0000526c          	L164_LF3:
 5291  0000526c  23bdfff8	addi	r29,r29,#-8
 5292  00005270  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5293  00005274  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5294  00005278  afa20000	sw	(r29),r2
 5295  0000527c  200b0070	addi	r11,r0,#112
 5296  00005280  afab0004	sw	4(r29),r11
 5297  00005284  0fffe894	jal	_dindex
 5298  00005288  54000000	nop; not filled.
 5299  0000528c  23bd0008	addi	r29,r29,#8
 5300  00005290  64210000	snei	r1,r1,#0
 5301  00005294  1420002c	bnez	r1,L167_LF3
 5302  00005298  54000000	nop; not filled.
 5303  0000529c  23bdfff8	addi	r29,r29,#-8
 5304  000052a0  afa20000	sw	(r29),r2
 5305  000052a4  200b002b	addi	r11,r0,#43
 5306  000052a8  afab0004	sw	4(r29),r11
 5307  000052ac  0fffe86c	jal	_dindex
 5308  000052b0  54000000	nop; not filled.
 5309  000052b4  23bd0008	addi	r29,r29,#8
 5310  000052b8  64210000	snei	r1,r1,#0
 5311  000052bc  10200034	beqz	r1,L166_LF3
 5312  000052c0  54000000	nop; not filled.
 5313  000052c4          	L167_LF3:
 5314  000052c4  23bdffe8	addi	r29,r29,#-24
 5315  000052c8  3c0b0000	lhi	r11,((LC18_LF3)>>16)&0xffff
 5316  000052cc  256bf5f4	addui	r11,r11,(LC18_LF3)&0xffff
 5317  000052d0  afab0000	sw	(r29),r11
 5318  000052d4  afa80004	sw	4(r29),r8
 5319  000052d8  8fcb0004	lw	r11,4(r30)
 5320  000052dc  afab0008	sw	8(r29),r11
 5321  000052e0  afaa000c	sw	12(r29),r10
 5322  000052e4  afa70010	sw	16(r29),r7
 5323  000052e8  0c004f0c	jal	_printf
 5324  000052ec  54000000	nop; not filled.
 5325  000052f0  23bd0018	addi	r29,r29,#24
 5326  000052f4          	L166_LF3:
 5327  000052f4  3c020000	lhi	r2,((_freepcbs_LF3)>>16)&0xffff
 5328  000052f8  2442fcf4	addui	r2,r2,(_freepcbs_LF3)&0xffff
 5329  000052fc  8c410008	lw	r1,8(r2)
 5330  00005300  60210000	seqi	r1,r1,#0
 5331  00005304  10200028	beqz	r1,L168_LF3
 5332  00005308  54000000	nop; not filled.
 5333  0000530c  23bdfff8	addi	r29,r29,#-8
 5334  00005310  3c0b0000	lhi	r11,((LC19_LF3)>>16)&0xffff
 5335  00005314  256bf620	addui	r11,r11,(LC19_LF3)&0xffff
 5336  00005318  afab0000	sw	(r29),r11
 5337  0000531c  0c004ed8	jal	_printf
 5338  00005320  54000000	nop; not filled.
 5339  00005324  0c004eb8	jal	_exitsim
 5340  00005328  54000000	nop; not filled.
 5341  0000532c  23bd0008	addi	r29,r29,#8
 5342  00005330          	L168_LF3:
 5343  00005330  8c460000	lw	r6,(r2)
 5344  00005334  23bdfff8	addi	r29,r29,#-8
 5345  00005338  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5346  0000533c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5347  00005340  afa20000	sw	(r29),r2
 5348  00005344  200b0070	addi	r11,r0,#112
 5349  00005348  afab0004	sw	4(r29),r11
 5350  0000534c  0fffe7cc	jal	_dindex
 5351  00005350  54000000	nop; not filled.
 5352  00005354  23bd0008	addi	r29,r29,#8
 5353  00005358  64210000	snei	r1,r1,#0
 5354  0000535c  1420002c	bnez	r1,L173_LF3
 5355  00005360  54000000	nop; not filled.
 5356  00005364  23bdfff8	addi	r29,r29,#-8
 5357  00005368  afa20000	sw	(r29),r2
 5358  0000536c  200b002b	addi	r11,r0,#43
 5359  00005370  afab0004	sw	4(r29),r11
 5360  00005374  0fffe7a4	jal	_dindex
 5361  00005378  54000000	nop; not filled.
 5362  0000537c  23bd0008	addi	r29,r29,#8
 5363  00005380  64210000	snei	r1,r1,#0
 5364  00005384  10200024	beqz	r1,L172_LF3
 5365  00005388  54000000	nop; not filled.
 5366  0000538c          	L173_LF3:
 5367  0000538c  23bdfff8	addi	r29,r29,#-8
 5368  00005390  3c0b0000	lhi	r11,((LC20_LF3)>>16)&0xffff
 5369  00005394  256bf644	addui	r11,r11,(LC20_LF3)&0xffff
 5370  00005398  afab0000	sw	(r29),r11
 5371  0000539c  afa60004	sw	4(r29),r6
 5372  000053a0  0c004e54	jal	_printf
 5373  000053a4  54000000	nop; not filled.
 5374  000053a8  23bd0008	addi	r29,r29,#8
 5375  000053ac          	L172_LF3:
 5376  000053ac  8cc10008	lw	r1,8(r6)
 5377  000053b0  8c210008	lw	r1,8(r1)
 5378  000053b4  6c210000	sgti	r1,r1,#0
 5379  000053b8  1020002c	beqz	r1,L175_LF3
 5380  000053bc  54000000	nop; not filled.
 5381  000053c0  8cc10004	lw	r1,4(r6)
 5382  000053c4  8ccb0000	lw	r11,(r6)
 5383  000053c8  ac2b0000	sw	(r1),r11
 5384  000053cc  8cc10000	lw	r1,(r6)
 5385  000053d0  8ccb0004	lw	r11,4(r6)
 5386  000053d4  ac2b0004	sw	4(r1),r11
 5387  000053d8  8cc20008	lw	r2,8(r6)
 5388  000053dc  8c410008	lw	r1,8(r2)
 5389  000053e0  2021ffff	addi	r1,r1,#-1
 5390  000053e4  ac410008	sw	8(r2),r1
 5391  000053e8          	L175_LF3:
 5392  000053e8  200b0000	addi	r11,r0,#0
 5393  000053ec  accb0000	sw	(r6),r11
 5394  000053f0  8cc4000c	lw	r4,12(r6)
 5395  000053f4  8c81000c	lw	r1,12(r4)
 5396  000053f8  200bffc0	addi	r11,r0,#-64
 5397  000053fc  002b0824	and	r1,r1,r11
 5398  00005400  34210002	ori	r1,r1,#2
 5399  00005404  ac81000c	sw	12(r4),r1
 5400  00005408  23bdfff8	addi	r29,r29,#-8
 5401  0000540c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5402  00005410  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5403  00005414  afa20000	sw	(r29),r2
 5404  00005418  200b0049	addi	r11,r0,#73
 5405  0000541c  afab0004	sw	4(r29),r11
 5406  00005420  0fffe6f8	jal	_dindex
 5407  00005424  54000000	nop; not filled.
 5408  00005428  23bd0008	addi	r29,r29,#8
 5409  0000542c  64210000	snei	r1,r1,#0
 5410  00005430  1420002c	bnez	r1,L178_LF3
 5411  00005434  54000000	nop; not filled.
 5412  00005438  23bdfff8	addi	r29,r29,#-8
 5413  0000543c  afa20000	sw	(r29),r2
 5414  00005440  200b002b	addi	r11,r0,#43
 5415  00005444  afab0004	sw	4(r29),r11
 5416  00005448  0fffe6d0	jal	_dindex
 5417  0000544c  54000000	nop; not filled.
 5418  00005450  23bd0008	addi	r29,r29,#8
 5419  00005454  64210000	snei	r1,r1,#0
 5420  00005458  1020002c	beqz	r1,L177_LF3
 5421  0000545c  54000000	nop; not filled.
 5422  00005460          	L178_LF3:
 5423  00005460  0c004c7c	jal	_CurrentIntrs
 5424  00005464  54000000	nop; not filled.
 5425  00005468  23bdfff8	addi	r29,r29,#-8
 5426  0000546c  3c0b0000	lhi	r11,((LC21_LF3)>>16)&0xffff
 5427  00005470  256bf658	addui	r11,r11,(LC21_LF3)&0xffff
 5428  00005474  afab0000	sw	(r29),r11
 5429  00005478  afa10004	sw	4(r29),r1
 5430  0000547c  0c004d78	jal	_printf
 5431  00005480  54000000	nop; not filled.
 5432  00005484  23bd0008	addi	r29,r29,#8
 5433  00005488          	L177_LF3:
 5434  00005488  23bdfff8	addi	r29,r29,#-8
 5435  0000548c  afa30000	sw	(r29),r3
 5436  00005490  0c004c10	jal	_SetIntrs
 5437  00005494  54000000	nop; not filled.
 5438  00005498  23bd0008	addi	r29,r29,#8
 5439  0000549c  23bdfff8	addi	r29,r29,#-8
 5440  000054a0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5441  000054a4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5442  000054a8  afa20000	sw	(r29),r2
 5443  000054ac  200b0049	addi	r11,r0,#73
 5444  000054b0  afab0004	sw	4(r29),r11
 5445  000054b4  0fffe664	jal	_dindex
 5446  000054b8  54000000	nop; not filled.
 5447  000054bc  23bd0008	addi	r29,r29,#8
 5448  000054c0  64210000	snei	r1,r1,#0
 5449  000054c4  1420002c	bnez	r1,L181_LF3
 5450  000054c8  54000000	nop; not filled.
 5451  000054cc  23bdfff8	addi	r29,r29,#-8
 5452  000054d0  afa20000	sw	(r29),r2
 5453  000054d4  200b002b	addi	r11,r0,#43
 5454  000054d8  afab0004	sw	4(r29),r11
 5455  000054dc  0fffe63c	jal	_dindex
 5456  000054e0  54000000	nop; not filled.
 5457  000054e4  23bd0008	addi	r29,r29,#8
 5458  000054e8  64210000	snei	r1,r1,#0
 5459  000054ec  1020002c	beqz	r1,L180_LF3
 5460  000054f0  54000000	nop; not filled.
 5461  000054f4          	L181_LF3:
 5462  000054f4  0c004be8	jal	_CurrentIntrs
 5463  000054f8  54000000	nop; not filled.
 5464  000054fc  23bdfff8	addi	r29,r29,#-8
 5465  00005500  3c0b0000	lhi	r11,((LC22_LF3)>>16)&0xffff
 5466  00005504  256bf684	addui	r11,r11,(LC22_LF3)&0xffff
 5467  00005508  afab0000	sw	(r29),r11
 5468  0000550c  afa10004	sw	4(r29),r1
 5469  00005510  0c004ce4	jal	_printf
 5470  00005514  54000000	nop; not filled.
 5471  00005518  23bd0008	addi	r29,r29,#8
 5472  0000551c          	L180_LF3:
 5473  0000551c  23bdfff8	addi	r29,r29,#-8
 5474  00005520  20810010	addi	r1,r4,#16
 5475  00005524  afa10000	sw	(r29),r1
 5476  00005528  afaa0004	sw	4(r29),r10
 5477  0000552c  0fffe12c	jal	_dstrcpy
 5478  00005530  54000000	nop; not filled.
 5479  00005534  200b0001	addi	r11,r0,#1
 5480  00005538  ac8b00a0	sw	160(r4),r11
 5481  0000553c  0fffd70c	jal	_MemoryAllocPage
 5482  00005540  54000000	nop; not filled.
 5483  00005544  00011020	add	r2,r0,r1
 5484  00005548  23bd0008	addi	r29,r29,#8
 5485  0000554c  64410000	snei	r1,r2,#0
 5486  00005550  14200028	bnez	r1,L182_LF3
 5487  00005554  54000000	nop; not filled.
 5488  00005558  23bdfff8	addi	r29,r29,#-8
 5489  0000555c  3c0b0000	lhi	r11,((LC23_LF3)>>16)&0xffff
 5490  00005560  256bf6a4	addui	r11,r11,(LC23_LF3)&0xffff
 5491  00005564  afab0000	sw	(r29),r11
 5492  00005568  0c004c8c	jal	_printf
 5493  0000556c  54000000	nop; not filled.
 5494  00005570  0c004c6c	jal	_exitsim
 5495  00005574  54000000	nop; not filled.
 5496  00005578  23bd0008	addi	r29,r29,#8
 5497  0000557c          	L182_LF3:
 5498  0000557c  23bdfff8	addi	r29,r29,#-8
 5499  00005580  afa20000	sw	(r29),r2
 5500  00005584  0fffde0c	jal	_MemorySetupPte
 5501  00005588  54000000	nop; not filled.
 5502  0000558c  ac810060	sw	96(r4),r1
 5503  00005590  0fffd6b8	jal	_MemoryAllocPage
 5504  00005594  54000000	nop; not filled.
 5505  00005598  00011020	add	r2,r0,r1
 5506  0000559c  23bd0008	addi	r29,r29,#8
 5507  000055a0  64410000	snei	r1,r2,#0
 5508  000055a4  14200028	bnez	r1,L183_LF3
 5509  000055a8  54000000	nop; not filled.
 5510  000055ac  23bdfff8	addi	r29,r29,#-8
 5511  000055b0  3c0b0000	lhi	r11,((LC24_LF3)>>16)&0xffff
 5512  000055b4  256bf6d8	addui	r11,r11,(LC24_LF3)&0xffff
 5513  000055b8  afab0000	sw	(r29),r11
 5514  000055bc  0c004c38	jal	_printf
 5515  000055c0  54000000	nop; not filled.
 5516  000055c4  0c004c18	jal	_exitsim
 5517  000055c8  54000000	nop; not filled.
 5518  000055cc  23bd0008	addi	r29,r29,#8
 5519  000055d0          	L183_LF3:
 5520  000055d0  50410010	slli	r1,r2,#0x10
 5521  000055d4  ac810008	sw	8(r4),r1
 5522  000055d8  3425fe8c	ori	r5,r1,#65164
 5523  000055dc  ac850004	sw	4(r4),r5
 5524  000055e0  ac850000	sw	(r4),r5
 5525  000055e4  23bdfff8	addi	r29,r29,#-8
 5526  000055e8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5527  000055ec  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5528  000055f0  afa20000	sw	(r29),r2
 5529  000055f4  200b0070	addi	r11,r0,#112
 5530  000055f8  afab0004	sw	4(r29),r11
 5531  000055fc  0fffe51c	jal	_dindex
 5532  00005600  54000000	nop; not filled.
 5533  00005604  23bd0008	addi	r29,r29,#8
 5534  00005608  64210000	snei	r1,r1,#0
 5535  0000560c  1420002c	bnez	r1,L185_LF3
 5536  00005610  54000000	nop; not filled.
 5537  00005614  23bdfff8	addi	r29,r29,#-8
 5538  00005618  afa20000	sw	(r29),r2
 5539  0000561c  200b002b	addi	r11,r0,#43
 5540  00005620  afab0004	sw	4(r29),r11
 5541  00005624  0fffe4f4	jal	_dindex
 5542  00005628  54000000	nop; not filled.
 5543  0000562c  23bd0008	addi	r29,r29,#8
 5544  00005630  64210000	snei	r1,r1,#0
 5545  00005634  10200040	beqz	r1,L184_LF3
 5546  00005638  54000000	nop; not filled.
 5547  0000563c          	L185_LF3:
 5548  0000563c  23bdffe8	addi	r29,r29,#-24
 5549  00005640  3c0b0000	lhi	r11,((LC25_LF3)>>16)&0xffff
 5550  00005644  256bf710	addui	r11,r11,(LC25_LF3)&0xffff
 5551  00005648  afab0000	sw	(r29),r11
 5552  0000564c  afa40004	sw	4(r29),r4
 5553  00005650  8c8b0008	lw	r11,8(r4)
 5554  00005654  afab0008	sw	8(r29),r11
 5555  00005658  8c8b0060	lw	r11,96(r4)
 5556  0000565c  afab000c	sw	12(r29),r11
 5557  00005660  8c8100a0	lw	r1,160(r4)
 5558  00005664  50210010	slli	r1,r1,#0x10
 5559  00005668  afa10010	sw	16(r29),r1
 5560  0000566c  0c004b88	jal	_printf
 5561  00005670  54000000	nop; not filled.
 5562  00005674  23bd0018	addi	r29,r29,#24
 5563  00005678          	L184_LF3:
 5564  00005678  200b0000	addi	r11,r0,#0
 5565  0000567c  acab0028	sw	40(r5),r11
 5566  00005680  20810060	addi	r1,r4,#96
 5567  00005684  aca10138	sw	312(r5),r1
 5568  00005688  8c8b00a0	lw	r11,160(r4)
 5569  0000568c  acab013c	sw	316(r5),r11
 5570  00005690  3c010010	lhi	r1,#16
 5571  00005694  24210010	addui	r1,r1,#16
 5572  00005698  aca10140	sw	320(r5),r1
 5573  0000569c  64e10000	snei	r1,r7,#0
 5574  000056a0  10200468	beqz	r1,L186_LF3
 5575  000056a4  54000000	nop; not filled.
 5576  000056a8  23bdfff8	addi	r29,r29,#-8
 5577  000056ac  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5578  000056b0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5579  000056b4  afa20000	sw	(r29),r2
 5580  000056b8  200b0070	addi	r11,r0,#112
 5581  000056bc  afab0004	sw	4(r29),r11
 5582  000056c0  0fffe458	jal	_dindex
 5583  000056c4  54000000	nop; not filled.
 5584  000056c8  23bd0008	addi	r29,r29,#8
 5585  000056cc  64210000	snei	r1,r1,#0
 5586  000056d0  1420002c	bnez	r1,L188_LF3
 5587  000056d4  54000000	nop; not filled.
 5588  000056d8  23bdfff8	addi	r29,r29,#-8
 5589  000056dc  afa20000	sw	(r29),r2
 5590  000056e0  200b002b	addi	r11,r0,#43
 5591  000056e4  afab0004	sw	4(r29),r11
 5592  000056e8  0fffe430	jal	_dindex
 5593  000056ec  54000000	nop; not filled.
 5594  000056f0  23bd0008	addi	r29,r29,#8
 5595  000056f4  64210000	snei	r1,r1,#0
 5596  000056f8  10200024	beqz	r1,L187_LF3
 5597  000056fc  54000000	nop; not filled.
 5598  00005700          	L188_LF3:
 5599  00005700  23bdfff8	addi	r29,r29,#-8
 5600  00005704  3c0b0000	lhi	r11,((LC26_LF3)>>16)&0xffff
 5601  00005708  256bf750	addui	r11,r11,(LC26_LF3)&0xffff
 5602  0000570c  afab0000	sw	(r29),r11
 5603  00005710  afaa0004	sw	4(r29),r10
 5604  00005714  0c004ae0	jal	_printf
 5605  00005718  54000000	nop; not filled.
 5606  0000571c  23bd0008	addi	r29,r29,#8
 5607  00005720          	L187_LF3:
 5608  00005720  23bdffe8	addi	r29,r29,#-24
 5609  00005724  afaa0000	sw	(r29),r10
 5610  00005728  23c1ff8c	addi	r1,r30,#-116
 5611  0000572c  afa10004	sw	4(r29),r1
 5612  00005730  23c1ff88	addi	r1,r30,#-120
 5613  00005734  afa10008	sw	8(r29),r1
 5614  00005738  23c1ff84	addi	r1,r30,#-124
 5615  0000573c  afa1000c	sw	12(r29),r1
 5616  00005740  23c1ff80	addi	r1,r30,#-128
 5617  00005744  afa10010	sw	16(r29),r1
 5618  00005748  23c1ff7c	addi	r1,r30,#-132
 5619  0000574c  afa10014	sw	20(r29),r1
 5620  00005750  0c0005d0	jal	_ProcessGetCodeInfo
 5621  00005754  54000000	nop; not filled.
 5622  00005758  00014020	add	r8,r0,r1
 5623  0000575c  23bd0018	addi	r29,r29,#24
 5624  00005760  69010000	slti	r1,r8,#0
 5625  00005764  102000bc	beqz	r1,L189_LF3
 5626  00005768  54000000	nop; not filled.
 5627  0000576c  3c030000	lhi	r3,((_freepcbs_LF3)>>16)&0xffff
 5628  00005770  2463fcf4	addui	r3,r3,(_freepcbs_LF3)&0xffff
 5629  00005774  208200a4	addi	r2,r4,#164
 5630  00005778  8c610004	lw	r1,4(r3)
 5631  0000577c  ac8300ac	sw	172(r4),r3
 5632  00005780  ac8100a8	sw	168(r4),r1
 5633  00005784  8c2b0000	lw	r11,(r1)
 5634  00005788  ac4b0000	sw	(r2),r11
 5635  0000578c  ac220000	sw	(r1),r2
 5636  00005790  8c410000	lw	r1,(r2)
 5637  00005794  ac220004	sw	4(r1),r2
 5638  00005798  8c610008	lw	r1,8(r3)
 5639  0000579c  20210001	addi	r1,r1,#1
 5640  000057a0  ac610008	sw	8(r3),r1
 5641  000057a4  20020000	addi	r2,r0,#0
 5642  000057a8  8c8100a0	lw	r1,160(r4)
 5643  000057ac  0041082a	slt	r1,r2,r1
 5644  000057b0  10200038	beqz	r1,L195_LF3
 5645  000057b4  54000000	nop; not filled.
 5646  000057b8  00041820	add	r3,r0,r4
 5647  000057bc          	L197_LF3:
 5648  000057bc  23bdfff8	addi	r29,r29,#-8
 5649  000057c0  8c6b0060	lw	r11,96(r3)
 5650  000057c4  afab0000	sw	(r29),r11
 5651  000057c8  0fffdbf8	jal	_MemoryFreePte
 5652  000057cc  54000000	nop; not filled.
 5653  000057d0  23bd0008	addi	r29,r29,#8
 5654  000057d4  20630004	addi	r3,r3,#4
 5655  000057d8  20420001	addi	r2,r2,#1
 5656  000057dc  8c8100a0	lw	r1,160(r4)
 5657  000057e0  0041082a	slt	r1,r2,r1
 5658  000057e4  1420ffd4	bnez	r1,L197_LF3
 5659  000057e8  54000000	nop; not filled.
 5660  000057ec          	L195_LF3:
 5661  000057ec  23bdfff8	addi	r29,r29,#-8
 5662  000057f0  94810008	lhu	r1,8(r4)
 5663  000057f4  afa10000	sw	(r29),r1
 5664  000057f8  0fffd6fc	jal	_MemoryFreePage
 5665  000057fc  54000000	nop; not filled.
 5666  00005800  23bd0008	addi	r29,r29,#8
 5667  00005804  8c81000c	lw	r1,12(r4)
 5668  00005808  200bffc0	addi	r11,r0,#-64
 5669  0000580c  002b0824	and	r1,r1,r11
 5670  00005810  34210001	ori	r1,r1,#1
 5671  00005814  ac81000c	sw	12(r4),r1
 5672  00005818  2001ffff	addi	r1,r0,#-1
 5673  0000581c  080004c8	j	L222_LF3
 5674  00005820  54000000	nop; not filled.
 5675  00005824          	L189_LF3:
 5676  00005824  23bdfff8	addi	r29,r29,#-8
 5677  00005828  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5678  0000582c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5679  00005830  afa20000	sw	(r29),r2
 5680  00005834  200b0070	addi	r11,r0,#112
 5681  00005838  afab0004	sw	4(r29),r11
 5682  0000583c  0fffe2dc	jal	_dindex
 5683  00005840  54000000	nop; not filled.
 5684  00005844  23bd0008	addi	r29,r29,#8
 5685  00005848  64210000	snei	r1,r1,#0
 5686  0000584c  1420002c	bnez	r1,L201_LF3
 5687  00005850  54000000	nop; not filled.
 5688  00005854  23bdfff8	addi	r29,r29,#-8
 5689  00005858  afa20000	sw	(r29),r2
 5690  0000585c  200b002b	addi	r11,r0,#43
 5691  00005860  afab0004	sw	4(r29),r11
 5692  00005864  0fffe2b4	jal	_dindex
 5693  00005868  54000000	nop; not filled.
 5694  0000586c  23bd0008	addi	r29,r29,#8
 5695  00005870  64210000	snei	r1,r1,#0
 5696  00005874  1020002c	beqz	r1,L200_LF3
 5697  00005878  54000000	nop; not filled.
 5698  0000587c          	L201_LF3:
 5699  0000587c  23bdfff0	addi	r29,r29,#-16
 5700  00005880  3c0b0000	lhi	r11,((LC27_LF3)>>16)&0xffff
 5701  00005884  256bf764	addui	r11,r11,(LC27_LF3)&0xffff
 5702  00005888  afab0000	sw	(r29),r11
 5703  0000588c  afaa0004	sw	4(r29),r10
 5704  00005890  8fcbff8c	lw	r11,-116(r30)
 5705  00005894  afab0008	sw	8(r29),r11
 5706  00005898  0c00495c	jal	_printf
 5707  0000589c  54000000	nop; not filled.
 5708  000058a0  23bd0010	addi	r29,r29,#16
 5709  000058a4          	L200_LF3:
 5710  000058a4  23bdfff8	addi	r29,r29,#-8
 5711  000058a8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5712  000058ac  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5713  000058b0  afa20000	sw	(r29),r2
 5714  000058b4  200b0070	addi	r11,r0,#112
 5715  000058b8  afab0004	sw	4(r29),r11
 5716  000058bc  0fffe25c	jal	_dindex
 5717  000058c0  54000000	nop; not filled.
 5718  000058c4  23bd0008	addi	r29,r29,#8
 5719  000058c8  64210000	snei	r1,r1,#0
 5720  000058cc  1420002c	bnez	r1,L203_LF3
 5721  000058d0  54000000	nop; not filled.
 5722  000058d4  23bdfff8	addi	r29,r29,#-8
 5723  000058d8  afa20000	sw	(r29),r2
 5724  000058dc  200b002b	addi	r11,r0,#43
 5725  000058e0  afab0004	sw	4(r29),r11
 5726  000058e4  0fffe234	jal	_dindex
 5727  000058e8  54000000	nop; not filled.
 5728  000058ec  23bd0008	addi	r29,r29,#8
 5729  000058f0  64210000	snei	r1,r1,#0
 5730  000058f4  10200034	beqz	r1,L202_LF3
 5731  000058f8  54000000	nop; not filled.
 5732  000058fc          	L203_LF3:
 5733  000058fc  23bdfff0	addi	r29,r29,#-16
 5734  00005900  3c0b0000	lhi	r11,((LC28_LF3)>>16)&0xffff
 5735  00005904  256bf780	addui	r11,r11,(LC28_LF3)&0xffff
 5736  00005908  afab0000	sw	(r29),r11
 5737  0000590c  afaa0004	sw	4(r29),r10
 5738  00005910  8fcbff88	lw	r11,-120(r30)
 5739  00005914  afab0008	sw	8(r29),r11
 5740  00005918  8fcbff84	lw	r11,-124(r30)
 5741  0000591c  afab000c	sw	12(r29),r11
 5742  00005920  0c0048d4	jal	_printf
 5743  00005924  54000000	nop; not filled.
 5744  00005928  23bd0010	addi	r29,r29,#16
 5745  0000592c          	L202_LF3:
 5746  0000592c  23bdfff8	addi	r29,r29,#-8
 5747  00005930  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5748  00005934  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5749  00005938  afa20000	sw	(r29),r2
 5750  0000593c  200b0070	addi	r11,r0,#112
 5751  00005940  afab0004	sw	4(r29),r11
 5752  00005944  0fffe1d4	jal	_dindex
 5753  00005948  54000000	nop; not filled.
 5754  0000594c  23bd0008	addi	r29,r29,#8
 5755  00005950  64210000	snei	r1,r1,#0
 5756  00005954  1420002c	bnez	r1,L205_LF3
 5757  00005958  54000000	nop; not filled.
 5758  0000595c  23bdfff8	addi	r29,r29,#-8
 5759  00005960  afa20000	sw	(r29),r2
 5760  00005964  200b002b	addi	r11,r0,#43
 5761  00005968  afab0004	sw	4(r29),r11
 5762  0000596c  0fffe1ac	jal	_dindex
 5763  00005970  54000000	nop; not filled.
 5764  00005974  23bd0008	addi	r29,r29,#8
 5765  00005978  64210000	snei	r1,r1,#0
 5766  0000597c  10200034	beqz	r1,L204_LF3
 5767  00005980  54000000	nop; not filled.
 5768  00005984          	L205_LF3:
 5769  00005984  23bdfff0	addi	r29,r29,#-16
 5770  00005988  3c0b0000	lhi	r11,((LC29_LF3)>>16)&0xffff
 5771  0000598c  256bf7a8	addui	r11,r11,(LC29_LF3)&0xffff
 5772  00005990  afab0000	sw	(r29),r11
 5773  00005994  afaa0004	sw	4(r29),r10
 5774  00005998  8fcbff80	lw	r11,-128(r30)
 5775  0000599c  afab0008	sw	8(r29),r11
 5776  000059a0  8fcbff7c	lw	r11,-132(r30)
 5777  000059a4  afab000c	sw	12(r29),r11
 5778  000059a8  0c00484c	jal	_printf
 5779  000059ac  54000000	nop; not filled.
 5780  000059b0  23bd0010	addi	r29,r29,#16
 5781  000059b4          	L204_LF3:
 5782  000059b4  23c3ff90	addi	r3,r30,#-112
 5783  000059b8  23c9ff78	addi	r9,r30,#-136
 5784  000059bc  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 5785  000059c0  24e7fc26	addui	r7,r7,(_debugstr)&0xffff
 5786  000059c4          	L206_LF3:
 5787  000059c4  23bdfff0	addi	r29,r29,#-16
 5788  000059c8  afa80000	sw	(r29),r8
 5789  000059cc  afa30004	sw	4(r29),r3
 5790  000059d0  afa90008	sw	8(r29),r9
 5791  000059d4  200b0064	addi	r11,r0,#100
 5792  000059d8  afab000c	sw	12(r29),r11
 5793  000059dc  0c0007a4	jal	_ProcessGetFromFile
 5794  000059e0  54000000	nop; not filled.
 5795  000059e4  00011020	add	r2,r0,r1
 5796  000059e8  23bd0010	addi	r29,r29,#16
 5797  000059ec  6c410000	sgti	r1,r2,#0
 5798  000059f0  102000b0	beqz	r1,L207_LF3
 5799  000059f4  54000000	nop; not filled.
 5800  000059f8  23bdfff8	addi	r29,r29,#-8
 5801  000059fc  afa70000	sw	(r29),r7
 5802  00005a00  200b0070	addi	r11,r0,#112
 5803  00005a04  afab0004	sw	4(r29),r11
 5804  00005a08  0fffe110	jal	_dindex
 5805  00005a0c  54000000	nop; not filled.
 5806  00005a10  23bd0008	addi	r29,r29,#8
 5807  00005a14  64210000	snei	r1,r1,#0
 5808  00005a18  1420002c	bnez	r1,L210_LF3
 5809  00005a1c  54000000	nop; not filled.
 5810  00005a20  23bdfff8	addi	r29,r29,#-8
 5811  00005a24  afa70000	sw	(r29),r7
 5812  00005a28  200b002b	addi	r11,r0,#43
 5813  00005a2c  afab0004	sw	4(r29),r11
 5814  00005a30  0fffe0e8	jal	_dindex
 5815  00005a34  54000000	nop; not filled.
 5816  00005a38  23bd0008	addi	r29,r29,#8
 5817  00005a3c  64210000	snei	r1,r1,#0
 5818  00005a40  10200030	beqz	r1,L209_LF3
 5819  00005a44  54000000	nop; not filled.
 5820  00005a48          	L210_LF3:
 5821  00005a48  23bdfff0	addi	r29,r29,#-16
 5822  00005a4c  3c0b0000	lhi	r11,((LC30_LF3)>>16)&0xffff
 5823  00005a50  256bf7d0	addui	r11,r11,(LC30_LF3)&0xffff
 5824  00005a54  afab0000	sw	(r29),r11
 5825  00005a58  afa20004	sw	4(r29),r2
 5826  00005a5c  8fc1ff78	lw	r1,-136(r30)
 5827  00005a60  00220822	sub	r1,r1,r2
 5828  00005a64  afa10008	sw	8(r29),r1
 5829  00005a68  0c00478c	jal	_printf
 5830  00005a6c  54000000	nop; not filled.
 5831  00005a70  23bd0010	addi	r29,r29,#16
 5832  00005a74          	L209_LF3:
 5833  00005a74  23bdfff0	addi	r29,r29,#-16
 5834  00005a78  afa40000	sw	(r29),r4
 5835  00005a7c  afa30004	sw	4(r29),r3
 5836  00005a80  8fc1ff78	lw	r1,-136(r30)
 5837  00005a84  00220822	sub	r1,r1,r2
 5838  00005a88  afa10008	sw	8(r29),r1
 5839  00005a8c  afa2000c	sw	12(r29),r2
 5840  00005a90  0fffd6b0	jal	_MemoryCopySystemToUser
 5841  00005a94  54000000	nop; not filled.
 5842  00005a98  23bd0010	addi	r29,r29,#16
 5843  00005a9c  0bffff24	j	L206_LF3
 5844  00005aa0  54000000	nop; not filled.
 5845  00005aa4          	L207_LF3:
 5846  00005aa4  23bdfff8	addi	r29,r29,#-8
 5847  00005aa8  afa80000	sw	(r29),r8
 5848  00005aac  0fffbd48	jal	_FsClose
 5849  00005ab0  54000000	nop; not filled.
 5850  00005ab4  200b0100	addi	r11,r0,#256
 5851  00005ab8  acab012c	sw	300(r5),r11
 5852  00005abc  240bffe0	addui	r11,r0,#65504
 5853  00005ac0  acab009c	sw	156(r5),r11
 5854  00005ac4  23bdfff8	addi	r29,r29,#-8
 5855  00005ac8  afa40000	sw	(r29),r4
 5856  00005acc  23c10004	addi	r1,r30,#4
 5857  00005ad0  afa10004	sw	4(r29),r1
 5858  00005ad4  8cab009c	lw	r11,156(r5)
 5859  00005ad8  afab0008	sw	8(r29),r11
 5860  00005adc  200b0004	addi	r11,r0,#4
 5861  00005ae0  afab000c	sw	12(r29),r11
 5862  00005ae4  0fffd65c	jal	_MemoryCopySystemToUser
 5863  00005ae8  54000000	nop; not filled.
 5864  00005aec  8fcbff8c	lw	r11,-116(r30)
 5865  00005af0  acab0128	sw	296(r5),r11
 5866  00005af4  8c81000c	lw	r1,12(r4)
 5867  00005af8  34210200	ori	r1,r1,#512
 5868  00005afc  ac81000c	sw	12(r4),r1
 5869  00005b00  23bd0010	addi	r29,r29,#16
 5870  00005b04  0800003c	j	L211_LF3
 5871  00005b08  54000000	nop; not filled.
 5872  00005b0c          	L186_LF3:
 5873  00005b0c  3c0b0000	lhi	r11,((_ProcessExit_LF3)>>16)&0xffff
 5874  00005b10  256b717c	addui	r11,r11,(_ProcessExit_LF3)&0xffff
 5875  00005b14  acab00a4	sw	164(r5),r11
 5876  00005b18  8c810008	lw	r1,8(r4)
 5877  00005b1c  2421ffe0	addui	r1,r1,#65504
 5878  00005b20  aca1009c	sw	156(r5),r1
 5879  00005b24  8fcb0004	lw	r11,4(r30)
 5880  00005b28  ac2b0000	sw	(r1),r11
 5881  00005b2c  aca80128	sw	296(r5),r8
 5882  00005b30  200b0140	addi	r11,r0,#320
 5883  00005b34  acab012c	sw	300(r5),r11
 5884  00005b38  8c81000c	lw	r1,12(r4)
 5885  00005b3c  34210100	ori	r1,r1,#256
 5886  00005b40  ac81000c	sw	12(r4),r1
 5887  00005b44          	L211_LF3:
 5888  00005b44  23bdfff8	addi	r29,r29,#-8
 5889  00005b48  200b000f	addi	r11,r0,#15
 5890  00005b4c  afab0000	sw	(r29),r11
 5891  00005b50  0c004550	jal	_SetIntrs
 5892  00005b54  54000000	nop; not filled.
 5893  00005b58  23bd0008	addi	r29,r29,#8
 5894  00005b5c  3c030000	lhi	r3,((_runQueue_LF3)>>16)&0xffff
 5895  00005b60  2463fd00	addui	r3,r3,(_runQueue_LF3)&0xffff
 5896  00005b64  8c620004	lw	r2,4(r3)
 5897  00005b68  acc30008	sw	8(r6),r3
 5898  00005b6c  acc20004	sw	4(r6),r2
 5899  00005b70  8c4b0000	lw	r11,(r2)
 5900  00005b74  accb0000	sw	(r6),r11
 5901  00005b78  ac460000	sw	(r2),r6
 5902  00005b7c  8cc20000	lw	r2,(r6)
 5903  00005b80  ac460004	sw	4(r2),r6
 5904  00005b84  8c620008	lw	r2,8(r3)
 5905  00005b88  20420001	addi	r2,r2,#1
 5906  00005b8c  ac620008	sw	8(r3),r2
 5907  00005b90  23bdfff8	addi	r29,r29,#-8
 5908  00005b94  afa10000	sw	(r29),r1
 5909  00005b98  0c004508	jal	_SetIntrs
 5910  00005b9c  54000000	nop; not filled.
 5911  00005ba0  23bd0008	addi	r29,r29,#8
 5912  00005ba4  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 5913  00005ba8  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 5914  00005bac  8c210000	lw	r1,(r1)
 5915  00005bb0  64210000	snei	r1,r1,#0
 5916  00005bb4  14200090	bnez	r1,L217_LF3
 5917  00005bb8  54000000	nop; not filled.
 5918  00005bbc  23bdfff8	addi	r29,r29,#-8
 5919  00005bc0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5920  00005bc4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5921  00005bc8  afa20000	sw	(r29),r2
 5922  00005bcc  200b0070	addi	r11,r0,#112
 5923  00005bd0  afab0004	sw	4(r29),r11
 5924  00005bd4  0fffdf44	jal	_dindex
 5925  00005bd8  54000000	nop; not filled.
 5926  00005bdc  23bd0008	addi	r29,r29,#8
 5927  00005be0  64210000	snei	r1,r1,#0
 5928  00005be4  1420002c	bnez	r1,L219_LF3
 5929  00005be8  54000000	nop; not filled.
 5930  00005bec  23bdfff8	addi	r29,r29,#-8
 5931  00005bf0  afa20000	sw	(r29),r2
 5932  00005bf4  200b002b	addi	r11,r0,#43
 5933  00005bf8  afab0004	sw	4(r29),r11
 5934  00005bfc  0fffdf1c	jal	_dindex
 5935  00005c00  54000000	nop; not filled.
 5936  00005c04  23bd0008	addi	r29,r29,#8
 5937  00005c08  64210000	snei	r1,r1,#0
 5938  00005c0c  1020002c	beqz	r1,L218_LF3
 5939  00005c10  54000000	nop; not filled.
 5940  00005c14          	L219_LF3:
 5941  00005c14  23bdfff0	addi	r29,r29,#-16
 5942  00005c18  3c0b0000	lhi	r11,((LC31_LF3)>>16)&0xffff
 5943  00005c1c  256bf7f4	addui	r11,r11,(LC31_LF3)&0xffff
 5944  00005c20  afab0000	sw	(r29),r11
 5945  00005c24  afa40004	sw	4(r29),r4
 5946  00005c28  8c8b0000	lw	r11,(r4)
 5947  00005c2c  afab0008	sw	8(r29),r11
 5948  00005c30  0c0045c4	jal	_printf
 5949  00005c34  54000000	nop; not filled.
 5950  00005c38  23bd0010	addi	r29,r29,#16
 5951  00005c3c          	L218_LF3:
 5952  00005c3c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 5953  00005c40  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 5954  00005c44  ac240000	sw	(r1),r4
 5955  00005c48          	L217_LF3:
 5956  00005c48  23bdfff8	addi	r29,r29,#-8
 5957  00005c4c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5958  00005c50  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5959  00005c54  afa20000	sw	(r29),r2
 5960  00005c58  200b0070	addi	r11,r0,#112
 5961  00005c5c  afab0004	sw	4(r29),r11
 5962  00005c60  0fffdeb8	jal	_dindex
 5963  00005c64  54000000	nop; not filled.
 5964  00005c68  23bd0008	addi	r29,r29,#8
 5965  00005c6c  64210000	snei	r1,r1,#0
 5966  00005c70  1420002c	bnez	r1,L221_LF3
 5967  00005c74  54000000	nop; not filled.
 5968  00005c78  23bdfff8	addi	r29,r29,#-8
 5969  00005c7c  afa20000	sw	(r29),r2
 5970  00005c80  200b002b	addi	r11,r0,#43
 5971  00005c84  afab0004	sw	4(r29),r11
 5972  00005c88  0fffde90	jal	_dindex
 5973  00005c8c  54000000	nop; not filled.
 5974  00005c90  23bd0008	addi	r29,r29,#8
 5975  00005c94  64210000	snei	r1,r1,#0
 5976  00005c98  10200024	beqz	r1,L220_LF3
 5977  00005c9c  54000000	nop; not filled.
 5978  00005ca0          	L221_LF3:
 5979  00005ca0  23bdfff8	addi	r29,r29,#-8
 5980  00005ca4  3c0b0000	lhi	r11,((LC32_LF3)>>16)&0xffff
 5981  00005ca8  256bf820	addui	r11,r11,(LC32_LF3)&0xffff
 5982  00005cac  afab0000	sw	(r29),r11
 5983  00005cb0  afaa0004	sw	4(r29),r10
 5984  00005cb4  0c004540	jal	_printf
 5985  00005cb8  54000000	nop; not filled.
 5986  00005cbc  23bd0008	addi	r29,r29,#8
 5987  00005cc0          	L220_LF3:
 5988  00005cc0  3c0b0000	lhi	r11,((_pcbs_LF3)>>16)&0xffff
 5989  00005cc4  256bfd24	addui	r11,r11,(_pcbs_LF3)&0xffff
 5990  00005cc8  008b1022	sub	r2,r4,r11
 5991  00005ccc  3c01a4fa	lhi	r1,#-23302
 5992  00005cd0  24214fa5	addui	r1,r1,#20389
 5993  00005cd4  00400035	movi2fp	f0,r2
 5994  00005cd8  00200835	movi2fp	f1,r1
 5995  00005cdc  0401000e	mult	f0,f0,f1
 5996  00005ce0  00000834	movfp2i	r1,f0
 5997  00005ce4  5c210002	srai	r1,r1,#0x2
 5998  00005ce8          	L222_LF3:
 5999  00005ce8  8fa20000	lw	r2,0(r29)
 6000  00005cec  8fa30004	lw	r3,4(r29)
 6001  00005cf0  8fa40008	lw	r4,8(r29)
 6002  00005cf4  8fa5000c	lw	r5,12(r29)
 6003  00005cf8  8fa60010	lw	r6,16(r29)
 6004  00005cfc  8fa70014	lw	r7,20(r29)
 6005  00005d00  8fa80018	lw	r8,24(r29)
 6006  00005d04  8fa9001c	lw	r9,28(r29)
 6007  00005d08  8faa0020	lw	r10,32(r29)
 6008  00005d0c  8fab0024	lw	r11,36(r29)
 6009  00005d10  8fdffff8	lw	r31,-8(r30)
 6010  00005d14  001ee820	add	r29,r0,r30
 6011  00005d18  8fdefffc	lw	r30,-4(r30)
 6012  00005d1c  4be00000	jr	r31
 6013  00005d20  54000000	nop
 6014  00005d24          	.endproc _ProcessFork
 6015  00005d24          	.data
 6016  0000f83a          	.align 2
 6017  0000f83c          	LC33_LF3:
 6018  0000f83c  50726f63	.ascii "ProcessGetCodeInfo: open of %s failed (%d).\n\000"
 6018  0000f840  65737347	
 6018  0000f844  6574436f	
 6018  0000f848  6465496e	
 6018  0000f84c  666f3a20	
 6018  0000f850  6f70656e	
 6018  0000f854  206f6620	
 6018  0000f858  25732066	
 6018  0000f85c  61696c65	
 6018  0000f860  64202825	
 6018  0000f864  64292e0a	
 6018  0000f868  00      	
 6019  0000f869          	.align 2
 6020  0000f86c          	LC34_LF3:
 6021  0000f86c  46696c65	.ascii "File descriptor is now %d.\n\000"
 6021  0000f870  20646573	
 6021  0000f874  63726970	
 6021  0000f878  746f7220	
 6021  0000f87c  6973206e	
 6021  0000f880  6f772025	
 6021  0000f884  642e0a00	
 6022  0000f888          	.align 2
 6023  0000f888          	LC35_LF3:
 6024  0000f888  50726f63	.ascii "ProcessGetCodeInfo: read got %d (not %d) bytes from %s\n\000"
 6024  0000f88c  65737347	
 6024  0000f890  6574436f	
 6024  0000f894  6465496e	
 6024  0000f898  666f3a20	
 6024  0000f89c  72656164	
 6024  0000f8a0  20676f74	
 6024  0000f8a4  20256420	
 6024  0000f8a8  286e6f74	
 6024  0000f8ac  20256429	
 6024  0000f8b0  20627974	
 6024  0000f8b4  65732066	
 6024  0000f8b8  726f6d20	
 6024  0000f8bc  25730a00	
 6025  0000f8c0          	.align 2
 6026  0000f8c0          	LC36_LF3:
 6027  0000f8c0  73746172	.ascii "start:\000"
 6027  0000f8c4  743a00  	
 6028  0000f8c7          	.align 2
 6029  0000f8c8          	LC37_LF3:
 6030  0000f8c8  50726f63	.ascii "ProcessGetCodeInfo: %s missing start line (not a DLX executable?)\n\000"
 6030  0000f8cc  65737347	
 6030  0000f8d0  6574436f	
 6030  0000f8d4  6465496e	
 6030  0000f8d8  666f3a20	
 6030  0000f8dc  2573206d	
 6030  0000f8e0  69737369	
 6030  0000f8e4  6e672073	
 6030  0000f8e8  74617274	
 6030  0000f8ec  206c696e	
 6030  0000f8f0  6520286e	
 6030  0000f8f4  6f742061	
 6030  0000f8f8  20444c58	
 6030  0000f8fc  20657865	
 6030  0000f900  63757461	
 6030  0000f904  626c653f	
 6030  0000f908  290a00  	
 6031  0000f90b          	.text
 6032  00005d24          	.align 2
 6033  00005d24          	.proc _ProcessGetCodeInfo
 6034  00005d24          	.global _ProcessGetCodeInfo
 6035  00005d24          	_ProcessGetCodeInfo:
 6036                      ;  Function 'ProcessGetCodeInfo'; 112 bytes of locals, 11 regs to save.
 6037  00005d24  afbefffc	sw	-4(r29),r30; push fp
 6038  00005d28  001df020	add	r30,r0,r29; fp = sp
 6039  00005d2c  afbffff8	sw	-8(r29),r31; push ret addr
 6040  00005d30  2fbd00a8	subui	r29,r29,#168; alloc local storage
 6041  00005d34  afa20000	sw	0(r29),r2
 6042  00005d38  afa30004	sw	4(r29),r3
 6043  00005d3c  afa40008	sw	8(r29),r4
 6044  00005d40  afa5000c	sw	12(r29),r5
 6045  00005d44  afa60010	sw	16(r29),r6
 6046  00005d48  afa70014	sw	20(r29),r7
 6047  00005d4c  afa80018	sw	24(r29),r8
 6048  00005d50  afa9001c	sw	28(r29),r9
 6049  00005d54  afaa0020	sw	32(r29),r10
 6050  00005d58  afab0024	sw	36(r29),r11
 6051  00005d5c  afac0028	sw	40(r29),r12
 6052  00005d60  8fc60000	lw	r6,(r30)
 6053  00005d64  8fc70004	lw	r7,4(r30)
 6054  00005d68  8fc80008	lw	r8,8(r30)
 6055  00005d6c  8fc9000c	lw	r9,12(r30)
 6056  00005d70  8fca0010	lw	r10,16(r30)
 6057  00005d74  8fcb0014	lw	r11,20(r30)
 6058  00005d78  23bdfff8	addi	r29,r29,#-8
 6059  00005d7c  afa60000	sw	(r29),r6
 6060  00005d80  200c0001	addi	r12,r0,#1
 6061  00005d84  afac0004	sw	4(r29),r12
 6062  00005d88  0fffb710	jal	_FsOpen
 6063  00005d8c  54000000	nop; not filled.
 6064  00005d90  00011820	add	r3,r0,r1
 6065  00005d94  23bd0008	addi	r29,r29,#8
 6066  00005d98  68610000	slti	r1,r3,#0
 6067  00005d9c  10200088	beqz	r1,L239_LF3
 6068  00005da0  54000000	nop; not filled.
 6069  00005da4  23bdfff8	addi	r29,r29,#-8
 6070  00005da8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6071  00005dac  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6072  00005db0  afa20000	sw	(r29),r2
 6073  00005db4  200c0066	addi	r12,r0,#102
 6074  00005db8  afac0004	sw	4(r29),r12
 6075  00005dbc  0fffdd5c	jal	_dindex
 6076  00005dc0  54000000	nop; not filled.
 6077  00005dc4  23bd0008	addi	r29,r29,#8
 6078  00005dc8  64210000	snei	r1,r1,#0
 6079  00005dcc  1420002c	bnez	r1,L241_LF3
 6080  00005dd0  54000000	nop; not filled.
 6081  00005dd4  23bdfff8	addi	r29,r29,#-8
 6082  00005dd8  afa20000	sw	(r29),r2
 6083  00005ddc  200c002b	addi	r12,r0,#43
 6084  00005de0  afac0004	sw	4(r29),r12
 6085  00005de4  0fffdd34	jal	_dindex
 6086  00005de8  54000000	nop; not filled.
 6087  00005dec  23bd0008	addi	r29,r29,#8
 6088  00005df0  64210000	snei	r1,r1,#0
 6089  00005df4  10200224	beqz	r1,L248_LF3
 6090  00005df8  54000000	nop; not filled.
 6091  00005dfc          	L241_LF3:
 6092  00005dfc  23bdfff0	addi	r29,r29,#-16
 6093  00005e00  3c0c0000	lhi	r12,((LC33_LF3)>>16)&0xffff
 6094  00005e04  258cf83c	addui	r12,r12,(LC33_LF3)&0xffff
 6095  00005e08  afac0000	sw	(r29),r12
 6096  00005e0c  afa60004	sw	4(r29),r6
 6097  00005e10  afa30008	sw	8(r29),r3
 6098  00005e14  0c0043e0	jal	_printf
 6099  00005e18  54000000	nop; not filled.
 6100  00005e1c  23bd0010	addi	r29,r29,#16
 6101  00005e20  080001f8	j	L248_LF3
 6102  00005e24  54000000	nop; not filled.
 6103  00005e28          	L239_LF3:
 6104  00005e28  23bdfff8	addi	r29,r29,#-8
 6105  00005e2c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6106  00005e30  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6107  00005e34  afa20000	sw	(r29),r2
 6108  00005e38  200c0066	addi	r12,r0,#102
 6109  00005e3c  afac0004	sw	4(r29),r12
 6110  00005e40  0fffdcd8	jal	_dindex
 6111  00005e44  54000000	nop; not filled.
 6112  00005e48  23bd0008	addi	r29,r29,#8
 6113  00005e4c  64210000	snei	r1,r1,#0
 6114  00005e50  1420002c	bnez	r1,L243_LF3
 6115  00005e54  54000000	nop; not filled.
 6116  00005e58  23bdfff8	addi	r29,r29,#-8
 6117  00005e5c  afa20000	sw	(r29),r2
 6118  00005e60  200c002b	addi	r12,r0,#43
 6119  00005e64  afac0004	sw	4(r29),r12
 6120  00005e68  0fffdcb0	jal	_dindex
 6121  00005e6c  54000000	nop; not filled.
 6122  00005e70  23bd0008	addi	r29,r29,#8
 6123  00005e74  64210000	snei	r1,r1,#0
 6124  00005e78  10200024	beqz	r1,L242_LF3
 6125  00005e7c  54000000	nop; not filled.
 6126  00005e80          	L243_LF3:
 6127  00005e80  23bdfff8	addi	r29,r29,#-8
 6128  00005e84  3c0c0000	lhi	r12,((LC34_LF3)>>16)&0xffff
 6129  00005e88  258cf86c	addui	r12,r12,(LC34_LF3)&0xffff
 6130  00005e8c  afac0000	sw	(r29),r12
 6131  00005e90  afa30004	sw	4(r29),r3
 6132  00005e94  0c004360	jal	_printf
 6133  00005e98  54000000	nop; not filled.
 6134  00005e9c  23bd0008	addi	r29,r29,#8
 6135  00005ea0          	L242_LF3:
 6136  00005ea0  23bdfff0	addi	r29,r29,#-16
 6137  00005ea4  afa30000	sw	(r29),r3
 6138  00005ea8  23c4ff90	addi	r4,r30,#-112
 6139  00005eac  afa40004	sw	4(r29),r4
 6140  00005eb0  200c0064	addi	r12,r0,#100
 6141  00005eb4  afac0008	sw	8(r29),r12
 6142  00005eb8  0fffba44	jal	_FsRead
 6143  00005ebc  54000000	nop; not filled.
 6144  00005ec0  00012820	add	r5,r0,r1
 6145  00005ec4  23bd0010	addi	r29,r29,#16
 6146  00005ec8  64a10064	snei	r1,r5,#100
 6147  00005ecc  102000a8	beqz	r1,L244_LF3
 6148  00005ed0  54000000	nop; not filled.
 6149  00005ed4  23bdfff8	addi	r29,r29,#-8
 6150  00005ed8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6151  00005edc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6152  00005ee0  afa20000	sw	(r29),r2
 6153  00005ee4  200c0066	addi	r12,r0,#102
 6154  00005ee8  afac0004	sw	4(r29),r12
 6155  00005eec  0fffdc2c	jal	_dindex
 6156  00005ef0  54000000	nop; not filled.
 6157  00005ef4  23bd0008	addi	r29,r29,#8
 6158  00005ef8  64210000	snei	r1,r1,#0
 6159  00005efc  1420002c	bnez	r1,L246_LF3
 6160  00005f00  54000000	nop; not filled.
 6161  00005f04  23bdfff8	addi	r29,r29,#-8
 6162  00005f08  afa20000	sw	(r29),r2
 6163  00005f0c  200c002b	addi	r12,r0,#43
 6164  00005f10  afac0004	sw	4(r29),r12
 6165  00005f14  0fffdc04	jal	_dindex
 6166  00005f18  54000000	nop; not filled.
 6167  00005f1c  23bd0008	addi	r29,r29,#8
 6168  00005f20  64210000	snei	r1,r1,#0
 6169  00005f24  10200030	beqz	r1,L245_LF3
 6170  00005f28  54000000	nop; not filled.
 6171  00005f2c          	L246_LF3:
 6172  00005f2c  23bdfff0	addi	r29,r29,#-16
 6173  00005f30  3c0c0000	lhi	r12,((LC35_LF3)>>16)&0xffff
 6174  00005f34  258cf888	addui	r12,r12,(LC35_LF3)&0xffff
 6175  00005f38  afac0000	sw	(r29),r12
 6176  00005f3c  afa50004	sw	4(r29),r5
 6177  00005f40  200c0064	addi	r12,r0,#100
 6178  00005f44  afac0008	sw	8(r29),r12
 6179  00005f48  afa6000c	sw	12(r29),r6
 6180  00005f4c  0c0042a8	jal	_printf
 6181  00005f50  54000000	nop; not filled.
 6182  00005f54  23bd0010	addi	r29,r29,#16
 6183  00005f58          	L245_LF3:
 6184  00005f58  23bdfff8	addi	r29,r29,#-8
 6185  00005f5c  afa30000	sw	(r29),r3
 6186  00005f60  0fffb894	jal	_FsClose
 6187  00005f64  54000000	nop; not filled.
 6188  00005f68  2001ffff	addi	r1,r0,#-1
 6189  00005f6c  23bd0008	addi	r29,r29,#8
 6190  00005f70  080001d0	j	L238_LF3
 6191  00005f74  54000000	nop; not filled.
 6192  00005f78          	L244_LF3:
 6193  00005f78  23bdfff8	addi	r29,r29,#-8
 6194  00005f7c  afa40000	sw	(r29),r4
 6195  00005f80  3c010000	lhi	r1,((LC36_LF3)>>16)&0xffff
 6196  00005f84  2421f8c0	addui	r1,r1,(LC36_LF3)&0xffff
 6197  00005f88  afa10004	sw	4(r29),r1
 6198  00005f8c  0fffd974	jal	_dstrstr
 6199  00005f90  54000000	nop; not filled.
 6200  00005f94  23bd0008	addi	r29,r29,#8
 6201  00005f98  64210000	snei	r1,r1,#0
 6202  00005f9c  14200088	bnez	r1,L247_LF3
 6203  00005fa0  54000000	nop; not filled.
 6204  00005fa4  23bdfff8	addi	r29,r29,#-8
 6205  00005fa8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6206  00005fac  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6207  00005fb0  afa20000	sw	(r29),r2
 6208  00005fb4  200c0066	addi	r12,r0,#102
 6209  00005fb8  afac0004	sw	4(r29),r12
 6210  00005fbc  0fffdb5c	jal	_dindex
 6211  00005fc0  54000000	nop; not filled.
 6212  00005fc4  23bd0008	addi	r29,r29,#8
 6213  00005fc8  64210000	snei	r1,r1,#0
 6214  00005fcc  1420002c	bnez	r1,L249_LF3
 6215  00005fd0  54000000	nop; not filled.
 6216  00005fd4  23bdfff8	addi	r29,r29,#-8
 6217  00005fd8  afa20000	sw	(r29),r2
 6218  00005fdc  200c002b	addi	r12,r0,#43
 6219  00005fe0  afac0004	sw	4(r29),r12
 6220  00005fe4  0fffdb34	jal	_dindex
 6221  00005fe8  54000000	nop; not filled.
 6222  00005fec  23bd0008	addi	r29,r29,#8
 6223  00005ff0  64210000	snei	r1,r1,#0
 6224  00005ff4  10200024	beqz	r1,L248_LF3
 6225  00005ff8  54000000	nop; not filled.
 6226  00005ffc          	L249_LF3:
 6227  00005ffc  23bdfff8	addi	r29,r29,#-8
 6228  00006000  3c0c0000	lhi	r12,((LC37_LF3)>>16)&0xffff
 6229  00006004  258cf8c8	addui	r12,r12,(LC37_LF3)&0xffff
 6230  00006008  afac0000	sw	(r29),r12
 6231  0000600c  afa60004	sw	4(r29),r6
 6232  00006010  0c0041e4	jal	_printf
 6233  00006014  54000000	nop; not filled.
 6234  00006018  23bd0008	addi	r29,r29,#8
 6235  0000601c          	L248_LF3:
 6236  0000601c  2001ffff	addi	r1,r0,#-1
 6237  00006020  08000120	j	L238_LF3
 6238  00006024  54000000	nop; not filled.
 6239  00006028          	L247_LF3:
 6240  00006028  23bdfff8	addi	r29,r29,#-8
 6241  0000602c  afa40000	sw	(r29),r4
 6242  00006030  200c003a	addi	r12,r0,#58
 6243  00006034  afac0004	sw	4(r29),r12
 6244  00006038  0fffdae0	jal	_dindex
 6245  0000603c  54000000	nop; not filled.
 6246  00006040  20210001	addi	r1,r1,#1
 6247  00006044  afc1ff8c	sw	-116(r30),r1
 6248  00006048  23bdfff8	addi	r29,r29,#-8
 6249  0000604c  afa10000	sw	(r29),r1
 6250  00006050  23c2ff8c	addi	r2,r30,#-116
 6251  00006054  afa20004	sw	4(r29),r2
 6252  00006058  200c0010	addi	r12,r0,#16
 6253  0000605c  afac0008	sw	8(r29),r12
 6254  00006060  0fffdc40	jal	_dstrtol
 6255  00006064  54000000	nop; not filled.
 6256  00006068  ace10000	sw	(r7),r1
 6257  0000606c  8fccff8c	lw	r12,-116(r30)
 6258  00006070  afac0000	sw	(r29),r12
 6259  00006074  afa20004	sw	4(r29),r2
 6260  00006078  200c0010	addi	r12,r0,#16
 6261  0000607c  afac0008	sw	8(r29),r12
 6262  00006080  0fffdc20	jal	_dstrtol
 6263  00006084  54000000	nop; not filled.
 6264  00006088  8fccff8c	lw	r12,-116(r30)
 6265  0000608c  afac0000	sw	(r29),r12
 6266  00006090  afa20004	sw	4(r29),r2
 6267  00006094  200c0010	addi	r12,r0,#16
 6268  00006098  afac0008	sw	8(r29),r12
 6269  0000609c  0fffdc04	jal	_dstrtol
 6270  000060a0  54000000	nop; not filled.
 6271  000060a4  ad010000	sw	(r8),r1
 6272  000060a8  8fccff8c	lw	r12,-116(r30)
 6273  000060ac  afac0000	sw	(r29),r12
 6274  000060b0  afa20004	sw	4(r29),r2
 6275  000060b4  200c0010	addi	r12,r0,#16
 6276  000060b8  afac0008	sw	8(r29),r12
 6277  000060bc  0fffdbe4	jal	_dstrtol
 6278  000060c0  54000000	nop; not filled.
 6279  000060c4  ad210000	sw	(r9),r1
 6280  000060c8  8fccff8c	lw	r12,-116(r30)
 6281  000060cc  afac0000	sw	(r29),r12
 6282  000060d0  afa20004	sw	4(r29),r2
 6283  000060d4  200c0010	addi	r12,r0,#16
 6284  000060d8  afac0008	sw	8(r29),r12
 6285  000060dc  0fffdbc4	jal	_dstrtol
 6286  000060e0  54000000	nop; not filled.
 6287  000060e4  ad410000	sw	(r10),r1
 6288  000060e8  8fccff8c	lw	r12,-116(r30)
 6289  000060ec  afac0000	sw	(r29),r12
 6290  000060f0  afa20004	sw	4(r29),r2
 6291  000060f4  200c0010	addi	r12,r0,#16
 6292  000060f8  afac0008	sw	8(r29),r12
 6293  000060fc  0fffdba4	jal	_dstrtol
 6294  00006100  54000000	nop; not filled.
 6295  00006104  ad610000	sw	(r11),r1
 6296  00006108  afa40000	sw	(r29),r4
 6297  0000610c  200c000a	addi	r12,r0,#10
 6298  00006110  afac0004	sw	4(r29),r12
 6299  00006114  0fffda04	jal	_dindex
 6300  00006118  54000000	nop; not filled.
 6301  0000611c  23c2ff8f	addi	r2,r30,#-113
 6302  00006120  00220822	sub	r1,r1,r2
 6303  00006124  afa30000	sw	(r29),r3
 6304  00006128  afa10004	sw	4(r29),r1
 6305  0000612c  200c0000	addi	r12,r0,#0
 6306  00006130  afac0008	sw	8(r29),r12
 6307  00006134  0fffb9c0	jal	_FsSeek
 6308  00006138  54000000	nop; not filled.
 6309  0000613c  00030820	add	r1,r0,r3
 6310  00006140  23bd0010	addi	r29,r29,#16
 6311  00006144          	L238_LF3:
 6312  00006144  8fa20000	lw	r2,0(r29)
 6313  00006148  8fa30004	lw	r3,4(r29)
 6314  0000614c  8fa40008	lw	r4,8(r29)
 6315  00006150  8fa5000c	lw	r5,12(r29)
 6316  00006154  8fa60010	lw	r6,16(r29)
 6317  00006158  8fa70014	lw	r7,20(r29)
 6318  0000615c  8fa80018	lw	r8,24(r29)
 6319  00006160  8fa9001c	lw	r9,28(r29)
 6320  00006164  8faa0020	lw	r10,32(r29)
 6321  00006168  8fab0024	lw	r11,36(r29)
 6322  0000616c  8fac0028	lw	r12,40(r29)
 6323  00006170  8fdffff8	lw	r31,-8(r30)
 6324  00006174  001ee820	add	r29,r0,r30
 6325  00006178  8fdefffc	lw	r30,-4(r30)
 6326  0000617c  4be00000	jr	r31
 6327  00006180  54000000	nop
 6328  00006184          	.endproc _ProcessGetCodeInfo
 6329  00006184          	.data
 6330  0000f90b          	.align 2
 6331  0000f90c          	LC38_LF3:
 6332  0000f90c  476f7420	.ascii "Got %d bytes at offset %d ...\000"
 6332  0000f910  25642062	
 6332  0000f914  79746573	
 6332  0000f918  20617420	
 6332  0000f91c  6f666673	
 6332  0000f920  65742025	
 6332  0000f924  64202e2e	
 6332  0000f928  2e00    	
 6333  0000f92a          	.align 2
 6334  0000f92c          	LC39_LF3:
 6335  0000f92c  20746572	.ascii " terminated at %d.\n\000"
 6335  0000f930  6d696e61	
 6335  0000f934  74656420	
 6335  0000f938  61742025	
 6335  0000f93c  642e0a00	
 6336  0000f940          	.align 2
 6337  0000f940          	LC40_LF3:
 6338  0000f940  42756666	.ascii "Buffer is \'%s\'\n\000"
 6338  0000f944  65722069	
 6338  0000f948  73202725	
 6338  0000f94c  73270a00	
 6339  0000f950          	.align 2
 6340  0000f950          	LC41_LF3:
 6341  0000f950  4e657720	.ascii "New address is 0x%x.\n\000"
 6341  0000f954  61646472	
 6341  0000f958  65737320	
 6341  0000f95c  69732030	
 6341  0000f960  7825782e	
 6341  0000f964  0a00    	
 6342  0000f966          	.align 2
 6343  0000f968          	LC42_LF3:
 6344  0000f968  5365656b	.ascii "Seeking to %d and returning %d bytes!\n\000"
 6344  0000f96c  696e6720	
 6344  0000f970  746f2025	
 6344  0000f974  6420616e	
 6344  0000f978  64207265	
 6344  0000f97c  7475726e	
 6344  0000f980  696e6720	
 6344  0000f984  25642062	
 6344  0000f988  79746573	
 6344  0000f98c  210a00  	
 6345  0000f98f          	.text
 6346  00006184          	.align 2
 6347  00006184          	.proc _ProcessGetFromFile
 6348  00006184          	.global _ProcessGetFromFile
 6349  00006184          	_ProcessGetFromFile:
 6350                      ;  Function 'ProcessGetFromFile'; 216 bytes of locals, 11 regs to save.
 6351  00006184  afbefffc	sw	-4(r29),r30; push fp
 6352  00006188  001df020	add	r30,r0,r29; fp = sp
 6353  0000618c  afbffff8	sw	-8(r29),r31; push ret addr
 6354  00006190  2fbd0110	subui	r29,r29,#272; alloc local storage
 6355  00006194  afa20000	sw	0(r29),r2
 6356  00006198  afa30004	sw	4(r29),r3
 6357  0000619c  afa40008	sw	8(r29),r4
 6358  000061a0  afa5000c	sw	12(r29),r5
 6359  000061a4  afa60010	sw	16(r29),r6
 6360  000061a8  afa70014	sw	20(r29),r7
 6361  000061ac  afa80018	sw	24(r29),r8
 6362  000061b0  afa9001c	sw	28(r29),r9
 6363  000061b4  afaa0020	sw	32(r29),r10
 6364  000061b8  afab0024	sw	36(r29),r11
 6365  000061bc  afac0028	sw	40(r29),r12
 6366  000061c0  8fca0000	lw	r10,(r30)
 6367  000061c4  8fc70008	lw	r7,8(r30)
 6368  000061c8  8fc2000c	lw	r2,12(r30)
 6369  000061cc  8fcb0004	lw	r11,4(r30)
 6370  000061d0  23c3ff28	addi	r3,r30,#-216
 6371  000061d4  afc3ff24	sw	-220(r30),r3
 6372  000061d8  23bdfff0	addi	r29,r29,#-16
 6373  000061dc  afaa0000	sw	(r29),r10
 6374  000061e0  200c0000	addi	r12,r0,#0
 6375  000061e4  afac0004	sw	4(r29),r12
 6376  000061e8  200c0001	addi	r12,r0,#1
 6377  000061ec  afac0008	sw	8(r29),r12
 6378  000061f0  0fffb904	jal	_FsSeek
 6379  000061f4  54000000	nop; not filled.
 6380  000061f8  00014820	add	r9,r0,r1
 6381  000061fc  50420001	slli	r2,r2,#0x1
 6382  00006200  23bd0010	addi	r29,r29,#16
 6383  00006204  6c4100c8	sgtui	r1,r2,#200
 6384  00006208  10200008	beqz	r1,L252_LF3
 6385  0000620c  54000000	nop; not filled.
 6386  00006210  200200c8	addi	r2,r0,#200
 6387  00006214          	L252_LF3:
 6388  00006214  23bdfff0	addi	r29,r29,#-16
 6389  00006218  afaa0000	sw	(r29),r10
 6390  0000621c  afa30004	sw	4(r29),r3
 6391  00006220  afa20008	sw	8(r29),r2
 6392  00006224  0fffb6d8	jal	_FsRead
 6393  00006228  54000000	nop; not filled.
 6394  0000622c  00012820	add	r5,r0,r1
 6395  00006230  23bd0010	addi	r29,r29,#16
 6396  00006234  70a10000	slei	r1,r5,#0
 6397  00006238  10200010	beqz	r1,L253_LF3
 6398  0000623c  54000000	nop; not filled.
 6399  00006240  20010000	addi	r1,r0,#0
 6400  00006244  08000594	j	L307_LF3
 6401  00006248  54000000	nop; not filled.
 6402  0000624c          	L253_LF3:
 6403  0000624c  23bdfff8	addi	r29,r29,#-8
 6404  00006250  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6405  00006254  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6406  00006258  afa20000	sw	(r29),r2
 6407  0000625c  200c0066	addi	r12,r0,#102
 6408  00006260  afac0004	sw	4(r29),r12
 6409  00006264  0fffd8b4	jal	_dindex
 6410  00006268  54000000	nop; not filled.
 6411  0000626c  23bd0008	addi	r29,r29,#8
 6412  00006270  64210000	snei	r1,r1,#0
 6413  00006274  1420002c	bnez	r1,L255_LF3
 6414  00006278  54000000	nop; not filled.
 6415  0000627c  23bdfff8	addi	r29,r29,#-8
 6416  00006280  afa20000	sw	(r29),r2
 6417  00006284  200c002b	addi	r12,r0,#43
 6418  00006288  afac0004	sw	4(r29),r12
 6419  0000628c  0fffd88c	jal	_dindex
 6420  00006290  54000000	nop; not filled.
 6421  00006294  23bd0008	addi	r29,r29,#8
 6422  00006298  64210000	snei	r1,r1,#0
 6423  0000629c  10200028	beqz	r1,L254_LF3
 6424  000062a0  54000000	nop; not filled.
 6425  000062a4          	L255_LF3:
 6426  000062a4  23bdfff0	addi	r29,r29,#-16
 6427  000062a8  3c0c0000	lhi	r12,((LC38_LF3)>>16)&0xffff
 6428  000062ac  258cf90c	addui	r12,r12,(LC38_LF3)&0xffff
 6429  000062b0  afac0000	sw	(r29),r12
 6430  000062b4  afa50004	sw	4(r29),r5
 6431  000062b8  afa90008	sw	8(r29),r9
 6432  000062bc  0c003f38	jal	_printf
 6433  000062c0  54000000	nop; not filled.
 6434  000062c4  23bd0010	addi	r29,r29,#16
 6435  000062c8          	L254_LF3:
 6436  000062c8  20a5ffff	addi	r5,r5,#-1
 6437  000062cc  23c1ff28	addi	r1,r30,#-216
 6438  000062d0  00251020	add	r2,r1,r5
 6439  000062d4  0800000c	j	L310_LF3
 6440  000062d8  54000000	nop; not filled.
 6441  000062dc          	L256_LF3:
 6442  000062dc  2042ffff	addi	r2,r2,#-1
 6443  000062e0  20a5ffff	addi	r5,r5,#-1
 6444  000062e4          	L310_LF3:
 6445  000062e4  90410000	lbu	r1,(r2)
 6446  000062e8  6421000a	snei	r1,r1,#10
 6447  000062ec  1420ffec	bnez	r1,L256_LF3
 6448  000062f0  54000000	nop; not filled.
 6449  000062f4  23c1ff29	addi	r1,r30,#-215
 6450  000062f8  00250820	add	r1,r1,r5
 6451  000062fc  200c005a	addi	r12,r0,(#0x5a)&0xff
 6452  00006300  a02c0000	sb	(r1),r12
 6453  00006304  23c1ff2a	addi	r1,r30,#-214
 6454  00006308  00250820	add	r1,r1,r5
 6455  0000630c  200c0000	addi	r12,r0,(#0x0)&0xff
 6456  00006310  a02c0000	sb	(r1),r12
 6457  00006314  23bdfff8	addi	r29,r29,#-8
 6458  00006318  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6459  0000631c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6460  00006320  afa20000	sw	(r29),r2
 6461  00006324  200c0066	addi	r12,r0,#102
 6462  00006328  afac0004	sw	4(r29),r12
 6463  0000632c  0fffd7ec	jal	_dindex
 6464  00006330  54000000	nop; not filled.
 6465  00006334  23bd0008	addi	r29,r29,#8
 6466  00006338  64210000	snei	r1,r1,#0
 6467  0000633c  1420002c	bnez	r1,L261_LF3
 6468  00006340  54000000	nop; not filled.
 6469  00006344  23bdfff8	addi	r29,r29,#-8
 6470  00006348  afa20000	sw	(r29),r2
 6471  0000634c  200c002b	addi	r12,r0,#43
 6472  00006350  afac0004	sw	4(r29),r12
 6473  00006354  0fffd7c4	jal	_dindex
 6474  00006358  54000000	nop; not filled.
 6475  0000635c  23bd0008	addi	r29,r29,#8
 6476  00006360  64210000	snei	r1,r1,#0
 6477  00006364  10200024	beqz	r1,L260_LF3
 6478  00006368  54000000	nop; not filled.
 6479  0000636c          	L261_LF3:
 6480  0000636c  23bdfff8	addi	r29,r29,#-8
 6481  00006370  3c0c0000	lhi	r12,((LC39_LF3)>>16)&0xffff
 6482  00006374  258cf92c	addui	r12,r12,(LC39_LF3)&0xffff
 6483  00006378  afac0000	sw	(r29),r12
 6484  0000637c  afa50004	sw	4(r29),r5
 6485  00006380  0c003e74	jal	_printf
 6486  00006384  54000000	nop; not filled.
 6487  00006388  23bd0008	addi	r29,r29,#8
 6488  0000638c          	L260_LF3:
 6489  0000638c  23bdfff8	addi	r29,r29,#-8
 6490  00006390  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6491  00006394  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6492  00006398  afa20000	sw	(r29),r2
 6493  0000639c  200c0066	addi	r12,r0,#102
 6494  000063a0  afac0004	sw	4(r29),r12
 6495  000063a4  0fffd774	jal	_dindex
 6496  000063a8  54000000	nop; not filled.
 6497  000063ac  23bd0008	addi	r29,r29,#8
 6498  000063b0  64210000	snei	r1,r1,#0
 6499  000063b4  1420002c	bnez	r1,L263_LF3
 6500  000063b8  54000000	nop; not filled.
 6501  000063bc  23bdfff8	addi	r29,r29,#-8
 6502  000063c0  afa20000	sw	(r29),r2
 6503  000063c4  200c002b	addi	r12,r0,#43
 6504  000063c8  afac0004	sw	4(r29),r12
 6505  000063cc  0fffd74c	jal	_dindex
 6506  000063d0  54000000	nop; not filled.
 6507  000063d4  23bd0008	addi	r29,r29,#8
 6508  000063d8  64210000	snei	r1,r1,#0
 6509  000063dc  10200028	beqz	r1,L262_LF3
 6510  000063e0  54000000	nop; not filled.
 6511  000063e4          	L263_LF3:
 6512  000063e4  23bdfff8	addi	r29,r29,#-8
 6513  000063e8  3c0c0000	lhi	r12,((LC40_LF3)>>16)&0xffff
 6514  000063ec  258cf940	addui	r12,r12,(LC40_LF3)&0xffff
 6515  000063f0  afac0000	sw	(r29),r12
 6516  000063f4  23c1ff28	addi	r1,r30,#-216
 6517  000063f8  afa10004	sw	4(r29),r1
 6518  000063fc  0c003df8	jal	_printf
 6519  00006400  54000000	nop; not filled.
 6520  00006404  23bd0008	addi	r29,r29,#8
 6521  00006408          	L262_LF3:
 6522  00006408  20050000	addi	r5,r0,#0
 6523  0000640c  3c080000	lhi	r8,((_debugstr)>>16)&0xffff
 6524  00006410  2508fc26	addui	r8,r8,(_debugstr)&0xffff
 6525  00006414          	L264_LF3:
 6526  00006414  23bdfff8	addi	r29,r29,#-8
 6527  00006418  8fccff24	lw	r12,-220(r30)
 6528  0000641c  afac0000	sw	(r29),r12
 6529  00006420  200c005a	addi	r12,r0,#90
 6530  00006424  afac0004	sw	4(r29),r12
 6531  00006428  0fffd6f0	jal	_dindex
 6532  0000642c  54000000	nop; not filled.
 6533  00006430  23bd0008	addi	r29,r29,#8
 6534  00006434  64210000	snei	r1,r1,#0
 6535  00006438  102002ec	beqz	r1,L265_LF3
 6536  0000643c  54000000	nop; not filled.
 6537  00006440  23bdfff8	addi	r29,r29,#-8
 6538  00006444  8fccff24	lw	r12,-220(r30)
 6539  00006448  afac0000	sw	(r29),r12
 6540  0000644c  200c003a	addi	r12,r0,#58
 6541  00006450  afac0004	sw	4(r29),r12
 6542  00006454  0fffd6c4	jal	_dindex
 6543  00006458  54000000	nop; not filled.
 6544  0000645c  23bd0008	addi	r29,r29,#8
 6545  00006460  64210000	snei	r1,r1,#0
 6546  00006464  102002c0	beqz	r1,L265_LF3
 6547  00006468  54000000	nop; not filled.
 6548  0000646c  8fc2ff24	lw	r2,-220(r30)
 6549  00006470  90410000	lbu	r1,(r2)
 6550  00006474  6421003a	snei	r1,r1,#58
 6551  00006478  102000b8	beqz	r1,L309_LF3
 6552  0000647c  54000000	nop; not filled.
 6553  00006480  6ca10000	sgti	r1,r5,#0
 6554  00006484  142002a0	bnez	r1,L265_LF3
 6555  00006488  54000000	nop; not filled.
 6556  0000648c  23bdfff0	addi	r29,r29,#-16
 6557  00006490  afa20000	sw	(r29),r2
 6558  00006494  23c1ff24	addi	r1,r30,#-220
 6559  00006498  afa10004	sw	4(r29),r1
 6560  0000649c  200c0010	addi	r12,r0,#16
 6561  000064a0  afac0008	sw	8(r29),r12
 6562  000064a4  0fffd7fc	jal	_dstrtol
 6563  000064a8  54000000	nop; not filled.
 6564  000064ac  ace10000	sw	(r7),r1
 6565  000064b0  afa80000	sw	(r29),r8
 6566  000064b4  200c0066	addi	r12,r0,#102
 6567  000064b8  afac0004	sw	4(r29),r12
 6568  000064bc  0fffd65c	jal	_dindex
 6569  000064c0  54000000	nop; not filled.
 6570  000064c4  23bd0010	addi	r29,r29,#16
 6571  000064c8  64210000	snei	r1,r1,#0
 6572  000064cc  1420002c	bnez	r1,L271_LF3
 6573  000064d0  54000000	nop; not filled.
 6574  000064d4  23bdfff8	addi	r29,r29,#-8
 6575  000064d8  afa80000	sw	(r29),r8
 6576  000064dc  200c002b	addi	r12,r0,#43
 6577  000064e0  afac0004	sw	4(r29),r12
 6578  000064e4  0fffd634	jal	_dindex
 6579  000064e8  54000000	nop; not filled.
 6580  000064ec  23bd0008	addi	r29,r29,#8
 6581  000064f0  64210000	snei	r1,r1,#0
 6582  000064f4  10200028	beqz	r1,L268_LF3
 6583  000064f8  54000000	nop; not filled.
 6584  000064fc          	L271_LF3:
 6585  000064fc  23bdfff8	addi	r29,r29,#-8
 6586  00006500  3c0c0000	lhi	r12,((LC41_LF3)>>16)&0xffff
 6587  00006504  258cf950	addui	r12,r12,(LC41_LF3)&0xffff
 6588  00006508  afac0000	sw	(r29),r12
 6589  0000650c  8ce10000	lw	r1,(r7)
 6590  00006510  afa10004	sw	4(r29),r1
 6591  00006514  0c003ce0	jal	_printf
 6592  00006518  54000000	nop; not filled.
 6593  0000651c  23bd0008	addi	r29,r29,#8
 6594  00006520          	L268_LF3:
 6595  00006520  8fc1ff24	lw	r1,-220(r30)
 6596  00006524  90210000	lbu	r1,(r1)
 6597  00006528  6421003a	snei	r1,r1,#58
 6598  0000652c  142001f8	bnez	r1,L265_LF3
 6599  00006530  54000000	nop; not filled.
 6600  00006534          	L309_LF3:
 6601  00006534  8fc1ff24	lw	r1,-220(r30)
 6602  00006538  20210001	addi	r1,r1,#1
 6603  0000653c  afc1ff24	sw	-220(r30),r1
 6604  00006540  00ab3020	add	r6,r5,r11
 6605  00006544          	L275_LF3:
 6606  00006544  8fc1ff24	lw	r1,-220(r30)
 6607  00006548  08000010	j	L311_LF3
 6608  0000654c  54000000	nop; not filled.
 6609  00006550          	L278_LF3:
 6610  00006550  8fc1ff24	lw	r1,-220(r30)
 6611  00006554  20210001	addi	r1,r1,#1
 6612  00006558  afc1ff24	sw	-220(r30),r1
 6613  0000655c          	L311_LF3:
 6614  0000655c  903f0000	lbu	r31,(r1)
 6615  00006560  63e10020	seqi	r1,r31,#32
 6616  00006564  1420ffe8	bnez	r1,L278_LF3
 6617  00006568  54000000	nop; not filled.
 6618  0000656c  63e10009	seqi	r1,r31,#9
 6619  00006570  1420ffdc	bnez	r1,L278_LF3
 6620  00006574  54000000	nop; not filled.
 6621  00006578  8fc2ff24	lw	r2,-220(r30)
 6622  0000657c  805f0000	lb	r31,(r2)
 6623  00006580  33e300ff	andi	r3,r31,#0x00ff
 6624  00006584  6061000a	seqi	r1,r3,#10
 6625  00006588  10200014	beqz	r1,L280_LF3
 6626  0000658c  54000000	nop; not filled.
 6627  00006590  20410001	addi	r1,r2,#1
 6628  00006594  afc1ff24	sw	-220(r30),r1
 6629  00006598  0bfffe78	j	L264_LF3
 6630  0000659c  54000000	nop; not filled.
 6631  000065a0          	L280_LF3:
 6632  000065a0  20020000	addi	r2,r0,#0
 6633  000065a4  23e1ffd0	addi	r1,r31,#-48
 6634  000065a8  302100ff	andi	r1,r1,#0x00ff
 6635  000065ac  70210009	sleui	r1,r1,#9
 6636  000065b0  14200024	bnez	r1,L286_LF3
 6637  000065b4  54000000	nop; not filled.
 6638  000065b8  23e1ff9f	addi	r1,r31,#-97
 6639  000065bc  302100ff	andi	r1,r1,#0x00ff
 6640  000065c0  70210005	sleui	r1,r1,#5
 6641  000065c4  14200010	bnez	r1,L286_LF3
 6642  000065c8  54000000	nop; not filled.
 6643  000065cc  64610041	snei	r1,r3,#65
 6644  000065d0  14200008	bnez	r1,L285_LF3
 6645  000065d4  54000000	nop; not filled.
 6646  000065d8          	L286_LF3:
 6647  000065d8  20020001	addi	r2,r0,#1
 6648  000065dc          	L285_LF3:
 6649  000065dc  64410000	snei	r1,r2,#0
 6650  000065e0  1020fe30	beqz	r1,L264_LF3
 6651  000065e4  54000000	nop; not filled.
 6652  000065e8  8fc1ff24	lw	r1,-220(r30)
 6653  000065ec  80220001	lb	r2,1(r1)
 6654  000065f0  20030000	addi	r3,r0,#0
 6655  000065f4  2041ffd0	addi	r1,r2,#-48
 6656  000065f8  302100ff	andi	r1,r1,#0x00ff
 6657  000065fc  70210009	sleui	r1,r1,#9
 6658  00006600  14200028	bnez	r1,L289_LF3
 6659  00006604  54000000	nop; not filled.
 6660  00006608  2041ff9f	addi	r1,r2,#-97
 6661  0000660c  302100ff	andi	r1,r1,#0x00ff
 6662  00006610  70210005	sleui	r1,r1,#5
 6663  00006614  14200014	bnez	r1,L289_LF3
 6664  00006618  54000000	nop; not filled.
 6665  0000661c  304100ff	andi	r1,r2,#0x00ff
 6666  00006620  64210041	snei	r1,r1,#65
 6667  00006624  14200008	bnez	r1,L288_LF3
 6668  00006628  54000000	nop; not filled.
 6669  0000662c          	L289_LF3:
 6670  0000662c  20030001	addi	r3,r0,#1
 6671  00006630          	L288_LF3:
 6672  00006630  64610000	snei	r1,r3,#0
 6673  00006634  1020fddc	beqz	r1,L264_LF3
 6674  00006638  54000000	nop; not filled.
 6675  0000663c  8fc1ff24	lw	r1,-220(r30)
 6676  00006640  90220000	lbu	r2,(r1)
 6677  00006644  00021820	add	r3,r0,r2
 6678  00006648  205fffd0	addi	r31,r2,#-48
 6679  0000664c  73e10009	sleui	r1,r31,#9
 6680  00006650  10200010	beqz	r1,L291_LF3
 6681  00006654  54000000	nop; not filled.
 6682  00006658  001f2020	add	r4,r0,r31
 6683  0000665c  08000038	j	L290_LF3
 6684  00006660  54000000	nop; not filled.
 6685  00006664          	L291_LF3:
 6686  00006664  2041ff9f	addi	r1,r2,#-97
 6687  00006668  70210005	sleui	r1,r1,#5
 6688  0000666c  10200010	beqz	r1,L293_LF3
 6689  00006670  54000000	nop; not filled.
 6690  00006674  2044ffa9	addi	r4,r2,#-87
 6691  00006678  0800001c	j	L290_LF3
 6692  0000667c  54000000	nop; not filled.
 6693  00006680          	L293_LF3:
 6694  00006680  2061ffbf	addi	r1,r3,#-65
 6695  00006684  70210005	sleui	r1,r1,#5
 6696  00006688  20040000	addi	r4,r0,#0
 6697  0000668c  10200008	beqz	r1,L290_LF3
 6698  00006690  54000000	nop; not filled.
 6699  00006694  2064ffc9	addi	r4,r3,#-55
 6700  00006698          	L290_LF3:
 6701  00006698  8fc1ff24	lw	r1,-220(r30)
 6702  0000669c  90220001	lbu	r2,1(r1)
 6703  000066a0  00021820	add	r3,r0,r2
 6704  000066a4  205fffd0	addi	r31,r2,#-48
 6705  000066a8  73e10009	sleui	r1,r31,#9
 6706  000066ac  10200010	beqz	r1,L298_LF3
 6707  000066b0  54000000	nop; not filled.
 6708  000066b4  001f1020	add	r2,r0,r31
 6709  000066b8  08000038	j	L297_LF3
 6710  000066bc  54000000	nop; not filled.
 6711  000066c0          	L298_LF3:
 6712  000066c0  2041ff9f	addi	r1,r2,#-97
 6713  000066c4  70210005	sleui	r1,r1,#5
 6714  000066c8  10200010	beqz	r1,L300_LF3
 6715  000066cc  54000000	nop; not filled.
 6716  000066d0  2042ffa9	addi	r2,r2,#-87
 6717  000066d4  0800001c	j	L297_LF3
 6718  000066d8  54000000	nop; not filled.
 6719  000066dc          	L300_LF3:
 6720  000066dc  2061ffbf	addi	r1,r3,#-65
 6721  000066e0  70210005	sleui	r1,r1,#5
 6722  000066e4  20020000	addi	r2,r0,#0
 6723  000066e8  10200008	beqz	r1,L297_LF3
 6724  000066ec  54000000	nop; not filled.
 6725  000066f0  2062ffc9	addi	r2,r3,#-55
 6726  000066f4          	L297_LF3:
 6727  000066f4  50810004	slli	r1,r4,#0x4
 6728  000066f8  00220820	add	r1,r1,r2
 6729  000066fc  a0c10000	sb	(r6),r1
 6730  00006700  20c60001	addi	r6,r6,#1
 6731  00006704  20a50001	addi	r5,r5,#1
 6732  00006708  8fc1ff24	lw	r1,-220(r30)
 6733  0000670c  20210002	addi	r1,r1,#2
 6734  00006710  afc1ff24	sw	-220(r30),r1
 6735  00006714  8ce10000	lw	r1,(r7)
 6736  00006718  20210001	addi	r1,r1,#1
 6737  0000671c  ace10000	sw	(r7),r1
 6738  00006720  0bfffe20	j	L275_LF3
 6739  00006724  54000000	nop; not filled.
 6740  00006728          	L265_LF3:
 6741  00006728  23bdfff0	addi	r29,r29,#-16
 6742  0000672c  afaa0000	sw	(r29),r10
 6743  00006730  8fc1ff24	lw	r1,-220(r30)
 6744  00006734  00290820	add	r1,r1,r9
 6745  00006738  23c3ff28	addi	r3,r30,#-216
 6746  0000673c  00230822	sub	r1,r1,r3
 6747  00006740  afa10004	sw	4(r29),r1
 6748  00006744  200c0000	addi	r12,r0,#0
 6749  00006748  afac0008	sw	8(r29),r12
 6750  0000674c  0fffb3a8	jal	_FsSeek
 6751  00006750  54000000	nop; not filled.
 6752  00006754  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6753  00006758  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6754  0000675c  afa20000	sw	(r29),r2
 6755  00006760  200c0066	addi	r12,r0,#102
 6756  00006764  afac0004	sw	4(r29),r12
 6757  00006768  0fffd3b0	jal	_dindex
 6758  0000676c  54000000	nop; not filled.
 6759  00006770  23bd0010	addi	r29,r29,#16
 6760  00006774  64210000	snei	r1,r1,#0
 6761  00006778  1420002c	bnez	r1,L306_LF3
 6762  0000677c  54000000	nop; not filled.
 6763  00006780  23bdfff8	addi	r29,r29,#-8
 6764  00006784  afa20000	sw	(r29),r2
 6765  00006788  200c002b	addi	r12,r0,#43
 6766  0000678c  afac0004	sw	4(r29),r12
 6767  00006790  0fffd388	jal	_dindex
 6768  00006794  54000000	nop; not filled.
 6769  00006798  23bd0008	addi	r29,r29,#8
 6770  0000679c  64210000	snei	r1,r1,#0
 6771  000067a0  10200034	beqz	r1,L305_LF3
 6772  000067a4  54000000	nop; not filled.
 6773  000067a8          	L306_LF3:
 6774  000067a8  23bdfff0	addi	r29,r29,#-16
 6775  000067ac  3c0c0000	lhi	r12,((LC42_LF3)>>16)&0xffff
 6776  000067b0  258cf968	addui	r12,r12,(LC42_LF3)&0xffff
 6777  000067b4  afac0000	sw	(r29),r12
 6778  000067b8  8fc1ff24	lw	r1,-220(r30)
 6779  000067bc  00290820	add	r1,r1,r9
 6780  000067c0  00230822	sub	r1,r1,r3
 6781  000067c4  afa10004	sw	4(r29),r1
 6782  000067c8  afa50008	sw	8(r29),r5
 6783  000067cc  0c003a28	jal	_printf
 6784  000067d0  54000000	nop; not filled.
 6785  000067d4  23bd0010	addi	r29,r29,#16
 6786  000067d8          	L305_LF3:
 6787  000067d8  00050820	add	r1,r0,r5
 6788  000067dc          	L307_LF3:
 6789  000067dc  8fa20000	lw	r2,0(r29)
 6790  000067e0  8fa30004	lw	r3,4(r29)
 6791  000067e4  8fa40008	lw	r4,8(r29)
 6792  000067e8  8fa5000c	lw	r5,12(r29)
 6793  000067ec  8fa60010	lw	r6,16(r29)
 6794  000067f0  8fa70014	lw	r7,20(r29)
 6795  000067f4  8fa80018	lw	r8,24(r29)
 6796  000067f8  8fa9001c	lw	r9,28(r29)
 6797  000067fc  8faa0020	lw	r10,32(r29)
 6798  00006800  8fab0024	lw	r11,36(r29)
 6799  00006804  8fac0028	lw	r12,40(r29)
 6800  00006808  8fdffff8	lw	r31,-8(r30)
 6801  0000680c  001ee820	add	r29,r0,r30
 6802  00006810  8fdefffc	lw	r30,-4(r30)
 6803  00006814  4be00000	jr	r31
 6804  00006818  54000000	nop
 6805  0000681c          	.endproc _ProcessGetFromFile
 6806  0000681c          	.data
 6807  0000f98f          	.align 2
 6808  0000f990          	LC43_LF3:
 6809  0000f990  476f7420	.ascii "Got %d arguments.\n\000"
 6809  0000f994  25642061	
 6809  0000f998  7267756d	
 6809  0000f99c  656e7473	
 6809  0000f9a0  2e0a00  	
 6810  0000f9a3          	.align 2
 6811  0000f9a4          	LC44_LF3:
 6812  0000f9a4  41766169	.ascii "Available memory: 0x%x -> 0x%x.\n\000"
 6812  0000f9a8  6c61626c	
 6812  0000f9ac  65206d65	
 6812  0000f9b0  6d6f7279	
 6812  0000f9b4  3a203078	
 6812  0000f9b8  2578202d	
 6812  0000f9bc  3e203078	
 6812  0000f9c0  25782e0a	
 6812  0000f9c4  00      	
 6813  0000f9c5          	.align 2
 6814  0000f9c8          	LC45_LF3:
 6815  0000f9c8  41726775	.ascii "Argument count is %d.\n\000"
 6815  0000f9cc  6d656e74	
 6815  0000f9d0  20636f75	
 6815  0000f9d4  6e742069	
 6815  0000f9d8  73202564	
 6815  0000f9dc  2e0a00  	
 6816  0000f9df          	.align 2
 6817  0000f9e0          	LC46_LF3:
 6818  0000f9e0  41726775	.ascii "Argument %d is %s.\n\000"
 6818  0000f9e4  6d656e74	
 6818  0000f9e8  20256420	
 6818  0000f9ec  69732025	
 6818  0000f9f0  732e0a00	
 6819  0000f9f4          	.align 2
 6820  0000f9f4          	LC47_LF3:
 6821  0000f9f4  436f6e76	.ascii "Converted %s to %d=%s\n\000"
 6821  0000f9f8  65727465	
 6821  0000f9fc  64202573	
 6821  0000fa00  20746f20	
 6821  0000fa04  25643d25	
 6821  0000fa08  730a00  	
 6822  0000fa0b          	_buf60_LF3:
 6823  0000fa0b          	.space 200
 6824  0000fad3          	.align 2
 6825  0000fad4          	LC48_LF3:
 6826  0000fad4  25303878	.ascii "%08x: %02x%02x%02x%02x\n\000"
 6826  0000fad8  3a202530	
 6826  0000fadc  32782530	
 6826  0000fae0  32782530	
 6826  0000fae4  32782530	
 6826  0000fae8  32780a00	
 6827  0000faec          	.align 2
 6828  0000faec          	LC49_LF3:
 6829  0000faec  4f707469	.ascii "Option %s not recognized.\n\000"
 6829  0000faf0  6f6e2025	
 6829  0000faf4  73206e6f	
 6829  0000faf8  74207265	
 6829  0000fafc  636f676e	
 6829  0000fb00  697a6564	
 6829  0000fb04  2e0a00  	
 6830  0000fb07          	.align 2
 6831  0000fb08          	LC50_LF3:
 6832  0000fb08  41626f75	.ascii "About to initialize queues.\n\000"
 6832  0000fb0c  7420746f	
 6832  0000fb10  20696e69	
 6832  0000fb14  7469616c	
 6832  0000fb18  697a6520	
 6832  0000fb1c  71756575	
 6832  0000fb20  65732e0a	
 6832  0000fb24  00      	
 6833  0000fb25          	.align 2
 6834  0000fb28          	LC51_LF3:
 6835  0000fb28  41667465	.ascii "After initializing queues.\n\000"
 6835  0000fb2c  7220696e	
 6835  0000fb30  69746961	
 6835  0000fb34  6c697a69	
 6835  0000fb38  6e672071	
 6835  0000fb3c  75657565	
 6835  0000fb40  732e0a00	
 6836  0000fb44          	.align 2
 6837  0000fb44          	LC52_LF3:
 6838  0000fb44  41667465	.ascii "After initializing memory.\n\000"
 6838  0000fb48  7220696e	
 6838  0000fb4c  69746961	
 6838  0000fb50  6c697a69	
 6838  0000fb54  6e67206d	
 6838  0000fb58  656d6f72	
 6838  0000fb5c  792e0a00	
 6839  0000fb60          	.align 2
 6840  0000fb60          	LC53_LF3:
 6841  0000fb60  41667465	.ascii "After initializing processes.\n\000"
 6841  0000fb64  7220696e	
 6841  0000fb68  69746961	
 6841  0000fb6c  6c697a69	
 6841  0000fb70  6e672070	
 6841  0000fb74  726f6365	
 6841  0000fb78  73736573	
 6841  0000fb7c  2e0a00  	
 6842  0000fb7f          	.align 2
 6843  0000fb80          	LC54_LF3:
 6844  0000fb80  41667465	.ascii "After initializing keyboard.\n\000"
 6844  0000fb84  7220696e	
 6844  0000fb88  69746961	
 6844  0000fb8c  6c697a69	
 6844  0000fb90  6e67206b	
 6844  0000fb94  6579626f	
 6844  0000fb98  6172642e	
 6844  0000fb9c  0a00    	
 6845  0000fb9e          	.align 2
 6846  0000fba0          	LC55_LF3:
 6847  0000fba0  766d00  	.ascii "vm\000"
 6848  0000fba3          	.align 2
 6849  0000fba4          	LC56_LF3:
 6850  0000fba4  564d2044	.ascii "VM Descriptor is %d\n\000"
 6850  0000fba8  65736372	
 6850  0000fbac  6970746f	
 6850  0000fbb0  72206973	
 6850  0000fbb4  2025640a	
 6850  0000fbb8  00      	
 6851  0000fbb9          	.align 2
 6852  0000fbbc          	LC57_LF3:
 6853  0000fbbc  43726561	.ascii "Created processes - about to set timer quantum.\n\000"
 6853  0000fbc0  74656420	
 6853  0000fbc4  70726f63	
 6853  0000fbc8  65737365	
 6853  0000fbcc  73202d20	
 6853  0000fbd0  61626f75	
 6853  0000fbd4  7420746f	
 6853  0000fbd8  20736574	
 6853  0000fbdc  2074696d	
 6853  0000fbe0  65722071	
 6853  0000fbe4  75616e74	
 6853  0000fbe8  756d2e0a	
 6853  0000fbec  00      	
 6854  0000fbed          	.align 2
 6855  0000fbf0          	LC58_LF3:
 6856  0000fbf0  53657420	.ascii "Set timer quantum to %d, about to run first process.\n\000"
 6856  0000fbf4  74696d65	
 6856  0000fbf8  72207175	
 6856  0000fbfc  616e7475	
 6856  0000fc00  6d20746f	
 6856  0000fc04  2025642c	
 6856  0000fc08  2061626f	
 6856  0000fc0c  75742074	
 6856  0000fc10  6f207275	
 6856  0000fc14  6e206669	
 6856  0000fc18  72737420	
 6856  0000fc1c  70726f63	
 6856  0000fc20  6573732e	
 6856  0000fc24  0a00    	
 6857  0000fc26          	.text
 6858  0000681c          	.align 2
 6859  0000681c          	.proc _main
 6860  0000681c          	.global _main
 6861  0000681c          	_main:
 6862                      ;  Function 'main'; 144 bytes of locals, 0 regs to save.
 6863  0000681c  afbefffc	sw	-4(r29),r30; push fp
 6864  00006820  001df020	add	r30,r0,r29; fp = sp
 6865  00006824  afbffff8	sw	-8(r29),r31; push ret addr
 6866  00006828  2fbd0098	subui	r29,r29,#152; alloc local storage
 6867  0000682c  8fcc0000	lw	r12,(r30)
 6868  00006830  0c00392c	jal	___main
 6869  00006834  54000000	nop; not filled.
 6870  00006838  20100000	addi	r16,r0,#0
 6871  0000683c  3c010000	lhi	r1,((_debugstr)>>16)&0xffff
 6872  00006840  2421fc26	addui	r1,r1,(_debugstr)&0xffff
 6873  00006844  20130000	addi	r19,r0,(#0x0)&0xff
 6874  00006848  a0330000	sb	(r1),r19
 6875  0000684c  23bdfff8	addi	r29,r29,#-8
 6876  00006850  3c130000	lhi	r19,((LC43_LF3)>>16)&0xffff
 6877  00006854  2673f990	addui	r19,r19,(LC43_LF3)&0xffff
 6878  00006858  afb30000	sw	(r29),r19
 6879  0000685c  afac0004	sw	4(r29),r12
 6880  00006860  0c003994	jal	_printf
 6881  00006864  54000000	nop; not filled.
 6882  00006868  0fffbea4	jal	_MemoryGetSize
 6883  0000686c  54000000	nop; not filled.
 6884  00006870  23bdfff8	addi	r29,r29,#-8
 6885  00006874  3c130000	lhi	r19,((LC44_LF3)>>16)&0xffff
 6886  00006878  2673f9a4	addui	r19,r19,(LC44_LF3)&0xffff
 6887  0000687c  afb30000	sw	(r29),r19
 6888  00006880  3c020001	lhi	r2,((_lastosaddress)>>16)&0xffff
 6889  00006884  24423194	addui	r2,r2,(_lastosaddress)&0xffff
 6890  00006888  8c420000	lw	r2,(r2)
 6891  0000688c  afa20004	sw	4(r29),r2
 6892  00006890  afa10008	sw	8(r29),r1
 6893  00006894  0c003960	jal	_printf
 6894  00006898  54000000	nop; not filled.
 6895  0000689c  3c130000	lhi	r19,((LC45_LF3)>>16)&0xffff
 6896  000068a0  2673f9c8	addui	r19,r19,(LC45_LF3)&0xffff
 6897  000068a4  afb30000	sw	(r29),r19
 6898  000068a8  afac0004	sw	4(r29),r12
 6899  000068ac  0c003948	jal	_printf
 6900  000068b0  54000000	nop; not filled.
 6901  000068b4  20090000	addi	r9,r0,#0
 6902  000068b8  23bd0010	addi	r29,r29,#16
 6903  000068bc  020c082a	slt	r1,r16,r12
 6904  000068c0  10200044	beqz	r1,L314_LF3
 6905  000068c4  54000000	nop; not filled.
 6906  000068c8  8fc20004	lw	r2,4(r30)
 6907  000068cc          	L316_LF3:
 6908  000068cc  23bdfff0	addi	r29,r29,#-16
 6909  000068d0  3c130000	lhi	r19,((LC46_LF3)>>16)&0xffff
 6910  000068d4  2673f9e0	addui	r19,r19,(LC46_LF3)&0xffff
 6911  000068d8  afb30000	sw	(r29),r19
 6912  000068dc  afa90004	sw	4(r29),r9
 6913  000068e0  8c530000	lw	r19,(r2)
 6914  000068e4  afb30008	sw	8(r29),r19
 6915  000068e8  0c00390c	jal	_printf
 6916  000068ec  54000000	nop; not filled.
 6917  000068f0  23bd0010	addi	r29,r29,#16
 6918  000068f4  20420004	addi	r2,r2,#4
 6919  000068f8  21290001	addi	r9,r9,#1
 6920  000068fc  012c082a	slt	r1,r9,r12
 6921  00006900  1420ffc8	bnez	r1,L316_LF3
 6922  00006904  54000000	nop; not filled.
 6923  00006908          	L314_LF3:
 6924  00006908  0fffb878	jal	_FsModuleInit
 6925  0000690c  54000000	nop; not filled.
 6926  00006910  20090000	addi	r9,r0,#0
 6927  00006914  012c082a	slt	r1,r9,r12
 6928  00006918  1020032c	beqz	r1,L319_LF3
 6929  0000691c  54000000	nop; not filled.
 6930  00006920  23cdff80	addi	r13,r30,#-128
 6931  00006924  23ceff68	addi	r14,r30,#-152
 6932  00006928  3c0f0000	lhi	r15,((_buf60_LF3)>>16)&0xffff
 6933  0000692c  25effa0b	addui	r15,r15,(_buf60_LF3)&0xffff
 6934  00006930  21f20001	addi	r18,r15,#1
 6935  00006934  21f10002	addi	r17,r15,#2
 6936  00006938  8fc80004	lw	r8,4(r30)
 6937  0000693c          	L321_LF3:
 6938  0000693c  8d020000	lw	r2,(r8)
 6939  00006940  90410000	lbu	r1,(r2)
 6940  00006944  6021002d	seqi	r1,r1,#45
 6941  00006948  102002e8	beqz	r1,L320_LF3
 6942  0000694c  54000000	nop; not filled.
 6943  00006950  90420001	lbu	r2,1(r2)
 6944  00006954  60410066	seqi	r1,r2,#102
 6945  00006958  142000e0	bnez	r1,L326_LF3
 6946  0000695c  54000000	nop; not filled.
 6947  00006960  6c410066	sgti	r1,r2,#102
 6948  00006964  14200018	bnez	r1,L338_LF3
 6949  00006968  54000000	nop; not filled.
 6950  0000696c  60410044	seqi	r1,r2,#68
 6951  00006970  1020029c	beqz	r1,L336_LF3
 6952  00006974  54000000	nop; not filled.
 6953  00006978  08000024	j	L324_LF3
 6954  0000697c  54000000	nop; not filled.
 6955  00006980          	L338_LF3:
 6956  00006980  60410069	seqi	r1,r2,#105
 6957  00006984  14200048	bnez	r1,L325_LF3
 6958  00006988  54000000	nop; not filled.
 6959  0000698c  60410075	seqi	r1,r2,#117
 6960  00006990  1020027c	beqz	r1,L336_LF3
 6961  00006994  54000000	nop; not filled.
 6962  00006998  08000260	j	L335_LF3
 6963  0000699c  54000000	nop; not filled.
 6964  000069a0          	L324_LF3:
 6965  000069a0  23bdfff8	addi	r29,r29,#-8
 6966  000069a4  3c130000	lhi	r19,((_debugstr)>>16)&0xffff
 6967  000069a8  2673fc26	addui	r19,r19,(_debugstr)&0xffff
 6968  000069ac  afb30000	sw	(r29),r19
 6969  000069b0  21080004	addi	r8,r8,#4
 6970  000069b4  21290001	addi	r9,r9,#1
 6971  000069b8  8d010000	lw	r1,(r8)
 6972  000069bc  afa10004	sw	4(r29),r1
 6973  000069c0  0fffcc98	jal	_dstrcpy
 6974  000069c4  54000000	nop; not filled.
 6975  000069c8  08000264	j	L362_LF3
 6976  000069cc  54000000	nop; not filled.
 6977  000069d0          	L325_LF3:
 6978  000069d0  23bdfff0	addi	r29,r29,#-16
 6979  000069d4  21080004	addi	r8,r8,#4
 6980  000069d8  21290001	addi	r9,r9,#1
 6981  000069dc  8d130000	lw	r19,(r8)
 6982  000069e0  afb30000	sw	(r29),r19
 6983  000069e4  20130000	addi	r19,r0,#0
 6984  000069e8  afb30004	sw	4(r29),r19
 6985  000069ec  afb30008	sw	8(r29),r19
 6986  000069f0  0fffd2b0	jal	_dstrtol
 6987  000069f4  54000000	nop; not filled.
 6988  000069f8  00011820	add	r3,r0,r1
 6989  000069fc  afa10000	sw	(r29),r1
 6990  00006a00  afad0004	sw	4(r29),r13
 6991  00006a04  0fffd190	jal	_ditoa
 6992  00006a08  54000000	nop; not filled.
 6993  00006a0c  3c130000	lhi	r19,((LC47_LF3)>>16)&0xffff
 6994  00006a10  2673f9f4	addui	r19,r19,(LC47_LF3)&0xffff
 6995  00006a14  afb30000	sw	(r29),r19
 6996  00006a18  8d010000	lw	r1,(r8)
 6997  00006a1c  afa10004	sw	4(r29),r1
 6998  00006a20  afa30008	sw	8(r29),r3
 6999  00006a24  afad000c	sw	12(r29),r13
 7000  00006a28  0c0037cc	jal	_printf
 7001  00006a2c  54000000	nop; not filled.
 7002  00006a30  23bd0010	addi	r29,r29,#16
 7003  00006a34  080001fc	j	L320_LF3
 7004  00006a38  54000000	nop; not filled.
 7005  00006a3c          	L326_LF3:
 7006  00006a3c  20130000	addi	r19,r0,#0
 7007  00006a40  afd3ff68	sw	-152(r30),r19
 7008  00006a44  23bdffe8	addi	r29,r29,#-24
 7009  00006a48  21080004	addi	r8,r8,#4
 7010  00006a4c  21290001	addi	r9,r9,#1
 7011  00006a50  8d130000	lw	r19,(r8)
 7012  00006a54  afb30000	sw	(r29),r19
 7013  00006a58  23c1ff7c	addi	r1,r30,#-132
 7014  00006a5c  afa10004	sw	4(r29),r1
 7015  00006a60  23c1ff78	addi	r1,r30,#-136
 7016  00006a64  afa10008	sw	8(r29),r1
 7017  00006a68  23c1ff74	addi	r1,r30,#-140
 7018  00006a6c  afa1000c	sw	12(r29),r1
 7019  00006a70  23c1ff70	addi	r1,r30,#-144
 7020  00006a74  afa10010	sw	16(r29),r1
 7021  00006a78  23c1ff6c	addi	r1,r30,#-148
 7022  00006a7c  afa10014	sw	20(r29),r1
 7023  00006a80  0ffff2a0	jal	_ProcessGetCodeInfo
 7024  00006a84  54000000	nop; not filled.
 7025  00006a88  00015020	add	r10,r0,r1
 7026  00006a8c  3c130000	lhi	r19,((LC27_LF3)>>16)&0xffff
 7027  00006a90  2673f764	addui	r19,r19,(LC27_LF3)&0xffff
 7028  00006a94  afb30000	sw	(r29),r19
 7029  00006a98  8d010000	lw	r1,(r8)
 7030  00006a9c  afa10004	sw	4(r29),r1
 7031  00006aa0  8fd3ff7c	lw	r19,-132(r30)
 7032  00006aa4  afb30008	sw	8(r29),r19
 7033  00006aa8  0c00374c	jal	_printf
 7034  00006aac  54000000	nop; not filled.
 7035  00006ab0  3c130000	lhi	r19,((LC28_LF3)>>16)&0xffff
 7036  00006ab4  2673f780	addui	r19,r19,(LC28_LF3)&0xffff
 7037  00006ab8  afb30000	sw	(r29),r19
 7038  00006abc  8d010000	lw	r1,(r8)
 7039  00006ac0  afa10004	sw	4(r29),r1
 7040  00006ac4  8fd3ff78	lw	r19,-136(r30)
 7041  00006ac8  afb30008	sw	8(r29),r19
 7042  00006acc  8fd3ff74	lw	r19,-140(r30)
 7043  00006ad0  afb3000c	sw	12(r29),r19
 7044  00006ad4  0c003720	jal	_printf
 7045  00006ad8  54000000	nop; not filled.
 7046  00006adc  3c130000	lhi	r19,((LC29_LF3)>>16)&0xffff
 7047  00006ae0  2673f7a8	addui	r19,r19,(LC29_LF3)&0xffff
 7048  00006ae4  afb30000	sw	(r29),r19
 7049  00006ae8  8d010000	lw	r1,(r8)
 7050  00006aec  afa10004	sw	4(r29),r1
 7051  00006af0  8fd3ff70	lw	r19,-144(r30)
 7052  00006af4  afb30008	sw	8(r29),r19
 7053  00006af8  8fd3ff6c	lw	r19,-148(r30)
 7054  00006afc  afb3000c	sw	12(r29),r19
 7055  00006b00  0c0036f4	jal	_printf
 7056  00006b04  54000000	nop; not filled.
 7057  00006b08  23bd0018	addi	r29,r29,#24
 7058  00006b0c  3c0b0000	lhi	r11,((_buf60_LF3+3)>>16)&0xffff
 7059  00006b10  256bfa0e	addui	r11,r11,(_buf60_LF3+3)&0xffff
 7060  00006b14          	L327_LF3:
 7061  00006b14  23bdfff0	addi	r29,r29,#-16
 7062  00006b18  afaa0000	sw	(r29),r10
 7063  00006b1c  3c130000	lhi	r19,((_buf60_LF3)>>16)&0xffff
 7064  00006b20  2673fa0b	addui	r19,r19,(_buf60_LF3)&0xffff
 7065  00006b24  afb30004	sw	4(r29),r19
 7066  00006b28  afae0008	sw	8(r29),r14
 7067  00006b2c  201300c8	addi	r19,r0,#200
 7068  00006b30  afb3000c	sw	12(r29),r19
 7069  00006b34  0ffff64c	jal	_ProcessGetFromFile
 7070  00006b38  54000000	nop; not filled.
 7071  00006b3c  00011820	add	r3,r0,r1
 7072  00006b40  23bd0010	addi	r29,r29,#16
 7073  00006b44  6c610000	sgti	r1,r3,#0
 7074  00006b48  10200098	beqz	r1,L328_LF3
 7075  00006b4c  54000000	nop; not filled.
 7076  00006b50  20020000	addi	r2,r0,#0
 7077  00006b54  0043082a	slt	r1,r2,r3
 7078  00006b58  1020ffb8	beqz	r1,L327_LF3
 7079  00006b5c  54000000	nop; not filled.
 7080  00006b60  000b3820	add	r7,r0,r11
 7081  00006b64  00113020	add	r6,r0,r17
 7082  00006b68  00122820	add	r5,r0,r18
 7083  00006b6c  000f2020	add	r4,r0,r15
 7084  00006b70          	L333_LF3:
 7085  00006b70  23bdffe8	addi	r29,r29,#-24
 7086  00006b74  3c130000	lhi	r19,((LC48_LF3)>>16)&0xffff
 7087  00006b78  2673fad4	addui	r19,r19,(LC48_LF3)&0xffff
 7088  00006b7c  afb30000	sw	(r29),r19
 7089  00006b80  8fc1ff68	lw	r1,-152(r30)
 7090  00006b84  00220820	add	r1,r1,r2
 7091  00006b88  00230822	sub	r1,r1,r3
 7092  00006b8c  afa10004	sw	4(r29),r1
 7093  00006b90  90810000	lbu	r1,(r4)
 7094  00006b94  afa10008	sw	8(r29),r1
 7095  00006b98  90a10000	lbu	r1,(r5)
 7096  00006b9c  afa1000c	sw	12(r29),r1
 7097  00006ba0  90c10000	lbu	r1,(r6)
 7098  00006ba4  afa10010	sw	16(r29),r1
 7099  00006ba8  90e10000	lbu	r1,(r7)
 7100  00006bac  afa10014	sw	20(r29),r1
 7101  00006bb0  0c003644	jal	_printf
 7102  00006bb4  54000000	nop; not filled.
 7103  00006bb8  23bd0018	addi	r29,r29,#24
 7104  00006bbc  20e70004	addi	r7,r7,#4
 7105  00006bc0  20c60004	addi	r6,r6,#4
 7106  00006bc4  20a50004	addi	r5,r5,#4
 7107  00006bc8  20840004	addi	r4,r4,#4
 7108  00006bcc  20420004	addi	r2,r2,#4
 7109  00006bd0  0043082a	slt	r1,r2,r3
 7110  00006bd4  1420ff98	bnez	r1,L333_LF3
 7111  00006bd8  54000000	nop; not filled.
 7112  00006bdc  0bffff34	j	L327_LF3
 7113  00006be0  54000000	nop; not filled.
 7114  00006be4          	L328_LF3:
 7115  00006be4  23bdfff8	addi	r29,r29,#-8
 7116  00006be8  afaa0000	sw	(r29),r10
 7117  00006bec  0c003584	jal	_close
 7118  00006bf0  54000000	nop; not filled.
 7119  00006bf4  08000038	j	L362_LF3
 7120  00006bf8  54000000	nop; not filled.
 7121  00006bfc          	L335_LF3:
 7122  00006bfc  21080004	addi	r8,r8,#4
 7123  00006c00  21290001	addi	r9,r9,#1
 7124  00006c04  8d100000	lw	r16,(r8)
 7125  00006c08  08000028	j	L320_LF3
 7126  00006c0c  54000000	nop; not filled.
 7127  00006c10          	L336_LF3:
 7128  00006c10  23bdfff8	addi	r29,r29,#-8
 7129  00006c14  3c130000	lhi	r19,((LC49_LF3)>>16)&0xffff
 7130  00006c18  2673faec	addui	r19,r19,(LC49_LF3)&0xffff
 7131  00006c1c  afb30000	sw	(r29),r19
 7132  00006c20  8d010000	lw	r1,(r8)
 7133  00006c24  afa10004	sw	4(r29),r1
 7134  00006c28  0c0035cc	jal	_printf
 7135  00006c2c  54000000	nop; not filled.
 7136  00006c30          	L362_LF3:
 7137  00006c30  23bd0008	addi	r29,r29,#8
 7138  00006c34          	L320_LF3:
 7139  00006c34  21080004	addi	r8,r8,#4
 7140  00006c38  21290001	addi	r9,r9,#1
 7141  00006c3c  012c082a	slt	r1,r9,r12
 7142  00006c40  1420fcf8	bnez	r1,L321_LF3
 7143  00006c44  54000000	nop; not filled.
 7144  00006c48          	L319_LF3:
 7145  00006c48  23bdfff8	addi	r29,r29,#-8
 7146  00006c4c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7147  00006c50  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7148  00006c54  afa20000	sw	(r29),r2
 7149  00006c58  20130069	addi	r19,r0,#105
 7150  00006c5c  afb30004	sw	4(r29),r19
 7151  00006c60  0fffceb8	jal	_dindex
 7152  00006c64  54000000	nop; not filled.
 7153  00006c68  23bd0008	addi	r29,r29,#8
 7154  00006c6c  64210000	snei	r1,r1,#0
 7155  00006c70  1420002c	bnez	r1,L341_LF3
 7156  00006c74  54000000	nop; not filled.
 7157  00006c78  23bdfff8	addi	r29,r29,#-8
 7158  00006c7c  afa20000	sw	(r29),r2
 7159  00006c80  2013002b	addi	r19,r0,#43
 7160  00006c84  afb30004	sw	4(r29),r19
 7161  00006c88  0fffce90	jal	_dindex
 7162  00006c8c  54000000	nop; not filled.
 7163  00006c90  23bd0008	addi	r29,r29,#8
 7164  00006c94  64210000	snei	r1,r1,#0
 7165  00006c98  10200020	beqz	r1,L340_LF3
 7166  00006c9c  54000000	nop; not filled.
 7167  00006ca0          	L341_LF3:
 7168  00006ca0  23bdfff8	addi	r29,r29,#-8
 7169  00006ca4  3c130000	lhi	r19,((LC50_LF3)>>16)&0xffff
 7170  00006ca8  2673fb08	addui	r19,r19,(LC50_LF3)&0xffff
 7171  00006cac  afb30000	sw	(r29),r19
 7172  00006cb0  0c003544	jal	_printf
 7173  00006cb4  54000000	nop; not filled.
 7174  00006cb8  23bd0008	addi	r29,r29,#8
 7175  00006cbc          	L340_LF3:
 7176  00006cbc  0c000984	jal	_QueueModuleInit
 7177  00006cc0  54000000	nop; not filled.
 7178  00006cc4  23bdfff8	addi	r29,r29,#-8
 7179  00006cc8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7180  00006ccc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7181  00006cd0  afa20000	sw	(r29),r2
 7182  00006cd4  20130069	addi	r19,r0,#105
 7183  00006cd8  afb30004	sw	4(r29),r19
 7184  00006cdc  0fffce3c	jal	_dindex
 7185  00006ce0  54000000	nop; not filled.
 7186  00006ce4  23bd0008	addi	r29,r29,#8
 7187  00006ce8  64210000	snei	r1,r1,#0
 7188  00006cec  1420002c	bnez	r1,L343_LF3
 7189  00006cf0  54000000	nop; not filled.
 7190  00006cf4  23bdfff8	addi	r29,r29,#-8
 7191  00006cf8  afa20000	sw	(r29),r2
 7192  00006cfc  2013002b	addi	r19,r0,#43
 7193  00006d00  afb30004	sw	4(r29),r19
 7194  00006d04  0fffce14	jal	_dindex
 7195  00006d08  54000000	nop; not filled.
 7196  00006d0c  23bd0008	addi	r29,r29,#8
 7197  00006d10  64210000	snei	r1,r1,#0
 7198  00006d14  10200020	beqz	r1,L342_LF3
 7199  00006d18  54000000	nop; not filled.
 7200  00006d1c          	L343_LF3:
 7201  00006d1c  23bdfff8	addi	r29,r29,#-8
 7202  00006d20  3c130000	lhi	r19,((LC51_LF3)>>16)&0xffff
 7203  00006d24  2673fb28	addui	r19,r19,(LC51_LF3)&0xffff
 7204  00006d28  afb30000	sw	(r29),r19
 7205  00006d2c  0c0034c8	jal	_printf
 7206  00006d30  54000000	nop; not filled.
 7207  00006d34  23bd0008	addi	r29,r29,#8
 7208  00006d38          	L342_LF3:
 7209  00006d38  0fffbb34	jal	_MemoryModuleInit
 7210  00006d3c  54000000	nop; not filled.
 7211  00006d40  23bdfff8	addi	r29,r29,#-8
 7212  00006d44  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7213  00006d48  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7214  00006d4c  afa20000	sw	(r29),r2
 7215  00006d50  20130069	addi	r19,r0,#105
 7216  00006d54  afb30004	sw	4(r29),r19
 7217  00006d58  0fffcdc0	jal	_dindex
 7218  00006d5c  54000000	nop; not filled.
 7219  00006d60  23bd0008	addi	r29,r29,#8
 7220  00006d64  64210000	snei	r1,r1,#0
 7221  00006d68  1420002c	bnez	r1,L345_LF3
 7222  00006d6c  54000000	nop; not filled.
 7223  00006d70  23bdfff8	addi	r29,r29,#-8
 7224  00006d74  afa20000	sw	(r29),r2
 7225  00006d78  2013002b	addi	r19,r0,#43
 7226  00006d7c  afb30004	sw	4(r29),r19
 7227  00006d80  0fffcd98	jal	_dindex
 7228  00006d84  54000000	nop; not filled.
 7229  00006d88  23bd0008	addi	r29,r29,#8
 7230  00006d8c  64210000	snei	r1,r1,#0
 7231  00006d90  10200020	beqz	r1,L344_LF3
 7232  00006d94  54000000	nop; not filled.
 7233  00006d98          	L345_LF3:
 7234  00006d98  23bdfff8	addi	r29,r29,#-8
 7235  00006d9c  3c130000	lhi	r19,((LC52_LF3)>>16)&0xffff
 7236  00006da0  2673fb44	addui	r19,r19,(LC52_LF3)&0xffff
 7237  00006da4  afb30000	sw	(r29),r19
 7238  00006da8  0c00344c	jal	_printf
 7239  00006dac  54000000	nop; not filled.
 7240  00006db0  23bd0008	addi	r29,r29,#8
 7241  00006db4          	L344_LF3:
 7242  00006db4  0fffd668	jal	_ProcessModuleInit
 7243  00006db8  54000000	nop; not filled.
 7244  00006dbc  23bdfff8	addi	r29,r29,#-8
 7245  00006dc0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7246  00006dc4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7247  00006dc8  afa20000	sw	(r29),r2
 7248  00006dcc  20130069	addi	r19,r0,#105
 7249  00006dd0  afb30004	sw	4(r29),r19
 7250  00006dd4  0fffcd44	jal	_dindex
 7251  00006dd8  54000000	nop; not filled.
 7252  00006ddc  23bd0008	addi	r29,r29,#8
 7253  00006de0  64210000	snei	r1,r1,#0
 7254  00006de4  1420002c	bnez	r1,L347_LF3
 7255  00006de8  54000000	nop; not filled.
 7256  00006dec  23bdfff8	addi	r29,r29,#-8
 7257  00006df0  afa20000	sw	(r29),r2
 7258  00006df4  2013002b	addi	r19,r0,#43
 7259  00006df8  afb30004	sw	4(r29),r19
 7260  00006dfc  0fffcd1c	jal	_dindex
 7261  00006e00  54000000	nop; not filled.
 7262  00006e04  23bd0008	addi	r29,r29,#8
 7263  00006e08  64210000	snei	r1,r1,#0
 7264  00006e0c  10200020	beqz	r1,L346_LF3
 7265  00006e10  54000000	nop; not filled.
 7266  00006e14          	L347_LF3:
 7267  00006e14  23bdfff8	addi	r29,r29,#-8
 7268  00006e18  3c130000	lhi	r19,((LC53_LF3)>>16)&0xffff
 7269  00006e1c  2673fb60	addui	r19,r19,(LC53_LF3)&0xffff
 7270  00006e20  afb30000	sw	(r29),r19
 7271  00006e24  0c0033d0	jal	_printf
 7272  00006e28  54000000	nop; not filled.
 7273  00006e2c  23bd0008	addi	r29,r29,#8
 7274  00006e30          	L346_LF3:
 7275  00006e30  0c001a30	jal	_KbdModuleInit
 7276  00006e34  54000000	nop; not filled.
 7277  00006e38  23bdfff8	addi	r29,r29,#-8
 7278  00006e3c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7279  00006e40  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7280  00006e44  afa20000	sw	(r29),r2
 7281  00006e48  20130069	addi	r19,r0,#105
 7282  00006e4c  afb30004	sw	4(r29),r19
 7283  00006e50  0fffccc8	jal	_dindex
 7284  00006e54  54000000	nop; not filled.
 7285  00006e58  23bd0008	addi	r29,r29,#8
 7286  00006e5c  64210000	snei	r1,r1,#0
 7287  00006e60  1420002c	bnez	r1,L349_LF3
 7288  00006e64  54000000	nop; not filled.
 7289  00006e68  23bdfff8	addi	r29,r29,#-8
 7290  00006e6c  afa20000	sw	(r29),r2
 7291  00006e70  2013002b	addi	r19,r0,#43
 7292  00006e74  afb30004	sw	4(r29),r19
 7293  00006e78  0fffcca0	jal	_dindex
 7294  00006e7c  54000000	nop; not filled.
 7295  00006e80  23bd0008	addi	r29,r29,#8
 7296  00006e84  64210000	snei	r1,r1,#0
 7297  00006e88  10200020	beqz	r1,L348_LF3
 7298  00006e8c  54000000	nop; not filled.
 7299  00006e90          	L349_LF3:
 7300  00006e90  23bdfff8	addi	r29,r29,#-8
 7301  00006e94  3c130000	lhi	r19,((LC54_LF3)>>16)&0xffff
 7302  00006e98  2673fb80	addui	r19,r19,(LC54_LF3)&0xffff
 7303  00006e9c  afb30000	sw	(r29),r19
 7304  00006ea0  0c003354	jal	_printf
 7305  00006ea4  54000000	nop; not filled.
 7306  00006ea8  23bd0008	addi	r29,r29,#8
 7307  00006eac          	L348_LF3:
 7308  00006eac  23c2ff80	addi	r2,r30,#-128
 7309  00006eb0  23c3ffe3	addi	r3,r30,#-29
 7310  00006eb4          	L353_LF3:
 7311  00006eb4  20130061	addi	r19,r0,(#0x61)&0xff
 7312  00006eb8  a0530000	sb	(r2),r19
 7313  00006ebc  20420001	addi	r2,r2,#1
 7314  00006ec0  0043082c	sle	r1,r2,r3
 7315  00006ec4  1420ffec	bnez	r1,L353_LF3
 7316  00006ec8  54000000	nop; not filled.
 7317  00006ecc  23bdfff8	addi	r29,r29,#-8
 7318  00006ed0  3c130000	lhi	r19,((LC55_LF3)>>16)&0xffff
 7319  00006ed4  2673fba0	addui	r19,r19,(LC55_LF3)&0xffff
 7320  00006ed8  afb30000	sw	(r29),r19
 7321  00006edc  20130002	addi	r19,r0,#2
 7322  00006ee0  afb30004	sw	4(r29),r19
 7323  00006ee4  0fffa5b4	jal	_FsOpen
 7324  00006ee8  54000000	nop; not filled.
 7325  00006eec  00014820	add	r9,r0,r1
 7326  00006ef0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7327  00006ef4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7328  00006ef8  afa20000	sw	(r29),r2
 7329  00006efc  20130069	addi	r19,r0,#105
 7330  00006f00  afb30004	sw	4(r29),r19
 7331  00006f04  0fffcc14	jal	_dindex
 7332  00006f08  54000000	nop; not filled.
 7333  00006f0c  23bd0008	addi	r29,r29,#8
 7334  00006f10  64210000	snei	r1,r1,#0
 7335  00006f14  1420002c	bnez	r1,L356_LF3
 7336  00006f18  54000000	nop; not filled.
 7337  00006f1c  23bdfff8	addi	r29,r29,#-8
 7338  00006f20  afa20000	sw	(r29),r2
 7339  00006f24  2013002b	addi	r19,r0,#43
 7340  00006f28  afb30004	sw	4(r29),r19
 7341  00006f2c  0fffcbec	jal	_dindex
 7342  00006f30  54000000	nop; not filled.
 7343  00006f34  23bd0008	addi	r29,r29,#8
 7344  00006f38  64210000	snei	r1,r1,#0
 7345  00006f3c  10200024	beqz	r1,L355_LF3
 7346  00006f40  54000000	nop; not filled.
 7347  00006f44          	L356_LF3:
 7348  00006f44  23bdfff8	addi	r29,r29,#-8
 7349  00006f48  3c130000	lhi	r19,((LC56_LF3)>>16)&0xffff
 7350  00006f4c  2673fba4	addui	r19,r19,(LC56_LF3)&0xffff
 7351  00006f50  afb30000	sw	(r29),r19
 7352  00006f54  afa90004	sw	4(r29),r9
 7353  00006f58  0c00329c	jal	_printf
 7354  00006f5c  54000000	nop; not filled.
 7355  00006f60  23bd0008	addi	r29,r29,#8
 7356  00006f64          	L355_LF3:
 7357  00006f64  23bdfff0	addi	r29,r29,#-16
 7358  00006f68  afa90000	sw	(r29),r9
 7359  00006f6c  20130000	addi	r19,r0,#0
 7360  00006f70  afb30004	sw	4(r29),r19
 7361  00006f74  afb30008	sw	8(r29),r19
 7362  00006f78  0fffab7c	jal	_FsSeek
 7363  00006f7c  54000000	nop; not filled.
 7364  00006f80  afa90000	sw	(r29),r9
 7365  00006f84  23c1ff80	addi	r1,r30,#-128
 7366  00006f88  afa10004	sw	4(r29),r1
 7367  00006f8c  20130050	addi	r19,r0,#80
 7368  00006f90  afb30008	sw	8(r29),r19
 7369  00006f94  0fffaa64	jal	_FsWrite
 7370  00006f98  54000000	nop; not filled.
 7371  00006f9c  afa90000	sw	(r29),r9
 7372  00006fa0  0fffa854	jal	_FsClose
 7373  00006fa4  54000000	nop; not filled.
 7374  00006fa8  23bd0010	addi	r29,r29,#16
 7375  00006fac  66010000	snei	r1,r16,#0
 7376  00006fb0  10200030	beqz	r1,L357_LF3
 7377  00006fb4  54000000	nop; not filled.
 7378  00006fb8  23bdfff0	addi	r29,r29,#-16
 7379  00006fbc  20130000	addi	r19,r0,#0
 7380  00006fc0  afb30000	sw	(r29),r19
 7381  00006fc4  20131234	addi	r19,r0,#4660
 7382  00006fc8  afb30004	sw	4(r29),r19
 7383  00006fcc  afb00008	sw	8(r29),r16
 7384  00006fd0  20130001	addi	r19,r0,#1
 7385  00006fd4  afb3000c	sw	12(r29),r19
 7386  00006fd8  0fffe1b0	jal	_ProcessFork
 7387  00006fdc  54000000	nop; not filled.
 7388  00006fe0  23bd0010	addi	r29,r29,#16
 7389  00006fe4          	L357_LF3:
 7390  00006fe4  0c002da8	jal	_SysprocCreateProcesses
 7391  00006fe8  54000000	nop; not filled.
 7392  00006fec  23bdfff8	addi	r29,r29,#-8
 7393  00006ff0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7394  00006ff4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7395  00006ff8  afa20000	sw	(r29),r2
 7396  00006ffc  20130069	addi	r19,r0,#105
 7397  00007000  afb30004	sw	4(r29),r19
 7398  00007004  0fffcb14	jal	_dindex
 7399  00007008  54000000	nop; not filled.
 7400  0000700c  23bd0008	addi	r29,r29,#8
 7401  00007010  64210000	snei	r1,r1,#0
 7402  00007014  1420002c	bnez	r1,L359_LF3
 7403  00007018  54000000	nop; not filled.
 7404  0000701c  23bdfff8	addi	r29,r29,#-8
 7405  00007020  afa20000	sw	(r29),r2
 7406  00007024  2013002b	addi	r19,r0,#43
 7407  00007028  afb30004	sw	4(r29),r19
 7408  0000702c  0fffcaec	jal	_dindex
 7409  00007030  54000000	nop; not filled.
 7410  00007034  23bd0008	addi	r29,r29,#8
 7411  00007038  64210000	snei	r1,r1,#0
 7412  0000703c  10200020	beqz	r1,L358_LF3
 7413  00007040  54000000	nop; not filled.
 7414  00007044          	L359_LF3:
 7415  00007044  23bdfff8	addi	r29,r29,#-8
 7416  00007048  3c130000	lhi	r19,((LC57_LF3)>>16)&0xffff
 7417  0000704c  2673fbbc	addui	r19,r19,(LC57_LF3)&0xffff
 7418  00007050  afb30000	sw	(r29),r19
 7419  00007054  0c0031a0	jal	_printf
 7420  00007058  54000000	nop; not filled.
 7421  0000705c  23bd0008	addi	r29,r29,#8
 7422  00007060          	L358_LF3:
 7423  00007060  23bdfff8	addi	r29,r29,#-8
 7424  00007064  3c030000	lhi	r3,((_processQuantum_LF3)>>16)&0xffff
 7425  00007068  2463f3b4	addui	r3,r3,(_processQuantum_LF3)&0xffff
 7426  0000706c  8c730000	lw	r19,(r3)
 7427  00007070  afb30000	sw	(r29),r19
 7428  00007074  0c0017b8	jal	_TimerSet
 7429  00007078  54000000	nop; not filled.
 7430  0000707c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7431  00007080  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7432  00007084  afa20000	sw	(r29),r2
 7433  00007088  20130069	addi	r19,r0,#105
 7434  0000708c  afb30004	sw	4(r29),r19
 7435  00007090  0fffca88	jal	_dindex
 7436  00007094  54000000	nop; not filled.
 7437  00007098  23bd0008	addi	r29,r29,#8
 7438  0000709c  64210000	snei	r1,r1,#0
 7439  000070a0  1420002c	bnez	r1,L361_LF3
 7440  000070a4  54000000	nop; not filled.
 7441  000070a8  23bdfff8	addi	r29,r29,#-8
 7442  000070ac  afa20000	sw	(r29),r2
 7443  000070b0  2013002b	addi	r19,r0,#43
 7444  000070b4  afb30004	sw	4(r29),r19
 7445  000070b8  0fffca60	jal	_dindex
 7446  000070bc  54000000	nop; not filled.
 7447  000070c0  23bd0008	addi	r29,r29,#8
 7448  000070c4  64210000	snei	r1,r1,#0
 7449  000070c8  10200028	beqz	r1,L360_LF3
 7450  000070cc  54000000	nop; not filled.
 7451  000070d0          	L361_LF3:
 7452  000070d0  23bdfff8	addi	r29,r29,#-8
 7453  000070d4  3c130000	lhi	r19,((LC58_LF3)>>16)&0xffff
 7454  000070d8  2673fbf0	addui	r19,r19,(LC58_LF3)&0xffff
 7455  000070dc  afb30000	sw	(r29),r19
 7456  000070e0  8c610000	lw	r1,(r3)
 7457  000070e4  afa10004	sw	4(r29),r1
 7458  000070e8  0c00310c	jal	_printf
 7459  000070ec  54000000	nop; not filled.
 7460  000070f0  23bd0008	addi	r29,r29,#8
 7461  000070f4          	L360_LF3:
 7462  000070f4  0c002e8c	jal	_intrreturn
 7463  000070f8  54000000	nop; not filled.
 7464  000070fc  0c0030e0	jal	_exitsim
 7465  00007100  54000000	nop; not filled.
 7466  00007104  0c0030e4	jal	_exit
 7467  00007108  54000000	nop
 7468  0000710c          	.endproc _main
 7469  0000710c          	.align 2
 7470  0000710c          	.proc _GetCurrentPid
 7471  0000710c          	.global _GetCurrentPid
 7472  0000710c          	_GetCurrentPid:
 7473                      ;  Function 'GetCurrentPid'; 0 bytes of locals, 2 regs to save.
 7474  0000710c  afbefffc	sw	-4(r29),r30; push fp
 7475  00007110  001df020	add	r30,r0,r29; fp = sp
 7476  00007114  afbffff8	sw	-8(r29),r31; push ret addr
 7477  00007118  2fbd0010	subui	r29,r29,#16; alloc local storage
 7478  0000711c  afa20000	sw	0(r29),r2
 7479  00007120  afa30004	sw	4(r29),r3
 7480  00007124  3c1f0000	lhi	r31,((_pcbs_LF3)>>16)&0xffff
 7481  00007128  27fffd24	addui	r31,r31,(_pcbs_LF3)&0xffff
 7482  0000712c  20020000	addi	r2,r0,#0
 7483  00007130  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 7484  00007134  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 7485  00007138  8c230000	lw	r3,(r1)
 7486  0000713c  007f0829	sne	r1,r3,r31
 7487  00007140  10200018	beqz	r1,L370_LF3
 7488  00007144  54000000	nop; not filled.
 7489  00007148          	L371_LF3:
 7490  00007148  20420001	addi	r2,r2,#1
 7491  0000714c  23ff00b4	addi	r31,r31,#180
 7492  00007150  03e30829	sne	r1,r31,r3
 7493  00007154  1420fff0	bnez	r1,L371_LF3
 7494  00007158  54000000	nop; not filled.
 7495  0000715c          	L370_LF3:
 7496  0000715c  00020820	add	r1,r0,r2
 7497  00007160  8fa20000	lw	r2,0(r29)
 7498  00007164  8fa30004	lw	r3,4(r29)
 7499  00007168  8fdffff8	lw	r31,-8(r30)
 7500  0000716c  001ee820	add	r29,r0,r30
 7501  00007170  8fdefffc	lw	r30,-4(r30)
 7502  00007174  4be00000	jr	r31
 7503  00007178  54000000	nop
 7504  0000717c          	.endproc _GetCurrentPid
 7505  0000717c          	.data
 7506  0000fc26          	.global _debugstr
 7507  0000fc26          	_debugstr:
 7508  0000fc26          	.space 200
 7509  0000fcee          	.align 2
 7510  0000fcf0          	.global _currentPCB
 7511  0000fcf0          	_currentPCB:
 7512  0000fcf0          	.space 4
 7513  0000fcf4          	.align 2
 7514  0000fcf4          	_freepcbs_LF3:
 7515  0000fcf4          	.space 12
 7516  0000fd00          	.align 2
 7517  0000fd00          	_runQueue_LF3:
 7518  0000fd00          	.space 12
 7519  0000fd0c          	.align 2
 7520  0000fd0c          	_waitQueue_LF3:
 7521  0000fd0c          	.space 12
 7522  0000fd18          	.align 2
 7523  0000fd18          	_zombieQueue_LF3:
 7524  0000fd18          	.space 12
 7525  0000fd24          	.align 2
 7526  0000fd24          	_pcbs_LF3:
 7527  0000fd24          	.space 5760
 7528  000113a4          	.text
 7529  0000717c          	.align 2
 7530  0000717c          	.proc _ProcessExit_LF3
 7531  0000717c          	_ProcessExit_LF3:
 7532                      ;  Function 'ProcessExit'; 0 bytes of locals, 0 regs to save.
 7533  0000717c  afbefffc	sw	-4(r29),r30; push fp
 7534  00007180  001df020	add	r30,r0,r29; fp = sp
 7535  00007184  afbffff8	sw	-8(r29),r31; push ret addr
 7536  00007188  2fbd0008	subui	r29,r29,#8; alloc local storage
 7537  0000718c  0c00305c	jal	_exit
 7538  00007190  54000000	nop; not filled.
 7539  00007194  8fdffff8	lw	r31,-8(r30)
 7540  00007198  001ee820	add	r29,r0,r30
 7541  0000719c  8fdefffc	lw	r30,-4(r30)
 7542  000071a0  4be00000	jr	r31
 7543  000071a4  54000000	nop
 7544  000071a8          	.endproc _ProcessExit_LF3
 7545                      ; Compiled by GCC
 7547  000071a8          	.align 2
 7548  000071a8          	.proc _isspace
 7549  000071a8          	.global _isspace
 7550  000071a8          	_isspace:
 7551                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 7552  000071a8  afbefffc	sw	-4(r29),r30; push fp
 7553  000071ac  001df020	add	r30,r0,r29; fp = sp
 7554  000071b0  afbffff8	sw	-8(r29),r31; push ret addr
 7555  000071b4  2fbd0010	subui	r29,r29,#16; alloc local storage
 7556  000071b8  afa20000	sw	0(r29),r2
 7557  000071bc  83c20003	lb	r2,3(r30)
 7558  000071c0  201f0000	addi	r31,r0,#0
 7559  000071c4  304100ff	andi	r1,r2,#0x00ff
 7560  000071c8  60210020	seqi	r1,r1,#32
 7561  000071cc  14200018	bnez	r1,L6_LF4
 7562  000071d0  54000000	nop; not filled.
 7563  000071d4  2041fff7	addi	r1,r2,#-9
 7564  000071d8  302100ff	andi	r1,r1,#0x00ff
 7565  000071dc  70210001	sleui	r1,r1,#1
 7566  000071e0  10200008	beqz	r1,L5_LF4
 7567  000071e4  54000000	nop; not filled.
 7568  000071e8          	L6_LF4:
 7569  000071e8  201f0001	addi	r31,r0,#1
 7570  000071ec          	L5_LF4:
 7571  000071ec  001f0820	add	r1,r0,r31
 7572  000071f0  8fa20000	lw	r2,0(r29)
 7573  000071f4  8fdffff8	lw	r31,-8(r30)
 7574  000071f8  001ee820	add	r29,r0,r30
 7575  000071fc  8fdefffc	lw	r30,-4(r30)
 7576  00007200  4be00000	jr	r31
 7577  00007204  54000000	nop
 7578  00007208          	.endproc _isspace
 7579  00007208          	.align 2
 7580  00007208          	.proc _isxdigit
 7581  00007208          	.global _isxdigit
 7582  00007208          	_isxdigit:
 7583                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 7584  00007208  afbefffc	sw	-4(r29),r30; push fp
 7585  0000720c  001df020	add	r30,r0,r29; fp = sp
 7586  00007210  afbffff8	sw	-8(r29),r31; push ret addr
 7587  00007214  2fbd0010	subui	r29,r29,#16; alloc local storage
 7588  00007218  afa20000	sw	0(r29),r2
 7589  0000721c  83df0003	lb	r31,3(r30)
 7590  00007220  20020000	addi	r2,r0,#0
 7591  00007224  23e1ffd0	addi	r1,r31,#-48
 7592  00007228  302100ff	andi	r1,r1,#0x00ff
 7593  0000722c  70210009	sleui	r1,r1,#9
 7594  00007230  14200028	bnez	r1,L12_LF4
 7595  00007234  54000000	nop; not filled.
 7596  00007238  23e1ff9f	addi	r1,r31,#-97
 7597  0000723c  302100ff	andi	r1,r1,#0x00ff
 7598  00007240  70210005	sleui	r1,r1,#5
 7599  00007244  14200014	bnez	r1,L12_LF4
 7600  00007248  54000000	nop; not filled.
 7601  0000724c  33e100ff	andi	r1,r31,#0x00ff
 7602  00007250  64210041	snei	r1,r1,#65
 7603  00007254  14200008	bnez	r1,L11_LF4
 7604  00007258  54000000	nop; not filled.
 7605  0000725c          	L12_LF4:
 7606  0000725c  20020001	addi	r2,r0,#1
 7607  00007260          	L11_LF4:
 7608  00007260  00020820	add	r1,r0,r2
 7609  00007264  8fa20000	lw	r2,0(r29)
 7610  00007268  8fdffff8	lw	r31,-8(r30)
 7611  0000726c  001ee820	add	r29,r0,r30
 7612  00007270  8fdefffc	lw	r30,-4(r30)
 7613  00007274  4be00000	jr	r31
 7614  00007278  54000000	nop
 7615  0000727c          	.endproc _isxdigit
 7616  0000727c          	.align 2
 7617  0000727c          	.proc _DisableIntrs
 7618  0000727c          	.global _DisableIntrs
 7619  0000727c          	_DisableIntrs:
 7620                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 7621  0000727c  afbefffc	sw	-4(r29),r30; push fp
 7622  00007280  001df020	add	r30,r0,r29; fp = sp
 7623  00007284  afbffff8	sw	-8(r29),r31; push ret addr
 7624  00007288  2fbd0010	subui	r29,r29,#16; alloc local storage
 7625  0000728c  afa20000	sw	0(r29),r2
 7626  00007290  23bdfff8	addi	r29,r29,#-8
 7627  00007294  2002000f	addi	r2,r0,#15
 7628  00007298  afa20000	sw	(r29),r2
 7629  0000729c  0c002e04	jal	_SetIntrs
 7630  000072a0  54000000	nop; not filled.
 7631  000072a4  23bd0008	addi	r29,r29,#8
 7632  000072a8  8fa20000	lw	r2,0(r29)
 7633  000072ac  8fdffff8	lw	r31,-8(r30)
 7634  000072b0  001ee820	add	r29,r0,r30
 7635  000072b4  8fdefffc	lw	r30,-4(r30)
 7636  000072b8  4be00000	jr	r31
 7637  000072bc  54000000	nop
 7638  000072c0          	.endproc _DisableIntrs
 7639  000072c0          	.align 2
 7640  000072c0          	.proc _EnableIntrs
 7641  000072c0          	.global _EnableIntrs
 7642  000072c0          	_EnableIntrs:
 7643                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 7644  000072c0  afbefffc	sw	-4(r29),r30; push fp
 7645  000072c4  001df020	add	r30,r0,r29; fp = sp
 7646  000072c8  afbffff8	sw	-8(r29),r31; push ret addr
 7647  000072cc  2fbd0010	subui	r29,r29,#16; alloc local storage
 7648  000072d0  afa20000	sw	0(r29),r2
 7649  000072d4  23bdfff8	addi	r29,r29,#-8
 7650  000072d8  20020000	addi	r2,r0,#0
 7651  000072dc  afa20000	sw	(r29),r2
 7652  000072e0  0c002dc0	jal	_SetIntrs
 7653  000072e4  54000000	nop; not filled.
 7654  000072e8  23bd0008	addi	r29,r29,#8
 7655  000072ec  8fa20000	lw	r2,0(r29)
 7656  000072f0  8fdffff8	lw	r31,-8(r30)
 7657  000072f4  001ee820	add	r29,r0,r30
 7658  000072f8  8fdefffc	lw	r30,-4(r30)
 7659  000072fc  4be00000	jr	r31
 7660  00007300  54000000	nop
 7661  00007304          	.endproc _EnableIntrs
 7662  00007304          	.align 2
 7663  00007304          	.proc _RestoreIntrs
 7664  00007304          	.global _RestoreIntrs
 7665  00007304          	_RestoreIntrs:
 7666                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 7667  00007304  afbefffc	sw	-4(r29),r30; push fp
 7668  00007308  001df020	add	r30,r0,r29; fp = sp
 7669  0000730c  afbffff8	sw	-8(r29),r31; push ret addr
 7670  00007310  2fbd0010	subui	r29,r29,#16; alloc local storage
 7671  00007314  afa20000	sw	0(r29),r2
 7672  00007318  23bdfff8	addi	r29,r29,#-8
 7673  0000731c  8fc20000	lw	r2,(r30)
 7674  00007320  afa20000	sw	(r29),r2
 7675  00007324  0c002d7c	jal	_SetIntrs
 7676  00007328  54000000	nop; not filled.
 7677  0000732c  23bd0008	addi	r29,r29,#8
 7678  00007330  8fa20000	lw	r2,0(r29)
 7679  00007334  8fdffff8	lw	r31,-8(r30)
 7680  00007338  001ee820	add	r29,r0,r30
 7681  0000733c  8fdefffc	lw	r30,-4(r30)
 7682  00007340  4be00000	jr	r31
 7683  00007344  54000000	nop
 7684  00007348          	.endproc _RestoreIntrs
 7685  00007348          	.align 2
 7686  00007348          	.proc _QueueLinkInit
 7687  00007348          	.global _QueueLinkInit
 7688  00007348          	_QueueLinkInit:
 7689                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 7690  00007348  afbefffc	sw	-4(r29),r30; push fp
 7691  0000734c  001df020	add	r30,r0,r29; fp = sp
 7692  00007350  afbffff8	sw	-8(r29),r31; push ret addr
 7693  00007354  2fbd0010	subui	r29,r29,#16; alloc local storage
 7694  00007358  afa20000	sw	0(r29),r2
 7695  0000735c  8fc10000	lw	r1,(r30)
 7696  00007360  8fc20004	lw	r2,4(r30)
 7697  00007364  201f0000	addi	r31,r0,#0
 7698  00007368  ac3f0000	sw	(r1),r31
 7699  0000736c  ac22000c	sw	12(r1),r2
 7700  00007370  8fa20000	lw	r2,0(r29)
 7701  00007374  8fdffff8	lw	r31,-8(r30)
 7702  00007378  001ee820	add	r29,r0,r30
 7703  0000737c  8fdefffc	lw	r30,-4(r30)
 7704  00007380  4be00000	jr	r31
 7705  00007384  54000000	nop
 7706  00007388          	.endproc _QueueLinkInit
 7707  00007388          	.align 2
 7708  00007388          	.proc _QueueNext
 7709  00007388          	.global _QueueNext
 7710  00007388          	_QueueNext:
 7711                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 7712  00007388  afbefffc	sw	-4(r29),r30; push fp
 7713  0000738c  001df020	add	r30,r0,r29; fp = sp
 7714  00007390  afbffff8	sw	-8(r29),r31; push ret addr
 7715  00007394  2fbd0008	subui	r29,r29,#8; alloc local storage
 7716  00007398  8fc10000	lw	r1,(r30)
 7717  0000739c  8c210000	lw	r1,(r1)
 7718  000073a0  8fdffff8	lw	r31,-8(r30)
 7719  000073a4  001ee820	add	r29,r0,r30
 7720  000073a8  8fdefffc	lw	r30,-4(r30)
 7721  000073ac  4be00000	jr	r31
 7722  000073b0  54000000	nop
 7723  000073b4          	.endproc _QueueNext
 7724  000073b4          	.align 2
 7725  000073b4          	.proc _QueuePrev
 7726  000073b4          	.global _QueuePrev
 7727  000073b4          	_QueuePrev:
 7728                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 7729  000073b4  afbefffc	sw	-4(r29),r30; push fp
 7730  000073b8  001df020	add	r30,r0,r29; fp = sp
 7731  000073bc  afbffff8	sw	-8(r29),r31; push ret addr
 7732  000073c0  2fbd0008	subui	r29,r29,#8; alloc local storage
 7733  000073c4  8fc10000	lw	r1,(r30)
 7734  000073c8  8c210004	lw	r1,4(r1)
 7735  000073cc  8fdffff8	lw	r31,-8(r30)
 7736  000073d0  001ee820	add	r29,r0,r30
 7737  000073d4  8fdefffc	lw	r30,-4(r30)
 7738  000073d8  4be00000	jr	r31
 7739  000073dc  54000000	nop
 7740  000073e0          	.endproc _QueuePrev
 7741  000073e0          	.align 2
 7742  000073e0          	.proc _QueueFirst
 7743  000073e0          	.global _QueueFirst
 7744  000073e0          	_QueueFirst:
 7745                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 7746  000073e0  afbefffc	sw	-4(r29),r30; push fp
 7747  000073e4  001df020	add	r30,r0,r29; fp = sp
 7748  000073e8  afbffff8	sw	-8(r29),r31; push ret addr
 7749  000073ec  2fbd0008	subui	r29,r29,#8; alloc local storage
 7750  000073f0  8fc10000	lw	r1,(r30)
 7751  000073f4  8c210000	lw	r1,(r1)
 7752  000073f8  8fdffff8	lw	r31,-8(r30)
 7753  000073fc  001ee820	add	r29,r0,r30
 7754  00007400  8fdefffc	lw	r30,-4(r30)
 7755  00007404  4be00000	jr	r31
 7756  00007408  54000000	nop
 7757  0000740c          	.endproc _QueueFirst
 7758  0000740c          	.align 2
 7759  0000740c          	.proc _QueueLast
 7760  0000740c          	.global _QueueLast
 7761  0000740c          	_QueueLast:
 7762                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 7763  0000740c  afbefffc	sw	-4(r29),r30; push fp
 7764  00007410  001df020	add	r30,r0,r29; fp = sp
 7765  00007414  afbffff8	sw	-8(r29),r31; push ret addr
 7766  00007418  2fbd0008	subui	r29,r29,#8; alloc local storage
 7767  0000741c  8fc10000	lw	r1,(r30)
 7768  00007420  8c210004	lw	r1,4(r1)
 7769  00007424  8fdffff8	lw	r31,-8(r30)
 7770  00007428  001ee820	add	r29,r0,r30
 7771  0000742c  8fdefffc	lw	r30,-4(r30)
 7772  00007430  4be00000	jr	r31
 7773  00007434  54000000	nop
 7774  00007438          	.endproc _QueueLast
 7775  00007438          	.align 2
 7776  00007438          	.proc _QueueInsertAfter
 7777  00007438          	.global _QueueInsertAfter
 7778  00007438          	_QueueInsertAfter:
 7779                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 7780  00007438  afbefffc	sw	-4(r29),r30; push fp
 7781  0000743c  001df020	add	r30,r0,r29; fp = sp
 7782  00007440  afbffff8	sw	-8(r29),r31; push ret addr
 7783  00007444  2fbd0010	subui	r29,r29,#16; alloc local storage
 7784  00007448  afa20000	sw	0(r29),r2
 7785  0000744c  afa30004	sw	4(r29),r3
 7786  00007450  8fc30000	lw	r3,(r30)
 7787  00007454  8fc20004	lw	r2,4(r30)
 7788  00007458  8fc10008	lw	r1,8(r30)
 7789  0000745c  ac230008	sw	8(r1),r3
 7790  00007460  ac220004	sw	4(r1),r2
 7791  00007464  8c5f0000	lw	r31,(r2)
 7792  00007468  ac3f0000	sw	(r1),r31
 7793  0000746c  ac410000	sw	(r2),r1
 7794  00007470  8c220000	lw	r2,(r1)
 7795  00007474  ac410004	sw	4(r2),r1
 7796  00007478  8c610008	lw	r1,8(r3)
 7797  0000747c  20210001	addi	r1,r1,#1
 7798  00007480  ac610008	sw	8(r3),r1
 7799  00007484  8fa20000	lw	r2,0(r29)
 7800  00007488  8fa30004	lw	r3,4(r29)
 7801  0000748c  8fdffff8	lw	r31,-8(r30)
 7802  00007490  001ee820	add	r29,r0,r30
 7803  00007494  8fdefffc	lw	r30,-4(r30)
 7804  00007498  4be00000	jr	r31
 7805  0000749c  54000000	nop
 7806  000074a0          	.endproc _QueueInsertAfter
 7807  000074a0          	.align 2
 7808  000074a0          	.proc _QueueInsertFirst
 7809  000074a0          	.global _QueueInsertFirst
 7810  000074a0          	_QueueInsertFirst:
 7811                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 7812  000074a0  afbefffc	sw	-4(r29),r30; push fp
 7813  000074a4  001df020	add	r30,r0,r29; fp = sp
 7814  000074a8  afbffff8	sw	-8(r29),r31; push ret addr
 7815  000074ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 7816  000074b0  afa20000	sw	0(r29),r2
 7817  000074b4  afa30004	sw	4(r29),r3
 7818  000074b8  8fc30000	lw	r3,(r30)
 7819  000074bc  8fc10004	lw	r1,4(r30)
 7820  000074c0  ac230008	sw	8(r1),r3
 7821  000074c4  ac230004	sw	4(r1),r3
 7822  000074c8  8c7f0000	lw	r31,(r3)
 7823  000074cc  ac3f0000	sw	(r1),r31
 7824  000074d0  ac610000	sw	(r3),r1
 7825  000074d4  8c220000	lw	r2,(r1)
 7826  000074d8  ac410004	sw	4(r2),r1
 7827  000074dc  8c610008	lw	r1,8(r3)
 7828  000074e0  20210001	addi	r1,r1,#1
 7829  000074e4  ac610008	sw	8(r3),r1
 7830  000074e8  8fa20000	lw	r2,0(r29)
 7831  000074ec  8fa30004	lw	r3,4(r29)
 7832  000074f0  8fdffff8	lw	r31,-8(r30)
 7833  000074f4  001ee820	add	r29,r0,r30
 7834  000074f8  8fdefffc	lw	r30,-4(r30)
 7835  000074fc  4be00000	jr	r31
 7836  00007500  54000000	nop
 7837  00007504          	.endproc _QueueInsertFirst
 7838  00007504          	.align 2
 7839  00007504          	.proc _QueueInsertLast
 7840  00007504          	.global _QueueInsertLast
 7841  00007504          	_QueueInsertLast:
 7842                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 7843  00007504  afbefffc	sw	-4(r29),r30; push fp
 7844  00007508  001df020	add	r30,r0,r29; fp = sp
 7845  0000750c  afbffff8	sw	-8(r29),r31; push ret addr
 7846  00007510  2fbd0010	subui	r29,r29,#16; alloc local storage
 7847  00007514  afa20000	sw	0(r29),r2
 7848  00007518  afa30004	sw	4(r29),r3
 7849  0000751c  8fc30000	lw	r3,(r30)
 7850  00007520  8fc10004	lw	r1,4(r30)
 7851  00007524  8c620004	lw	r2,4(r3)
 7852  00007528  ac230008	sw	8(r1),r3
 7853  0000752c  ac220004	sw	4(r1),r2
 7854  00007530  8c5f0000	lw	r31,(r2)
 7855  00007534  ac3f0000	sw	(r1),r31
 7856  00007538  ac410000	sw	(r2),r1
 7857  0000753c  8c220000	lw	r2,(r1)
 7858  00007540  ac410004	sw	4(r2),r1
 7859  00007544  8c610008	lw	r1,8(r3)
 7860  00007548  20210001	addi	r1,r1,#1
 7861  0000754c  ac610008	sw	8(r3),r1
 7862  00007550  8fa20000	lw	r2,0(r29)
 7863  00007554  8fa30004	lw	r3,4(r29)
 7864  00007558  8fdffff8	lw	r31,-8(r30)
 7865  0000755c  001ee820	add	r29,r0,r30
 7866  00007560  8fdefffc	lw	r30,-4(r30)
 7867  00007564  4be00000	jr	r31
 7868  00007568  54000000	nop
 7869  0000756c          	.endproc _QueueInsertLast
 7870  0000756c          	.align 2
 7871  0000756c          	.proc _QueueRemove
 7872  0000756c          	.global _QueueRemove
 7873  0000756c          	_QueueRemove:
 7874                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 7875  0000756c  afbefffc	sw	-4(r29),r30; push fp
 7876  00007570  001df020	add	r30,r0,r29; fp = sp
 7877  00007574  afbffff8	sw	-8(r29),r31; push ret addr
 7878  00007578  2fbd0010	subui	r29,r29,#16; alloc local storage
 7879  0000757c  afa20000	sw	0(r29),r2
 7880  00007580  afa30004	sw	4(r29),r3
 7881  00007584  8fdf0000	lw	r31,(r30)
 7882  00007588  8fe10008	lw	r1,8(r31)
 7883  0000758c  8c210008	lw	r1,8(r1)
 7884  00007590  6c210000	sgti	r1,r1,#0
 7885  00007594  1020002c	beqz	r1,L44_LF4
 7886  00007598  54000000	nop; not filled.
 7887  0000759c  8fe10004	lw	r1,4(r31)
 7888  000075a0  8fe30000	lw	r3,(r31)
 7889  000075a4  ac230000	sw	(r1),r3
 7890  000075a8  8fe10000	lw	r1,(r31)
 7891  000075ac  8fe30004	lw	r3,4(r31)
 7892  000075b0  ac230004	sw	4(r1),r3
 7893  000075b4  8fe20008	lw	r2,8(r31)
 7894  000075b8  8c410008	lw	r1,8(r2)
 7895  000075bc  2021ffff	addi	r1,r1,#-1
 7896  000075c0  ac410008	sw	8(r2),r1
 7897  000075c4          	L44_LF4:
 7898  000075c4  20030000	addi	r3,r0,#0
 7899  000075c8  afe30000	sw	(r31),r3
 7900  000075cc  8fa20000	lw	r2,0(r29)
 7901  000075d0  8fa30004	lw	r3,4(r29)
 7902  000075d4  8fdffff8	lw	r31,-8(r30)
 7903  000075d8  001ee820	add	r29,r0,r30
 7904  000075dc  8fdefffc	lw	r30,-4(r30)
 7905  000075e0  4be00000	jr	r31
 7906  000075e4  54000000	nop
 7907  000075e8          	.endproc _QueueRemove
 7908  000075e8          	.align 2
 7909  000075e8          	.proc _QueueLength
 7910  000075e8          	.global _QueueLength
 7911  000075e8          	_QueueLength:
 7912                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 7913  000075e8  afbefffc	sw	-4(r29),r30; push fp
 7914  000075ec  001df020	add	r30,r0,r29; fp = sp
 7915  000075f0  afbffff8	sw	-8(r29),r31; push ret addr
 7916  000075f4  2fbd0008	subui	r29,r29,#8; alloc local storage
 7917  000075f8  8fc10000	lw	r1,(r30)
 7918  000075fc  8c210008	lw	r1,8(r1)
 7919  00007600  8fdffff8	lw	r31,-8(r30)
 7920  00007604  001ee820	add	r29,r0,r30
 7921  00007608  8fdefffc	lw	r30,-4(r30)
 7922  0000760c  4be00000	jr	r31
 7923  00007610  54000000	nop
 7924  00007614          	.endproc _QueueLength
 7925  00007614          	.align 2
 7926  00007614          	.proc _QueueEmpty
 7927  00007614          	.global _QueueEmpty
 7928  00007614          	_QueueEmpty:
 7929                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 7930  00007614  afbefffc	sw	-4(r29),r30; push fp
 7931  00007618  001df020	add	r30,r0,r29; fp = sp
 7932  0000761c  afbffff8	sw	-8(r29),r31; push ret addr
 7933  00007620  2fbd0008	subui	r29,r29,#8; alloc local storage
 7934  00007624  8fc10000	lw	r1,(r30)
 7935  00007628  8c210008	lw	r1,8(r1)
 7936  0000762c  60210000	seqi	r1,r1,#0
 7937  00007630  8fdffff8	lw	r31,-8(r30)
 7938  00007634  001ee820	add	r29,r0,r30
 7939  00007638  8fdefffc	lw	r30,-4(r30)
 7940  0000763c  4be00000	jr	r31
 7941  00007640  54000000	nop
 7942  00007644          	.endproc _QueueEmpty
 7943  00007644          	.data
 7944  000113a4          	.align 2
 7945  000113a4          	LC0_LF4:
 7946  000113a4  496e6974	.ascii "Initializing queue link %d.\n\000"
 7946  000113a8  69616c69	
 7946  000113ac  7a696e67	
 7946  000113b0  20717565	
 7946  000113b4  7565206c	
 7946  000113b8  696e6b20	
 7946  000113bc  25642e0a	
 7946  000113c0  00      	
 7947  000113c1          	.text
 7948  00007644          	.align 2
 7949  00007644          	.proc _QueueModuleInit
 7950  00007644          	.global _QueueModuleInit
 7951  00007644          	_QueueModuleInit:
 7952                      ;  Function 'QueueModuleInit'; 0 bytes of locals, 4 regs to save.
 7953  00007644  afbefffc	sw	-4(r29),r30; push fp
 7954  00007648  001df020	add	r30,r0,r29; fp = sp
 7955  0000764c  afbffff8	sw	-8(r29),r31; push ret addr
 7956  00007650  2fbd0018	subui	r29,r29,#24; alloc local storage
 7957  00007654  afa20000	sw	0(r29),r2
 7958  00007658  afa30004	sw	4(r29),r3
 7959  0000765c  afa40008	sw	8(r29),r4
 7960  00007660  afa5000c	sw	12(r29),r5
 7961  00007664  23bdfff8	addi	r29,r29,#-8
 7962  00007668  3c050001	lhi	r5,((_freeLinks)>>16)&0xffff
 7963  0000766c  24a51410	addui	r5,r5,(_freeLinks)&0xffff
 7964  00007670  afa50000	sw	(r29),r5
 7965  00007674  0c0000e0	jal	_QueueInit
 7966  00007678  54000000	nop; not filled.
 7967  0000767c  20030000	addi	r3,r0,#0
 7968  00007680  23bd0008	addi	r29,r29,#8
 7969  00007684  3c040000	lhi	r4,((_debugstr)>>16)&0xffff
 7970  00007688  2484fc26	addui	r4,r4,(_debugstr)&0xffff
 7971  0000768c  3c020001	lhi	r2,((_linkpool_LF4)>>16)&0xffff
 7972  00007690  2442141c	addui	r2,r2,(_linkpool_LF4)&0xffff
 7973  00007694          	L63_LF4:
 7974  00007694  23bdfff8	addi	r29,r29,#-8
 7975  00007698  afa40000	sw	(r29),r4
 7976  0000769c  20050069	addi	r5,r0,#105
 7977  000076a0  afa50004	sw	4(r29),r5
 7978  000076a4  0fffc474	jal	_dindex
 7979  000076a8  54000000	nop; not filled.
 7980  000076ac  23bd0008	addi	r29,r29,#8
 7981  000076b0  64210000	snei	r1,r1,#0
 7982  000076b4  1420002c	bnez	r1,L65_LF4
 7983  000076b8  54000000	nop; not filled.
 7984  000076bc  23bdfff8	addi	r29,r29,#-8
 7985  000076c0  afa40000	sw	(r29),r4
 7986  000076c4  2005002b	addi	r5,r0,#43
 7987  000076c8  afa50004	sw	4(r29),r5
 7988  000076cc  0fffc44c	jal	_dindex
 7989  000076d0  54000000	nop; not filled.
 7990  000076d4  23bd0008	addi	r29,r29,#8
 7991  000076d8  64210000	snei	r1,r1,#0
 7992  000076dc  10200024	beqz	r1,L64_LF4
 7993  000076e0  54000000	nop; not filled.
 7994  000076e4          	L65_LF4:
 7995  000076e4  23bdfff8	addi	r29,r29,#-8
 7996  000076e8  3c050001	lhi	r5,((LC0_LF4)>>16)&0xffff
 7997  000076ec  24a513a4	addui	r5,r5,(LC0_LF4)&0xffff
 7998  000076f0  afa50000	sw	(r29),r5
 7999  000076f4  afa30004	sw	4(r29),r3
 8000  000076f8  0c002afc	jal	_printf
 8001  000076fc  54000000	nop; not filled.
 8002  00007700  23bd0008	addi	r29,r29,#8
 8003  00007704          	L64_LF4:
 8004  00007704  20050000	addi	r5,r0,#0
 8005  00007708  ac450000	sw	(r2),r5
 8006  0000770c  23bdfff8	addi	r29,r29,#-8
 8007  00007710  afa20000	sw	(r29),r2
 8008  00007714  0c000078	jal	_QueueFreeLink
 8009  00007718  54000000	nop; not filled.
 8010  0000771c  23bd0008	addi	r29,r29,#8
 8011  00007720  20420010	addi	r2,r2,#16
 8012  00007724  20630001	addi	r3,r3,#1
 8013  00007728  7061018f	slei	r1,r3,#399
 8014  0000772c  1420ff64	bnez	r1,L63_LF4
 8015  00007730  54000000	nop; not filled.
 8016  00007734  8fa20000	lw	r2,0(r29)
 8017  00007738  8fa30004	lw	r3,4(r29)
 8018  0000773c  8fa40008	lw	r4,8(r29)
 8019  00007740  8fa5000c	lw	r5,12(r29)
 8020  00007744  8fdffff8	lw	r31,-8(r30)
 8021  00007748  001ee820	add	r29,r0,r30
 8022  0000774c  8fdefffc	lw	r30,-4(r30)
 8023  00007750  4be00000	jr	r31
 8024  00007754  54000000	nop
 8025  00007758          	.endproc _QueueModuleInit
 8026  00007758          	.align 2
 8027  00007758          	.proc _QueueInit
 8028  00007758          	.global _QueueInit
 8029  00007758          	_QueueInit:
 8030                      ;  Function 'QueueInit'; 0 bytes of locals, 0 regs to save.
 8031  00007758  afbefffc	sw	-4(r29),r30; push fp
 8032  0000775c  001df020	add	r30,r0,r29; fp = sp
 8033  00007760  afbffff8	sw	-8(r29),r31; push ret addr
 8034  00007764  2fbd0008	subui	r29,r29,#8; alloc local storage
 8035  00007768  8fc10000	lw	r1,(r30)
 8036  0000776c  ac210000	sw	(r1),r1
 8037  00007770  ac210004	sw	4(r1),r1
 8038  00007774  201f0000	addi	r31,r0,#0
 8039  00007778  ac3f0008	sw	8(r1),r31
 8040  0000777c  8fdffff8	lw	r31,-8(r30)
 8041  00007780  001ee820	add	r29,r0,r30
 8042  00007784  8fdefffc	lw	r30,-4(r30)
 8043  00007788  4be00000	jr	r31
 8044  0000778c  54000000	nop
 8045  00007790          	.endproc _QueueInit
 8046  00007790          	.data
 8047  000113c1          	.align 2
 8048  000113c4          	LC1_LF4:
 8049  000113c4  25733a20	.ascii "%s: %s\n\000"
 8049  000113c8  25730a00	
 8050  000113cc          	.align 2
 8051  000113cc          	LC2_LF4:
 8052  000113cc  51756575	.ascii "QueueFreeLink\000"
 8052  000113d0  65467265	
 8052  000113d4  654c696e	
 8052  000113d8  6b00    	
 8053  000113da          	.align 2
 8054  000113dc          	LC3_LF4:
 8055  000113dc  4c696e6b	.ascii "Link not empty\000"
 8055  000113e0  206e6f74	
 8055  000113e4  20656d70	
 8055  000113e8  747900  	
 8056  000113eb          	.text
 8057  00007790          	.align 2
 8058  00007790          	.proc _QueueFreeLink
 8059  00007790          	.global _QueueFreeLink
 8060  00007790          	_QueueFreeLink:
 8061                      ;  Function 'QueueFreeLink'; 0 bytes of locals, 3 regs to save.
 8062  00007790  afbefffc	sw	-4(r29),r30; push fp
 8063  00007794  001df020	add	r30,r0,r29; fp = sp
 8064  00007798  afbffff8	sw	-8(r29),r31; push ret addr
 8065  0000779c  2fbd0018	subui	r29,r29,#24; alloc local storage
 8066  000077a0  afa20000	sw	0(r29),r2
 8067  000077a4  afa30004	sw	4(r29),r3
 8068  000077a8  afa40008	sw	8(r29),r4
 8069  000077ac  8fc30000	lw	r3,(r30)
 8070  000077b0  8c610000	lw	r1,(r3)
 8071  000077b4  64210000	snei	r1,r1,#0
 8072  000077b8  10200038	beqz	r1,L77_LF4
 8073  000077bc  54000000	nop; not filled.
 8074  000077c0  23bdfff0	addi	r29,r29,#-16
 8075  000077c4  3c040001	lhi	r4,((LC1_LF4)>>16)&0xffff
 8076  000077c8  248413c4	addui	r4,r4,(LC1_LF4)&0xffff
 8077  000077cc  afa40000	sw	(r29),r4
 8078  000077d0  3c010001	lhi	r1,((LC2_LF4)>>16)&0xffff
 8079  000077d4  242113cc	addui	r1,r1,(LC2_LF4)&0xffff
 8080  000077d8  afa10004	sw	4(r29),r1
 8081  000077dc  3c040001	lhi	r4,((LC3_LF4)>>16)&0xffff
 8082  000077e0  248413dc	addui	r4,r4,(LC3_LF4)&0xffff
 8083  000077e4  afa40008	sw	8(r29),r4
 8084  000077e8  0c002a0c	jal	_printf
 8085  000077ec  54000000	nop; not filled.
 8086  000077f0  23bd0010	addi	r29,r29,#16
 8087  000077f4          	L77_LF4:
 8088  000077f4  3c020001	lhi	r2,((_freeLinks)>>16)&0xffff
 8089  000077f8  24421410	addui	r2,r2,(_freeLinks)&0xffff
 8090  000077fc  8c410004	lw	r1,4(r2)
 8091  00007800  ac620008	sw	8(r3),r2
 8092  00007804  ac610004	sw	4(r3),r1
 8093  00007808  8c240000	lw	r4,(r1)
 8094  0000780c  ac640000	sw	(r3),r4
 8095  00007810  ac230000	sw	(r1),r3
 8096  00007814  8c610000	lw	r1,(r3)
 8097  00007818  ac230004	sw	4(r1),r3
 8098  0000781c  8c410008	lw	r1,8(r2)
 8099  00007820  20210001	addi	r1,r1,#1
 8100  00007824  ac410008	sw	8(r2),r1
 8101  00007828  8fa20000	lw	r2,0(r29)
 8102  0000782c  8fa30004	lw	r3,4(r29)
 8103  00007830  8fa40008	lw	r4,8(r29)
 8104  00007834  8fdffff8	lw	r31,-8(r30)
 8105  00007838  001ee820	add	r29,r0,r30
 8106  0000783c  8fdefffc	lw	r30,-4(r30)
 8107  00007840  4be00000	jr	r31
 8108  00007844  54000000	nop
 8109  00007848          	.endproc _QueueFreeLink
 8110  00007848          	.data
 8111  000113eb          	.align 2
 8112  000113ec          	LC4_LF4:
 8113  000113ec  51756575	.ascii "QueueAllocLink\000"
 8113  000113f0  65416c6c	
 8113  000113f4  6f634c69	
 8113  000113f8  6e6b00  	
 8114  000113fb          	.align 2
 8115  000113fc          	LC5_LF4:
 8116  000113fc  4c696e6b	.ascii "Link not allocated!\000"
 8116  00011400  206e6f74	
 8116  00011404  20616c6c	
 8116  00011408  6f636174	
 8116  0001140c  65642100	
 8117  00011410          	.text
 8118  00007848          	.align 2
 8119  00007848          	.proc _QueueAllocLink
 8120  00007848          	.global _QueueAllocLink
 8121  00007848          	_QueueAllocLink:
 8122                      ;  Function 'QueueAllocLink'; 0 bytes of locals, 3 regs to save.
 8123  00007848  afbefffc	sw	-4(r29),r30; push fp
 8124  0000784c  001df020	add	r30,r0,r29; fp = sp
 8125  00007850  afbffff8	sw	-8(r29),r31; push ret addr
 8126  00007854  2fbd0018	subui	r29,r29,#24; alloc local storage
 8127  00007858  afa20000	sw	0(r29),r2
 8128  0000785c  afa30004	sw	4(r29),r3
 8129  00007860  afa40008	sw	8(r29),r4
 8130  00007864  3c020001	lhi	r2,((_freeLinks)>>16)&0xffff
 8131  00007868  24421410	addui	r2,r2,(_freeLinks)&0xffff
 8132  0000786c  8c410008	lw	r1,8(r2)
 8133  00007870  60210000	seqi	r1,r1,#0
 8134  00007874  14200054	bnez	r1,L92_LF4
 8135  00007878  54000000	nop; not filled.
 8136  0000787c  8c430000	lw	r3,(r2)
 8137  00007880  8c610008	lw	r1,8(r3)
 8138  00007884  8c210008	lw	r1,8(r1)
 8139  00007888  6c210000	sgti	r1,r1,#0
 8140  0000788c  1020002c	beqz	r1,L97_LF4
 8141  00007890  54000000	nop; not filled.
 8142  00007894  8c610004	lw	r1,4(r3)
 8143  00007898  8c640000	lw	r4,(r3)
 8144  0000789c  ac240000	sw	(r1),r4
 8145  000078a0  8c610000	lw	r1,(r3)
 8146  000078a4  8c640004	lw	r4,4(r3)
 8147  000078a8  ac240004	sw	4(r1),r4
 8148  000078ac  8c620008	lw	r2,8(r3)
 8149  000078b0  8c410008	lw	r1,8(r2)
 8150  000078b4  2021ffff	addi	r1,r1,#-1
 8151  000078b8  ac410008	sw	8(r2),r1
 8152  000078bc          	L97_LF4:
 8153  000078bc  20040000	addi	r4,r0,#0
 8154  000078c0  ac640000	sw	(r3),r4
 8155  000078c4  08000008	j	L98_LF4
 8156  000078c8  54000000	nop; not filled.
 8157  000078cc          	L92_LF4:
 8158  000078cc  20030000	addi	r3,r0,#0
 8159  000078d0          	L98_LF4:
 8160  000078d0  64610000	snei	r1,r3,#0
 8161  000078d4  14200038	bnez	r1,L100_LF4
 8162  000078d8  54000000	nop; not filled.
 8163  000078dc  23bdfff0	addi	r29,r29,#-16
 8164  000078e0  3c040001	lhi	r4,((LC1_LF4)>>16)&0xffff
 8165  000078e4  248413c4	addui	r4,r4,(LC1_LF4)&0xffff
 8166  000078e8  afa40000	sw	(r29),r4
 8167  000078ec  3c010001	lhi	r1,((LC4_LF4)>>16)&0xffff
 8168  000078f0  242113ec	addui	r1,r1,(LC4_LF4)&0xffff
 8169  000078f4  afa10004	sw	4(r29),r1
 8170  000078f8  3c040001	lhi	r4,((LC5_LF4)>>16)&0xffff
 8171  000078fc  248413fc	addui	r4,r4,(LC5_LF4)&0xffff
 8172  00007900  afa40008	sw	8(r29),r4
 8173  00007904  0c0028f0	jal	_printf
 8174  00007908  54000000	nop; not filled.
 8175  0000790c  23bd0010	addi	r29,r29,#16
 8176  00007910          	L100_LF4:
 8177  00007910  00030820	add	r1,r0,r3
 8178  00007914  8fa20000	lw	r2,0(r29)
 8179  00007918  8fa30004	lw	r3,4(r29)
 8180  0000791c  8fa40008	lw	r4,8(r29)
 8181  00007920  8fdffff8	lw	r31,-8(r30)
 8182  00007924  001ee820	add	r29,r0,r30
 8183  00007928  8fdefffc	lw	r30,-4(r30)
 8184  0000792c  4be00000	jr	r31
 8185  00007930  54000000	nop
 8186  00007934          	.endproc _QueueAllocLink
 8187  00007934          	.data
 8188  00011410          	.align 2
 8189  00011410          	.global _freeLinks
 8190  00011410          	_freeLinks:
 8191  00011410          	.space 12
 8192  0001141c          	.align 2
 8193  0001141c          	_linkpool_LF4:
 8194  0001141c          	.space 6400
 8195                      ; Compiled by GCC
 8196  00012d1c          	.text
 8197  00007934          	.align 2
 8198  00007934          	.proc _isspace
 8199  00007934          	.global _isspace
 8200  00007934          	_isspace:
 8201                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 8202  00007934  afbefffc	sw	-4(r29),r30; push fp
 8203  00007938  001df020	add	r30,r0,r29; fp = sp
 8204  0000793c  afbffff8	sw	-8(r29),r31; push ret addr
 8205  00007940  2fbd0010	subui	r29,r29,#16; alloc local storage
 8206  00007944  afa20000	sw	0(r29),r2
 8207  00007948  83c20003	lb	r2,3(r30)
 8208  0000794c  201f0000	addi	r31,r0,#0
 8209  00007950  304100ff	andi	r1,r2,#0x00ff
 8210  00007954  60210020	seqi	r1,r1,#32
 8211  00007958  14200018	bnez	r1,L6_LF5
 8212  0000795c  54000000	nop; not filled.
 8213  00007960  2041fff7	addi	r1,r2,#-9
 8214  00007964  302100ff	andi	r1,r1,#0x00ff
 8215  00007968  70210001	sleui	r1,r1,#1
 8216  0000796c  10200008	beqz	r1,L5_LF5
 8217  00007970  54000000	nop; not filled.
 8218  00007974          	L6_LF5:
 8219  00007974  201f0001	addi	r31,r0,#1
 8220  00007978          	L5_LF5:
 8221  00007978  001f0820	add	r1,r0,r31
 8222  0000797c  8fa20000	lw	r2,0(r29)
 8223  00007980  8fdffff8	lw	r31,-8(r30)
 8224  00007984  001ee820	add	r29,r0,r30
 8225  00007988  8fdefffc	lw	r30,-4(r30)
 8226  0000798c  4be00000	jr	r31
 8227  00007990  54000000	nop
 8228  00007994          	.endproc _isspace
 8229  00007994          	.align 2
 8230  00007994          	.proc _isxdigit
 8231  00007994          	.global _isxdigit
 8232  00007994          	_isxdigit:
 8233                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 8234  00007994  afbefffc	sw	-4(r29),r30; push fp
 8235  00007998  001df020	add	r30,r0,r29; fp = sp
 8236  0000799c  afbffff8	sw	-8(r29),r31; push ret addr
 8237  000079a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 8238  000079a4  afa20000	sw	0(r29),r2
 8239  000079a8  83df0003	lb	r31,3(r30)
 8240  000079ac  20020000	addi	r2,r0,#0
 8241  000079b0  23e1ffd0	addi	r1,r31,#-48
 8242  000079b4  302100ff	andi	r1,r1,#0x00ff
 8243  000079b8  70210009	sleui	r1,r1,#9
 8244  000079bc  14200028	bnez	r1,L12_LF5
 8245  000079c0  54000000	nop; not filled.
 8246  000079c4  23e1ff9f	addi	r1,r31,#-97
 8247  000079c8  302100ff	andi	r1,r1,#0x00ff
 8248  000079cc  70210005	sleui	r1,r1,#5
 8249  000079d0  14200014	bnez	r1,L12_LF5
 8250  000079d4  54000000	nop; not filled.
 8251  000079d8  33e100ff	andi	r1,r31,#0x00ff
 8252  000079dc  64210041	snei	r1,r1,#65
 8253  000079e0  14200008	bnez	r1,L11_LF5
 8254  000079e4  54000000	nop; not filled.
 8255  000079e8          	L12_LF5:
 8256  000079e8  20020001	addi	r2,r0,#1
 8257  000079ec          	L11_LF5:
 8258  000079ec  00020820	add	r1,r0,r2
 8259  000079f0  8fa20000	lw	r2,0(r29)
 8260  000079f4  8fdffff8	lw	r31,-8(r30)
 8261  000079f8  001ee820	add	r29,r0,r30
 8262  000079fc  8fdefffc	lw	r30,-4(r30)
 8263  00007a00  4be00000	jr	r31
 8264  00007a04  54000000	nop
 8265  00007a08          	.endproc _isxdigit
 8266  00007a08          	.align 2
 8267  00007a08          	.proc _DisableIntrs
 8268  00007a08          	.global _DisableIntrs
 8269  00007a08          	_DisableIntrs:
 8270                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 8271  00007a08  afbefffc	sw	-4(r29),r30; push fp
 8272  00007a0c  001df020	add	r30,r0,r29; fp = sp
 8273  00007a10  afbffff8	sw	-8(r29),r31; push ret addr
 8274  00007a14  2fbd0010	subui	r29,r29,#16; alloc local storage
 8275  00007a18  afa20000	sw	0(r29),r2
 8276  00007a1c  23bdfff8	addi	r29,r29,#-8
 8277  00007a20  2002000f	addi	r2,r0,#15
 8278  00007a24  afa20000	sw	(r29),r2
 8279  00007a28  0c002678	jal	_SetIntrs
 8280  00007a2c  54000000	nop; not filled.
 8281  00007a30  23bd0008	addi	r29,r29,#8
 8282  00007a34  8fa20000	lw	r2,0(r29)
 8283  00007a38  8fdffff8	lw	r31,-8(r30)
 8284  00007a3c  001ee820	add	r29,r0,r30
 8285  00007a40  8fdefffc	lw	r30,-4(r30)
 8286  00007a44  4be00000	jr	r31
 8287  00007a48  54000000	nop
 8288  00007a4c          	.endproc _DisableIntrs
 8289  00007a4c          	.align 2
 8290  00007a4c          	.proc _EnableIntrs
 8291  00007a4c          	.global _EnableIntrs
 8292  00007a4c          	_EnableIntrs:
 8293                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 8294  00007a4c  afbefffc	sw	-4(r29),r30; push fp
 8295  00007a50  001df020	add	r30,r0,r29; fp = sp
 8296  00007a54  afbffff8	sw	-8(r29),r31; push ret addr
 8297  00007a58  2fbd0010	subui	r29,r29,#16; alloc local storage
 8298  00007a5c  afa20000	sw	0(r29),r2
 8299  00007a60  23bdfff8	addi	r29,r29,#-8
 8300  00007a64  20020000	addi	r2,r0,#0
 8301  00007a68  afa20000	sw	(r29),r2
 8302  00007a6c  0c002634	jal	_SetIntrs
 8303  00007a70  54000000	nop; not filled.
 8304  00007a74  23bd0008	addi	r29,r29,#8
 8305  00007a78  8fa20000	lw	r2,0(r29)
 8306  00007a7c  8fdffff8	lw	r31,-8(r30)
 8307  00007a80  001ee820	add	r29,r0,r30
 8308  00007a84  8fdefffc	lw	r30,-4(r30)
 8309  00007a88  4be00000	jr	r31
 8310  00007a8c  54000000	nop
 8311  00007a90          	.endproc _EnableIntrs
 8312  00007a90          	.align 2
 8313  00007a90          	.proc _RestoreIntrs
 8314  00007a90          	.global _RestoreIntrs
 8315  00007a90          	_RestoreIntrs:
 8316                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 8317  00007a90  afbefffc	sw	-4(r29),r30; push fp
 8318  00007a94  001df020	add	r30,r0,r29; fp = sp
 8319  00007a98  afbffff8	sw	-8(r29),r31; push ret addr
 8320  00007a9c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8321  00007aa0  afa20000	sw	0(r29),r2
 8322  00007aa4  23bdfff8	addi	r29,r29,#-8
 8323  00007aa8  8fc20000	lw	r2,(r30)
 8324  00007aac  afa20000	sw	(r29),r2
 8325  00007ab0  0c0025f0	jal	_SetIntrs
 8326  00007ab4  54000000	nop; not filled.
 8327  00007ab8  23bd0008	addi	r29,r29,#8
 8328  00007abc  8fa20000	lw	r2,0(r29)
 8329  00007ac0  8fdffff8	lw	r31,-8(r30)
 8330  00007ac4  001ee820	add	r29,r0,r30
 8331  00007ac8  8fdefffc	lw	r30,-4(r30)
 8332  00007acc  4be00000	jr	r31
 8333  00007ad0  54000000	nop
 8334  00007ad4          	.endproc _RestoreIntrs
 8335  00007ad4          	.align 2
 8336  00007ad4          	.proc _QueueLinkInit
 8337  00007ad4          	.global _QueueLinkInit
 8338  00007ad4          	_QueueLinkInit:
 8339                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 8340  00007ad4  afbefffc	sw	-4(r29),r30; push fp
 8341  00007ad8  001df020	add	r30,r0,r29; fp = sp
 8342  00007adc  afbffff8	sw	-8(r29),r31; push ret addr
 8343  00007ae0  2fbd0010	subui	r29,r29,#16; alloc local storage
 8344  00007ae4  afa20000	sw	0(r29),r2
 8345  00007ae8  8fc10000	lw	r1,(r30)
 8346  00007aec  8fc20004	lw	r2,4(r30)
 8347  00007af0  201f0000	addi	r31,r0,#0
 8348  00007af4  ac3f0000	sw	(r1),r31
 8349  00007af8  ac22000c	sw	12(r1),r2
 8350  00007afc  8fa20000	lw	r2,0(r29)
 8351  00007b00  8fdffff8	lw	r31,-8(r30)
 8352  00007b04  001ee820	add	r29,r0,r30
 8353  00007b08  8fdefffc	lw	r30,-4(r30)
 8354  00007b0c  4be00000	jr	r31
 8355  00007b10  54000000	nop
 8356  00007b14          	.endproc _QueueLinkInit
 8357  00007b14          	.align 2
 8358  00007b14          	.proc _QueueNext
 8359  00007b14          	.global _QueueNext
 8360  00007b14          	_QueueNext:
 8361                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 8362  00007b14  afbefffc	sw	-4(r29),r30; push fp
 8363  00007b18  001df020	add	r30,r0,r29; fp = sp
 8364  00007b1c  afbffff8	sw	-8(r29),r31; push ret addr
 8365  00007b20  2fbd0008	subui	r29,r29,#8; alloc local storage
 8366  00007b24  8fc10000	lw	r1,(r30)
 8367  00007b28  8c210000	lw	r1,(r1)
 8368  00007b2c  8fdffff8	lw	r31,-8(r30)
 8369  00007b30  001ee820	add	r29,r0,r30
 8370  00007b34  8fdefffc	lw	r30,-4(r30)
 8371  00007b38  4be00000	jr	r31
 8372  00007b3c  54000000	nop
 8373  00007b40          	.endproc _QueueNext
 8374  00007b40          	.align 2
 8375  00007b40          	.proc _QueuePrev
 8376  00007b40          	.global _QueuePrev
 8377  00007b40          	_QueuePrev:
 8378                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 8379  00007b40  afbefffc	sw	-4(r29),r30; push fp
 8380  00007b44  001df020	add	r30,r0,r29; fp = sp
 8381  00007b48  afbffff8	sw	-8(r29),r31; push ret addr
 8382  00007b4c  2fbd0008	subui	r29,r29,#8; alloc local storage
 8383  00007b50  8fc10000	lw	r1,(r30)
 8384  00007b54  8c210004	lw	r1,4(r1)
 8385  00007b58  8fdffff8	lw	r31,-8(r30)
 8386  00007b5c  001ee820	add	r29,r0,r30
 8387  00007b60  8fdefffc	lw	r30,-4(r30)
 8388  00007b64  4be00000	jr	r31
 8389  00007b68  54000000	nop
 8390  00007b6c          	.endproc _QueuePrev
 8391  00007b6c          	.align 2
 8392  00007b6c          	.proc _QueueFirst
 8393  00007b6c          	.global _QueueFirst
 8394  00007b6c          	_QueueFirst:
 8395                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 8396  00007b6c  afbefffc	sw	-4(r29),r30; push fp
 8397  00007b70  001df020	add	r30,r0,r29; fp = sp
 8398  00007b74  afbffff8	sw	-8(r29),r31; push ret addr
 8399  00007b78  2fbd0008	subui	r29,r29,#8; alloc local storage
 8400  00007b7c  8fc10000	lw	r1,(r30)
 8401  00007b80  8c210000	lw	r1,(r1)
 8402  00007b84  8fdffff8	lw	r31,-8(r30)
 8403  00007b88  001ee820	add	r29,r0,r30
 8404  00007b8c  8fdefffc	lw	r30,-4(r30)
 8405  00007b90  4be00000	jr	r31
 8406  00007b94  54000000	nop
 8407  00007b98          	.endproc _QueueFirst
 8408  00007b98          	.align 2
 8409  00007b98          	.proc _QueueLast
 8410  00007b98          	.global _QueueLast
 8411  00007b98          	_QueueLast:
 8412                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 8413  00007b98  afbefffc	sw	-4(r29),r30; push fp
 8414  00007b9c  001df020	add	r30,r0,r29; fp = sp
 8415  00007ba0  afbffff8	sw	-8(r29),r31; push ret addr
 8416  00007ba4  2fbd0008	subui	r29,r29,#8; alloc local storage
 8417  00007ba8  8fc10000	lw	r1,(r30)
 8418  00007bac  8c210004	lw	r1,4(r1)
 8419  00007bb0  8fdffff8	lw	r31,-8(r30)
 8420  00007bb4  001ee820	add	r29,r0,r30
 8421  00007bb8  8fdefffc	lw	r30,-4(r30)
 8422  00007bbc  4be00000	jr	r31
 8423  00007bc0  54000000	nop
 8424  00007bc4          	.endproc _QueueLast
 8425  00007bc4          	.align 2
 8426  00007bc4          	.proc _QueueInsertAfter
 8427  00007bc4          	.global _QueueInsertAfter
 8428  00007bc4          	_QueueInsertAfter:
 8429                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 8430  00007bc4  afbefffc	sw	-4(r29),r30; push fp
 8431  00007bc8  001df020	add	r30,r0,r29; fp = sp
 8432  00007bcc  afbffff8	sw	-8(r29),r31; push ret addr
 8433  00007bd0  2fbd0010	subui	r29,r29,#16; alloc local storage
 8434  00007bd4  afa20000	sw	0(r29),r2
 8435  00007bd8  afa30004	sw	4(r29),r3
 8436  00007bdc  8fc30000	lw	r3,(r30)
 8437  00007be0  8fc20004	lw	r2,4(r30)
 8438  00007be4  8fc10008	lw	r1,8(r30)
 8439  00007be8  ac230008	sw	8(r1),r3
 8440  00007bec  ac220004	sw	4(r1),r2
 8441  00007bf0  8c5f0000	lw	r31,(r2)
 8442  00007bf4  ac3f0000	sw	(r1),r31
 8443  00007bf8  ac410000	sw	(r2),r1
 8444  00007bfc  8c220000	lw	r2,(r1)
 8445  00007c00  ac410004	sw	4(r2),r1
 8446  00007c04  8c610008	lw	r1,8(r3)
 8447  00007c08  20210001	addi	r1,r1,#1
 8448  00007c0c  ac610008	sw	8(r3),r1
 8449  00007c10  8fa20000	lw	r2,0(r29)
 8450  00007c14  8fa30004	lw	r3,4(r29)
 8451  00007c18  8fdffff8	lw	r31,-8(r30)
 8452  00007c1c  001ee820	add	r29,r0,r30
 8453  00007c20  8fdefffc	lw	r30,-4(r30)
 8454  00007c24  4be00000	jr	r31
 8455  00007c28  54000000	nop
 8456  00007c2c          	.endproc _QueueInsertAfter
 8457  00007c2c          	.align 2
 8458  00007c2c          	.proc _QueueInsertFirst
 8459  00007c2c          	.global _QueueInsertFirst
 8460  00007c2c          	_QueueInsertFirst:
 8461                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 8462  00007c2c  afbefffc	sw	-4(r29),r30; push fp
 8463  00007c30  001df020	add	r30,r0,r29; fp = sp
 8464  00007c34  afbffff8	sw	-8(r29),r31; push ret addr
 8465  00007c38  2fbd0010	subui	r29,r29,#16; alloc local storage
 8466  00007c3c  afa20000	sw	0(r29),r2
 8467  00007c40  afa30004	sw	4(r29),r3
 8468  00007c44  8fc30000	lw	r3,(r30)
 8469  00007c48  8fc10004	lw	r1,4(r30)
 8470  00007c4c  ac230008	sw	8(r1),r3
 8471  00007c50  ac230004	sw	4(r1),r3
 8472  00007c54  8c7f0000	lw	r31,(r3)
 8473  00007c58  ac3f0000	sw	(r1),r31
 8474  00007c5c  ac610000	sw	(r3),r1
 8475  00007c60  8c220000	lw	r2,(r1)
 8476  00007c64  ac410004	sw	4(r2),r1
 8477  00007c68  8c610008	lw	r1,8(r3)
 8478  00007c6c  20210001	addi	r1,r1,#1
 8479  00007c70  ac610008	sw	8(r3),r1
 8480  00007c74  8fa20000	lw	r2,0(r29)
 8481  00007c78  8fa30004	lw	r3,4(r29)
 8482  00007c7c  8fdffff8	lw	r31,-8(r30)
 8483  00007c80  001ee820	add	r29,r0,r30
 8484  00007c84  8fdefffc	lw	r30,-4(r30)
 8485  00007c88  4be00000	jr	r31
 8486  00007c8c  54000000	nop
 8487  00007c90          	.endproc _QueueInsertFirst
 8488  00007c90          	.align 2
 8489  00007c90          	.proc _QueueInsertLast
 8490  00007c90          	.global _QueueInsertLast
 8491  00007c90          	_QueueInsertLast:
 8492                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 8493  00007c90  afbefffc	sw	-4(r29),r30; push fp
 8494  00007c94  001df020	add	r30,r0,r29; fp = sp
 8495  00007c98  afbffff8	sw	-8(r29),r31; push ret addr
 8496  00007c9c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8497  00007ca0  afa20000	sw	0(r29),r2
 8498  00007ca4  afa30004	sw	4(r29),r3
 8499  00007ca8  8fc30000	lw	r3,(r30)
 8500  00007cac  8fc10004	lw	r1,4(r30)
 8501  00007cb0  8c620004	lw	r2,4(r3)
 8502  00007cb4  ac230008	sw	8(r1),r3
 8503  00007cb8  ac220004	sw	4(r1),r2
 8504  00007cbc  8c5f0000	lw	r31,(r2)
 8505  00007cc0  ac3f0000	sw	(r1),r31
 8506  00007cc4  ac410000	sw	(r2),r1
 8507  00007cc8  8c220000	lw	r2,(r1)
 8508  00007ccc  ac410004	sw	4(r2),r1
 8509  00007cd0  8c610008	lw	r1,8(r3)
 8510  00007cd4  20210001	addi	r1,r1,#1
 8511  00007cd8  ac610008	sw	8(r3),r1
 8512  00007cdc  8fa20000	lw	r2,0(r29)
 8513  00007ce0  8fa30004	lw	r3,4(r29)
 8514  00007ce4  8fdffff8	lw	r31,-8(r30)
 8515  00007ce8  001ee820	add	r29,r0,r30
 8516  00007cec  8fdefffc	lw	r30,-4(r30)
 8517  00007cf0  4be00000	jr	r31
 8518  00007cf4  54000000	nop
 8519  00007cf8          	.endproc _QueueInsertLast
 8520  00007cf8          	.align 2
 8521  00007cf8          	.proc _QueueRemove
 8522  00007cf8          	.global _QueueRemove
 8523  00007cf8          	_QueueRemove:
 8524                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 8525  00007cf8  afbefffc	sw	-4(r29),r30; push fp
 8526  00007cfc  001df020	add	r30,r0,r29; fp = sp
 8527  00007d00  afbffff8	sw	-8(r29),r31; push ret addr
 8528  00007d04  2fbd0010	subui	r29,r29,#16; alloc local storage
 8529  00007d08  afa20000	sw	0(r29),r2
 8530  00007d0c  afa30004	sw	4(r29),r3
 8531  00007d10  8fdf0000	lw	r31,(r30)
 8532  00007d14  8fe10008	lw	r1,8(r31)
 8533  00007d18  8c210008	lw	r1,8(r1)
 8534  00007d1c  6c210000	sgti	r1,r1,#0
 8535  00007d20  1020002c	beqz	r1,L44_LF5
 8536  00007d24  54000000	nop; not filled.
 8537  00007d28  8fe10004	lw	r1,4(r31)
 8538  00007d2c  8fe30000	lw	r3,(r31)
 8539  00007d30  ac230000	sw	(r1),r3
 8540  00007d34  8fe10000	lw	r1,(r31)
 8541  00007d38  8fe30004	lw	r3,4(r31)
 8542  00007d3c  ac230004	sw	4(r1),r3
 8543  00007d40  8fe20008	lw	r2,8(r31)
 8544  00007d44  8c410008	lw	r1,8(r2)
 8545  00007d48  2021ffff	addi	r1,r1,#-1
 8546  00007d4c  ac410008	sw	8(r2),r1
 8547  00007d50          	L44_LF5:
 8548  00007d50  20030000	addi	r3,r0,#0
 8549  00007d54  afe30000	sw	(r31),r3
 8550  00007d58  8fa20000	lw	r2,0(r29)
 8551  00007d5c  8fa30004	lw	r3,4(r29)
 8552  00007d60  8fdffff8	lw	r31,-8(r30)
 8553  00007d64  001ee820	add	r29,r0,r30
 8554  00007d68  8fdefffc	lw	r30,-4(r30)
 8555  00007d6c  4be00000	jr	r31
 8556  00007d70  54000000	nop
 8557  00007d74          	.endproc _QueueRemove
 8558  00007d74          	.align 2
 8559  00007d74          	.proc _QueueLength
 8560  00007d74          	.global _QueueLength
 8561  00007d74          	_QueueLength:
 8562                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 8563  00007d74  afbefffc	sw	-4(r29),r30; push fp
 8564  00007d78  001df020	add	r30,r0,r29; fp = sp
 8565  00007d7c  afbffff8	sw	-8(r29),r31; push ret addr
 8566  00007d80  2fbd0008	subui	r29,r29,#8; alloc local storage
 8567  00007d84  8fc10000	lw	r1,(r30)
 8568  00007d88  8c210008	lw	r1,8(r1)
 8569  00007d8c  8fdffff8	lw	r31,-8(r30)
 8570  00007d90  001ee820	add	r29,r0,r30
 8571  00007d94  8fdefffc	lw	r30,-4(r30)
 8572  00007d98  4be00000	jr	r31
 8573  00007d9c  54000000	nop
 8574  00007da0          	.endproc _QueueLength
 8575  00007da0          	.align 2
 8576  00007da0          	.proc _QueueEmpty
 8577  00007da0          	.global _QueueEmpty
 8578  00007da0          	_QueueEmpty:
 8579                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 8580  00007da0  afbefffc	sw	-4(r29),r30; push fp
 8581  00007da4  001df020	add	r30,r0,r29; fp = sp
 8582  00007da8  afbffff8	sw	-8(r29),r31; push ret addr
 8583  00007dac  2fbd0008	subui	r29,r29,#8; alloc local storage
 8584  00007db0  8fc10000	lw	r1,(r30)
 8585  00007db4  8c210008	lw	r1,8(r1)
 8586  00007db8  60210000	seqi	r1,r1,#0
 8587  00007dbc  8fdffff8	lw	r31,-8(r30)
 8588  00007dc0  001ee820	add	r29,r0,r30
 8589  00007dc4  8fdefffc	lw	r30,-4(r30)
 8590  00007dc8  4be00000	jr	r31
 8591  00007dcc  54000000	nop
 8592  00007dd0          	.endproc _QueueEmpty
 8593  00007dd0          	.align 2
 8594  00007dd0          	.proc _SemInit
 8595  00007dd0          	.global _SemInit
 8596  00007dd0          	_SemInit:
 8597                      ;  Function 'SemInit'; 0 bytes of locals, 2 regs to save.
 8598  00007dd0  afbefffc	sw	-4(r29),r30; push fp
 8599  00007dd4  001df020	add	r30,r0,r29; fp = sp
 8600  00007dd8  afbffff8	sw	-8(r29),r31; push ret addr
 8601  00007ddc  2fbd0010	subui	r29,r29,#16; alloc local storage
 8602  00007de0  afa20000	sw	0(r29),r2
 8603  00007de4  afa30004	sw	4(r29),r3
 8604  00007de8  8fc20000	lw	r2,(r30)
 8605  00007dec  8fc30004	lw	r3,4(r30)
 8606  00007df0  23bdfff8	addi	r29,r29,#-8
 8607  00007df4  afa20000	sw	(r29),r2
 8608  00007df8  0ffff95c	jal	_QueueInit
 8609  00007dfc  54000000	nop; not filled.
 8610  00007e00  ac43000c	sw	12(r2),r3
 8611  00007e04  23bd0008	addi	r29,r29,#8
 8612  00007e08  8fa20000	lw	r2,0(r29)
 8613  00007e0c  8fa30004	lw	r3,4(r29)
 8614  00007e10  8fdffff8	lw	r31,-8(r30)
 8615  00007e14  001ee820	add	r29,r0,r30
 8616  00007e18  8fdefffc	lw	r30,-4(r30)
 8617  00007e1c  4be00000	jr	r31
 8618  00007e20  54000000	nop
 8619  00007e24          	.endproc _SemInit
 8620  00007e24          	.data
 8621  00012d1c          	.align 2
 8622  00012d1c          	LC0_LF5:
 8623  00012d1c  4f6c6420	.ascii "Old interrupt value was 0x%x.\n\000"
 8623  00012d20  696e7465	
 8623  00012d24  72727570	
 8623  00012d28  74207661	
 8623  00012d2c  6c756520	
 8623  00012d30  77617320	
 8623  00012d34  30782578	
 8623  00012d38  2e0a00  	
 8624  00012d3b          	.align 2
 8625  00012d3c          	LC1_LF5:
 8626  00012d3c  50726f63	.ascii "Proc 0x%x waiting on sem 0x%x, count=%d.\n\000"
 8626  00012d40  20307825	
 8626  00012d44  78207761	
 8626  00012d48  6974696e	
 8626  00012d4c  67206f6e	
 8626  00012d50  2073656d	
 8626  00012d54  20307825	
 8626  00012d58  782c2063	
 8626  00012d5c  6f756e74	
 8626  00012d60  3d25642e	
 8626  00012d64  0a00    	
 8627  00012d66          	.align 2
 8628  00012d68          	LC2_LF5:
 8629  00012d68  53757370	.ascii "Suspending current proc (0x%x).\n\000"
 8629  00012d6c  656e6469	
 8629  00012d70  6e672063	
 8629  00012d74  75727265	
 8629  00012d78  6e742070	
 8629  00012d7c  726f6320	
 8629  00012d80  28307825	
 8629  00012d84  78292e0a	
 8629  00012d88  00      	
 8630  00012d89          	.text
 8631  00007e24          	.align 2
 8632  00007e24          	.proc _SemWait
 8633  00007e24          	.global _SemWait
 8634  00007e24          	_SemWait:
 8635                      ;  Function 'SemWait'; 0 bytes of locals, 6 regs to save.
 8636  00007e24  afbefffc	sw	-4(r29),r30; push fp
 8637  00007e28  001df020	add	r30,r0,r29; fp = sp
 8638  00007e2c  afbffff8	sw	-8(r29),r31; push ret addr
 8639  00007e30  2fbd0020	subui	r29,r29,#32; alloc local storage
 8640  00007e34  afa20000	sw	0(r29),r2
 8641  00007e38  afa30004	sw	4(r29),r3
 8642  00007e3c  afa40008	sw	8(r29),r4
 8643  00007e40  afa5000c	sw	12(r29),r5
 8644  00007e44  afa60010	sw	16(r29),r6
 8645  00007e48  afa70014	sw	20(r29),r7
 8646  00007e4c  8fc40000	lw	r4,(r30)
 8647  00007e50  23bdfff8	addi	r29,r29,#-8
 8648  00007e54  2007000f	addi	r7,r0,#15
 8649  00007e58  afa70000	sw	(r29),r7
 8650  00007e5c  0c002244	jal	_SetIntrs
 8651  00007e60  54000000	nop; not filled.
 8652  00007e64  00013020	add	r6,r0,r1
 8653  00007e68  23bd0008	addi	r29,r29,#8
 8654  00007e6c  23bdfff8	addi	r29,r29,#-8
 8655  00007e70  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 8656  00007e74  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 8657  00007e78  afa20000	sw	(r29),r2
 8658  00007e7c  20070049	addi	r7,r0,#73
 8659  00007e80  afa70004	sw	4(r29),r7
 8660  00007e84  0fffbc94	jal	_dindex
 8661  00007e88  54000000	nop; not filled.
 8662  00007e8c  23bd0008	addi	r29,r29,#8
 8663  00007e90  64210000	snei	r1,r1,#0
 8664  00007e94  1420002c	bnez	r1,L56_LF5
 8665  00007e98  54000000	nop; not filled.
 8666  00007e9c  23bdfff8	addi	r29,r29,#-8
 8667  00007ea0  afa20000	sw	(r29),r2
 8668  00007ea4  2007002b	addi	r7,r0,#43
 8669  00007ea8  afa70004	sw	4(r29),r7
 8670  00007eac  0fffbc6c	jal	_dindex
 8671  00007eb0  54000000	nop; not filled.
 8672  00007eb4  23bd0008	addi	r29,r29,#8
 8673  00007eb8  64210000	snei	r1,r1,#0
 8674  00007ebc  10200024	beqz	r1,L55_LF5
 8675  00007ec0  54000000	nop; not filled.
 8676  00007ec4          	L56_LF5:
 8677  00007ec4  23bdfff8	addi	r29,r29,#-8
 8678  00007ec8  3c070001	lhi	r7,((LC0_LF5)>>16)&0xffff
 8679  00007ecc  24e72d1c	addui	r7,r7,(LC0_LF5)&0xffff
 8680  00007ed0  afa70000	sw	(r29),r7
 8681  00007ed4  afa60004	sw	4(r29),r6
 8682  00007ed8  0c00231c	jal	_printf
 8683  00007edc  54000000	nop; not filled.
 8684  00007ee0  23bd0008	addi	r29,r29,#8
 8685  00007ee4          	L55_LF5:
 8686  00007ee4  23bdfff8	addi	r29,r29,#-8
 8687  00007ee8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 8688  00007eec  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 8689  00007ef0  afa20000	sw	(r29),r2
 8690  00007ef4  20070073	addi	r7,r0,#115
 8691  00007ef8  afa70004	sw	4(r29),r7
 8692  00007efc  0fffbc1c	jal	_dindex
 8693  00007f00  54000000	nop; not filled.
 8694  00007f04  23bd0008	addi	r29,r29,#8
 8695  00007f08  64210000	snei	r1,r1,#0
 8696  00007f0c  1420002c	bnez	r1,L58_LF5
 8697  00007f10  54000000	nop; not filled.
 8698  00007f14  23bdfff8	addi	r29,r29,#-8
 8699  00007f18  afa20000	sw	(r29),r2
 8700  00007f1c  2007002b	addi	r7,r0,#43
 8701  00007f20  afa70004	sw	4(r29),r7
 8702  00007f24  0fffbbf4	jal	_dindex
 8703  00007f28  54000000	nop; not filled.
 8704  00007f2c  23bd0008	addi	r29,r29,#8
 8705  00007f30  64210000	snei	r1,r1,#0
 8706  00007f34  1020003c	beqz	r1,L57_LF5
 8707  00007f38  54000000	nop; not filled.
 8708  00007f3c          	L58_LF5:
 8709  00007f3c  23bdfff0	addi	r29,r29,#-16
 8710  00007f40  3c070001	lhi	r7,((LC1_LF5)>>16)&0xffff
 8711  00007f44  24e72d3c	addui	r7,r7,(LC1_LF5)&0xffff
 8712  00007f48  afa70000	sw	(r29),r7
 8713  00007f4c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 8714  00007f50  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 8715  00007f54  8c210000	lw	r1,(r1)
 8716  00007f58  afa10004	sw	4(r29),r1
 8717  00007f5c  afa40008	sw	8(r29),r4
 8718  00007f60  8c87000c	lw	r7,12(r4)
 8719  00007f64  afa7000c	sw	12(r29),r7
 8720  00007f68  0c00228c	jal	_printf
 8721  00007f6c  54000000	nop; not filled.
 8722  00007f70  23bd0010	addi	r29,r29,#16
 8723  00007f74          	L57_LF5:
 8724  00007f74  8c81000c	lw	r1,12(r4)
 8725  00007f78  2021ffff	addi	r1,r1,#-1
 8726  00007f7c  ac81000c	sw	12(r4),r1
 8727  00007f80  68210000	slti	r1,r1,#0
 8728  00007f84  102000d8	beqz	r1,L59_LF5
 8729  00007f88  54000000	nop; not filled.
 8730  00007f8c  0ffff8b8	jal	_QueueAllocLink
 8731  00007f90  54000000	nop; not filled.
 8732  00007f94  00011020	add	r2,r0,r1
 8733  00007f98  3c050000	lhi	r5,((_currentPCB)>>16)&0xffff
 8734  00007f9c  24a5fcf0	addui	r5,r5,(_currentPCB)&0xffff
 8735  00007fa0  8ca10000	lw	r1,(r5)
 8736  00007fa4  20070000	addi	r7,r0,#0
 8737  00007fa8  ac470000	sw	(r2),r7
 8738  00007fac  ac41000c	sw	12(r2),r1
 8739  00007fb0  23bdfff8	addi	r29,r29,#-8
 8740  00007fb4  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 8741  00007fb8  2463fc26	addui	r3,r3,(_debugstr)&0xffff
 8742  00007fbc  afa30000	sw	(r29),r3
 8743  00007fc0  20070073	addi	r7,r0,#115
 8744  00007fc4  afa70004	sw	4(r29),r7
 8745  00007fc8  0fffbb50	jal	_dindex
 8746  00007fcc  54000000	nop; not filled.
 8747  00007fd0  23bd0008	addi	r29,r29,#8
 8748  00007fd4  64210000	snei	r1,r1,#0
 8749  00007fd8  1420002c	bnez	r1,L62_LF5
 8750  00007fdc  54000000	nop; not filled.
 8751  00007fe0  23bdfff8	addi	r29,r29,#-8
 8752  00007fe4  afa30000	sw	(r29),r3
 8753  00007fe8  2007002b	addi	r7,r0,#43
 8754  00007fec  afa70004	sw	4(r29),r7
 8755  00007ff0  0fffbb28	jal	_dindex
 8756  00007ff4  54000000	nop; not filled.
 8757  00007ff8  23bd0008	addi	r29,r29,#8
 8758  00007ffc  64210000	snei	r1,r1,#0
 8759  00008000  10200028	beqz	r1,L61_LF5
 8760  00008004  54000000	nop; not filled.
 8761  00008008          	L62_LF5:
 8762  00008008  23bdfff8	addi	r29,r29,#-8
 8763  0000800c  3c070001	lhi	r7,((LC2_LF5)>>16)&0xffff
 8764  00008010  24e72d68	addui	r7,r7,(LC2_LF5)&0xffff
 8765  00008014  afa70000	sw	(r29),r7
 8766  00008018  8ca10000	lw	r1,(r5)
 8767  0000801c  afa10004	sw	4(r29),r1
 8768  00008020  0c0021d4	jal	_printf
 8769  00008024  54000000	nop; not filled.
 8770  00008028  23bd0008	addi	r29,r29,#8
 8771  0000802c          	L61_LF5:
 8772  0000802c  8c810004	lw	r1,4(r4)
 8773  00008030  ac440008	sw	8(r2),r4
 8774  00008034  ac410004	sw	4(r2),r1
 8775  00008038  8c270000	lw	r7,(r1)
 8776  0000803c  ac470000	sw	(r2),r7
 8777  00008040  ac220000	sw	(r1),r2
 8778  00008044  8c410000	lw	r1,(r2)
 8779  00008048  ac220004	sw	4(r1),r2
 8780  0000804c  8c810008	lw	r1,8(r4)
 8781  00008050  20210001	addi	r1,r1,#1
 8782  00008054  ac810008	sw	8(r4),r1
 8783  00008058  0c002094	jal	_ProcessSleep
 8784  0000805c  54000000	nop; not filled.
 8785  00008060          	L59_LF5:
 8786  00008060  23bdfff8	addi	r29,r29,#-8
 8787  00008064  afa60000	sw	(r29),r6
 8788  00008068  0c002038	jal	_SetIntrs
 8789  0000806c  54000000	nop; not filled.
 8790  00008070  23bd0008	addi	r29,r29,#8
 8791  00008074  8fa20000	lw	r2,0(r29)
 8792  00008078  8fa30004	lw	r3,4(r29)
 8793  0000807c  8fa40008	lw	r4,8(r29)
 8794  00008080  8fa5000c	lw	r5,12(r29)
 8795  00008084  8fa60010	lw	r6,16(r29)
 8796  00008088  8fa70014	lw	r7,20(r29)
 8797  0000808c  8fdffff8	lw	r31,-8(r30)
 8798  00008090  001ee820	add	r29,r0,r30
 8799  00008094  8fdefffc	lw	r30,-4(r30)
 8800  00008098  4be00000	jr	r31
 8801  0000809c  54000000	nop
 8802  000080a0          	.endproc _SemWait
 8803  000080a0          	.data
 8804  00012d89          	.align 2
 8805  00012d8c          	LC3_LF5:
 8806  00012d8c  5369676e	.ascii "Signalling on sem 0x%x, count=%d.\n\000"
 8806  00012d90  616c6c69	
 8806  00012d94  6e67206f	
 8806  00012d98  6e207365	
 8806  00012d9c  6d203078	
 8806  00012da0  25782c20	
 8806  00012da4  636f756e	
 8806  00012da8  743d2564	
 8806  00012dac  2e0a00  	
 8807  00012daf          	.align 2
 8808  00012db0          	LC4_LF5:
 8809  00012db0  57616b69	.ascii "Waking up PCB 0x%x.\n\000"
 8809  00012db4  6e672075	
 8809  00012db8  70205043	
 8809  00012dbc  42203078	
 8809  00012dc0  25782e0a	
 8809  00012dc4  00      	
 8810  00012dc5          	.text
 8811  000080a0          	.align 2
 8812  000080a0          	.proc _SemSignal
 8813  000080a0          	.global _SemSignal
 8814  000080a0          	_SemSignal:
 8815                      ;  Function 'SemSignal'; 0 bytes of locals, 4 regs to save.
 8816  000080a0  afbefffc	sw	-4(r29),r30; push fp
 8817  000080a4  001df020	add	r30,r0,r29; fp = sp
 8818  000080a8  afbffff8	sw	-8(r29),r31; push ret addr
 8819  000080ac  2fbd0018	subui	r29,r29,#24; alloc local storage
 8820  000080b0  afa20000	sw	0(r29),r2
 8821  000080b4  afa30004	sw	4(r29),r3
 8822  000080b8  afa40008	sw	8(r29),r4
 8823  000080bc  afa5000c	sw	12(r29),r5
 8824  000080c0  8fc20000	lw	r2,(r30)
 8825  000080c4  23bdfff8	addi	r29,r29,#-8
 8826  000080c8  2005000f	addi	r5,r0,#15
 8827  000080cc  afa50000	sw	(r29),r5
 8828  000080d0  0c001fd0	jal	_SetIntrs
 8829  000080d4  54000000	nop; not filled.
 8830  000080d8  00012020	add	r4,r0,r1
 8831  000080dc  23bd0008	addi	r29,r29,#8
 8832  000080e0  23bdfff8	addi	r29,r29,#-8
 8833  000080e4  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 8834  000080e8  2463fc26	addui	r3,r3,(_debugstr)&0xffff
 8835  000080ec  afa30000	sw	(r29),r3
 8836  000080f0  20050073	addi	r5,r0,#115
 8837  000080f4  afa50004	sw	4(r29),r5
 8838  000080f8  0fffba20	jal	_dindex
 8839  000080fc  54000000	nop; not filled.
 8840  00008100  23bd0008	addi	r29,r29,#8
 8841  00008104  64210000	snei	r1,r1,#0
 8842  00008108  1420002c	bnez	r1,L70_LF5
 8843  0000810c  54000000	nop; not filled.
 8844  00008110  23bdfff8	addi	r29,r29,#-8
 8845  00008114  afa30000	sw	(r29),r3
 8846  00008118  2005002b	addi	r5,r0,#43
 8847  0000811c  afa50004	sw	4(r29),r5
 8848  00008120  0fffb9f8	jal	_dindex
 8849  00008124  54000000	nop; not filled.
 8850  00008128  23bd0008	addi	r29,r29,#8
 8851  0000812c  64210000	snei	r1,r1,#0
 8852  00008130  1020002c	beqz	r1,L69_LF5
 8853  00008134  54000000	nop; not filled.
 8854  00008138          	L70_LF5:
 8855  00008138  23bdfff0	addi	r29,r29,#-16
 8856  0000813c  3c050001	lhi	r5,((LC3_LF5)>>16)&0xffff
 8857  00008140  24a52d8c	addui	r5,r5,(LC3_LF5)&0xffff
 8858  00008144  afa50000	sw	(r29),r5
 8859  00008148  afa20004	sw	4(r29),r2
 8860  0000814c  8c45000c	lw	r5,12(r2)
 8861  00008150  afa50008	sw	8(r29),r5
 8862  00008154  0c0020a0	jal	_printf
 8863  00008158  54000000	nop; not filled.
 8864  0000815c  23bd0010	addi	r29,r29,#16
 8865  00008160          	L69_LF5:
 8866  00008160  8c41000c	lw	r1,12(r2)
 8867  00008164  20210001	addi	r1,r1,#1
 8868  00008168  ac41000c	sw	12(r2),r1
 8869  0000816c  70210000	slei	r1,r1,#0
 8870  00008170  102000ec	beqz	r1,L71_LF5
 8871  00008174  54000000	nop; not filled.
 8872  00008178  8c430000	lw	r3,(r2)
 8873  0000817c  8c610008	lw	r1,8(r3)
 8874  00008180  8c210008	lw	r1,8(r1)
 8875  00008184  6c210000	sgti	r1,r1,#0
 8876  00008188  1020002c	beqz	r1,L74_LF5
 8877  0000818c  54000000	nop; not filled.
 8878  00008190  8c610004	lw	r1,4(r3)
 8879  00008194  8c650000	lw	r5,(r3)
 8880  00008198  ac250000	sw	(r1),r5
 8881  0000819c  8c610000	lw	r1,(r3)
 8882  000081a0  8c650004	lw	r5,4(r3)
 8883  000081a4  ac250004	sw	4(r1),r5
 8884  000081a8  8c620008	lw	r2,8(r3)
 8885  000081ac  8c410008	lw	r1,8(r2)
 8886  000081b0  2021ffff	addi	r1,r1,#-1
 8887  000081b4  ac410008	sw	8(r2),r1
 8888  000081b8          	L74_LF5:
 8889  000081b8  20050000	addi	r5,r0,#0
 8890  000081bc  ac650000	sw	(r3),r5
 8891  000081c0  23bdfff8	addi	r29,r29,#-8
 8892  000081c4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 8893  000081c8  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 8894  000081cc  afa20000	sw	(r29),r2
 8895  000081d0  20050073	addi	r5,r0,#115
 8896  000081d4  afa50004	sw	4(r29),r5
 8897  000081d8  0fffb940	jal	_dindex
 8898  000081dc  54000000	nop; not filled.
 8899  000081e0  23bd0008	addi	r29,r29,#8
 8900  000081e4  64210000	snei	r1,r1,#0
 8901  000081e8  1420002c	bnez	r1,L76_LF5
 8902  000081ec  54000000	nop; not filled.
 8903  000081f0  23bdfff8	addi	r29,r29,#-8
 8904  000081f4  afa20000	sw	(r29),r2
 8905  000081f8  2005002b	addi	r5,r0,#43
 8906  000081fc  afa50004	sw	4(r29),r5
 8907  00008200  0fffb918	jal	_dindex
 8908  00008204  54000000	nop; not filled.
 8909  00008208  23bd0008	addi	r29,r29,#8
 8910  0000820c  64210000	snei	r1,r1,#0
 8911  00008210  10200028	beqz	r1,L75_LF5
 8912  00008214  54000000	nop; not filled.
 8913  00008218          	L76_LF5:
 8914  00008218  23bdfff8	addi	r29,r29,#-8
 8915  0000821c  3c050001	lhi	r5,((LC4_LF5)>>16)&0xffff
 8916  00008220  24a52db0	addui	r5,r5,(LC4_LF5)&0xffff
 8917  00008224  afa50000	sw	(r29),r5
 8918  00008228  8c61000c	lw	r1,12(r3)
 8919  0000822c  afa10004	sw	4(r29),r1
 8920  00008230  0c001fc4	jal	_printf
 8921  00008234  54000000	nop; not filled.
 8922  00008238  23bd0008	addi	r29,r29,#8
 8923  0000823c          	L75_LF5:
 8924  0000823c  23bdfff8	addi	r29,r29,#-8
 8925  00008240  8c65000c	lw	r5,12(r3)
 8926  00008244  afa50000	sw	(r29),r5
 8927  00008248  0fffcbf4	jal	_ProcessWakeup
 8928  0000824c  54000000	nop; not filled.
 8929  00008250  afa30000	sw	(r29),r3
 8930  00008254  0ffff538	jal	_QueueFreeLink
 8931  00008258  54000000	nop; not filled.
 8932  0000825c  23bd0008	addi	r29,r29,#8
 8933  00008260          	L71_LF5:
 8934  00008260  23bdfff8	addi	r29,r29,#-8
 8935  00008264  afa40000	sw	(r29),r4
 8936  00008268  0c001e38	jal	_SetIntrs
 8937  0000826c  54000000	nop; not filled.
 8938  00008270  23bd0008	addi	r29,r29,#8
 8939  00008274  8fa20000	lw	r2,0(r29)
 8940  00008278  8fa30004	lw	r3,4(r29)
 8941  0000827c  8fa40008	lw	r4,8(r29)
 8942  00008280  8fa5000c	lw	r5,12(r29)
 8943  00008284  8fdffff8	lw	r31,-8(r30)
 8944  00008288  001ee820	add	r29,r0,r30
 8945  0000828c  8fdefffc	lw	r30,-4(r30)
 8946  00008290  4be00000	jr	r31
 8947  00008294  54000000	nop
 8948  00008298          	.endproc _SemSignal
 8949  00008298          	.align 2
 8950  00008298          	.proc _LockInit
 8951  00008298          	.global _LockInit
 8952  00008298          	_LockInit:
 8953                      ;  Function 'LockInit'; 0 bytes of locals, 0 regs to save.
 8954  00008298  afbefffc	sw	-4(r29),r30; push fp
 8955  0000829c  001df020	add	r30,r0,r29; fp = sp
 8956  000082a0  afbffff8	sw	-8(r29),r31; push ret addr
 8957  000082a4  2fbd0008	subui	r29,r29,#8; alloc local storage
 8958  000082a8  8fdffff8	lw	r31,-8(r30)
 8959  000082ac  001ee820	add	r29,r0,r30
 8960  000082b0  8fdefffc	lw	r30,-4(r30)
 8961  000082b4  4be00000	jr	r31
 8962  000082b8  54000000	nop
 8963  000082bc          	.endproc _LockInit
 8964  000082bc          	.align 2
 8965  000082bc          	.proc _LockAcquire
 8966  000082bc          	.global _LockAcquire
 8967  000082bc          	_LockAcquire:
 8968                      ;  Function 'LockAcquire'; 0 bytes of locals, 0 regs to save.
 8969  000082bc  afbefffc	sw	-4(r29),r30; push fp
 8970  000082c0  001df020	add	r30,r0,r29; fp = sp
 8971  000082c4  afbffff8	sw	-8(r29),r31; push ret addr
 8972  000082c8  2fbd0008	subui	r29,r29,#8; alloc local storage
 8973  000082cc  8fdffff8	lw	r31,-8(r30)
 8974  000082d0  001ee820	add	r29,r0,r30
 8975  000082d4  8fdefffc	lw	r30,-4(r30)
 8976  000082d8  4be00000	jr	r31
 8977  000082dc  54000000	nop
 8978  000082e0          	.endproc _LockAcquire
 8979  000082e0          	.align 2
 8980  000082e0          	.proc _LockRelease
 8981  000082e0          	.global _LockRelease
 8982  000082e0          	_LockRelease:
 8983                      ;  Function 'LockRelease'; 0 bytes of locals, 0 regs to save.
 8984  000082e0  afbefffc	sw	-4(r29),r30; push fp
 8985  000082e4  001df020	add	r30,r0,r29; fp = sp
 8986  000082e8  afbffff8	sw	-8(r29),r31; push ret addr
 8987  000082ec  2fbd0008	subui	r29,r29,#8; alloc local storage
 8988  000082f0  8fdffff8	lw	r31,-8(r30)
 8989  000082f4  001ee820	add	r29,r0,r30
 8990  000082f8  8fdefffc	lw	r30,-4(r30)
 8991  000082fc  4be00000	jr	r31
 8992  00008300  54000000	nop
 8993  00008304          	.endproc _LockRelease
 8994  00008304          	.align 2
 8995  00008304          	.proc _CondInit
 8996  00008304          	.global _CondInit
 8997  00008304          	_CondInit:
 8998                      ;  Function 'CondInit'; 0 bytes of locals, 0 regs to save.
 8999  00008304  afbefffc	sw	-4(r29),r30; push fp
 9000  00008308  001df020	add	r30,r0,r29; fp = sp
 9001  0000830c  afbffff8	sw	-8(r29),r31; push ret addr
 9002  00008310  2fbd0008	subui	r29,r29,#8; alloc local storage
 9003  00008314  8fdffff8	lw	r31,-8(r30)
 9004  00008318  001ee820	add	r29,r0,r30
 9005  0000831c  8fdefffc	lw	r30,-4(r30)
 9006  00008320  4be00000	jr	r31
 9007  00008324  54000000	nop
 9008  00008328          	.endproc _CondInit
 9009  00008328          	.align 2
 9010  00008328          	.proc _CondWait
 9011  00008328          	.global _CondWait
 9012  00008328          	_CondWait:
 9013                      ;  Function 'CondWait'; 0 bytes of locals, 0 regs to save.
 9014  00008328  afbefffc	sw	-4(r29),r30; push fp
 9015  0000832c  001df020	add	r30,r0,r29; fp = sp
 9016  00008330  afbffff8	sw	-8(r29),r31; push ret addr
 9017  00008334  2fbd0008	subui	r29,r29,#8; alloc local storage
 9018  00008338  8fdffff8	lw	r31,-8(r30)
 9019  0000833c  001ee820	add	r29,r0,r30
 9020  00008340  8fdefffc	lw	r30,-4(r30)
 9021  00008344  4be00000	jr	r31
 9022  00008348  54000000	nop
 9023  0000834c          	.endproc _CondWait
 9024  0000834c          	.align 2
 9025  0000834c          	.proc _CondSignal
 9026  0000834c          	.global _CondSignal
 9027  0000834c          	_CondSignal:
 9028                      ;  Function 'CondSignal'; 0 bytes of locals, 0 regs to save.
 9029  0000834c  afbefffc	sw	-4(r29),r30; push fp
 9030  00008350  001df020	add	r30,r0,r29; fp = sp
 9031  00008354  afbffff8	sw	-8(r29),r31; push ret addr
 9032  00008358  2fbd0008	subui	r29,r29,#8; alloc local storage
 9033  0000835c  8fdffff8	lw	r31,-8(r30)
 9034  00008360  001ee820	add	r29,r0,r30
 9035  00008364  8fdefffc	lw	r30,-4(r30)
 9036  00008368  4be00000	jr	r31
 9037  0000836c  54000000	nop
 9038  00008370          	.endproc _CondSignal
 9039  00008370          	.align 2
 9040  00008370          	.proc _CondBroadcast
 9041  00008370          	.global _CondBroadcast
 9042  00008370          	_CondBroadcast:
 9043                      ;  Function 'CondBroadcast'; 0 bytes of locals, 0 regs to save.
 9044  00008370  afbefffc	sw	-4(r29),r30; push fp
 9045  00008374  001df020	add	r30,r0,r29; fp = sp
 9046  00008378  afbffff8	sw	-8(r29),r31; push ret addr
 9047  0000837c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9048  00008380  8fdffff8	lw	r31,-8(r30)
 9049  00008384  001ee820	add	r29,r0,r30
 9050  00008388  8fdefffc	lw	r30,-4(r30)
 9051  0000838c  4be00000	jr	r31
 9052  00008390  54000000	nop
 9053  00008394          	.endproc _CondBroadcast
 9054                      ; Compiled by GCC
 9056  00008394          	.align 2
 9057  00008394          	.proc _isspace
 9058  00008394          	.global _isspace
 9059  00008394          	_isspace:
 9060                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 9061  00008394  afbefffc	sw	-4(r29),r30; push fp
 9062  00008398  001df020	add	r30,r0,r29; fp = sp
 9063  0000839c  afbffff8	sw	-8(r29),r31; push ret addr
 9064  000083a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 9065  000083a4  afa20000	sw	0(r29),r2
 9066  000083a8  83c20003	lb	r2,3(r30)
 9067  000083ac  201f0000	addi	r31,r0,#0
 9068  000083b0  304100ff	andi	r1,r2,#0x00ff
 9069  000083b4  60210020	seqi	r1,r1,#32
 9070  000083b8  14200018	bnez	r1,L6_LF6
 9071  000083bc  54000000	nop; not filled.
 9072  000083c0  2041fff7	addi	r1,r2,#-9
 9073  000083c4  302100ff	andi	r1,r1,#0x00ff
 9074  000083c8  70210001	sleui	r1,r1,#1
 9075  000083cc  10200008	beqz	r1,L5_LF6
 9076  000083d0  54000000	nop; not filled.
 9077  000083d4          	L6_LF6:
 9078  000083d4  201f0001	addi	r31,r0,#1
 9079  000083d8          	L5_LF6:
 9080  000083d8  001f0820	add	r1,r0,r31
 9081  000083dc  8fa20000	lw	r2,0(r29)
 9082  000083e0  8fdffff8	lw	r31,-8(r30)
 9083  000083e4  001ee820	add	r29,r0,r30
 9084  000083e8  8fdefffc	lw	r30,-4(r30)
 9085  000083ec  4be00000	jr	r31
 9086  000083f0  54000000	nop
 9087  000083f4          	.endproc _isspace
 9088  000083f4          	.align 2
 9089  000083f4          	.proc _isxdigit
 9090  000083f4          	.global _isxdigit
 9091  000083f4          	_isxdigit:
 9092                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 9093  000083f4  afbefffc	sw	-4(r29),r30; push fp
 9094  000083f8  001df020	add	r30,r0,r29; fp = sp
 9095  000083fc  afbffff8	sw	-8(r29),r31; push ret addr
 9096  00008400  2fbd0010	subui	r29,r29,#16; alloc local storage
 9097  00008404  afa20000	sw	0(r29),r2
 9098  00008408  83df0003	lb	r31,3(r30)
 9099  0000840c  20020000	addi	r2,r0,#0
 9100  00008410  23e1ffd0	addi	r1,r31,#-48
 9101  00008414  302100ff	andi	r1,r1,#0x00ff
 9102  00008418  70210009	sleui	r1,r1,#9
 9103  0000841c  14200028	bnez	r1,L12_LF6
 9104  00008420  54000000	nop; not filled.
 9105  00008424  23e1ff9f	addi	r1,r31,#-97
 9106  00008428  302100ff	andi	r1,r1,#0x00ff
 9107  0000842c  70210005	sleui	r1,r1,#5
 9108  00008430  14200014	bnez	r1,L12_LF6
 9109  00008434  54000000	nop; not filled.
 9110  00008438  33e100ff	andi	r1,r31,#0x00ff
 9111  0000843c  64210041	snei	r1,r1,#65
 9112  00008440  14200008	bnez	r1,L11_LF6
 9113  00008444  54000000	nop; not filled.
 9114  00008448          	L12_LF6:
 9115  00008448  20020001	addi	r2,r0,#1
 9116  0000844c          	L11_LF6:
 9117  0000844c  00020820	add	r1,r0,r2
 9118  00008450  8fa20000	lw	r2,0(r29)
 9119  00008454  8fdffff8	lw	r31,-8(r30)
 9120  00008458  001ee820	add	r29,r0,r30
 9121  0000845c  8fdefffc	lw	r30,-4(r30)
 9122  00008460  4be00000	jr	r31
 9123  00008464  54000000	nop
 9124  00008468          	.endproc _isxdigit
 9125  00008468          	.align 2
 9126  00008468          	.proc _DisableIntrs
 9127  00008468          	.global _DisableIntrs
 9128  00008468          	_DisableIntrs:
 9129                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 9130  00008468  afbefffc	sw	-4(r29),r30; push fp
 9131  0000846c  001df020	add	r30,r0,r29; fp = sp
 9132  00008470  afbffff8	sw	-8(r29),r31; push ret addr
 9133  00008474  2fbd0010	subui	r29,r29,#16; alloc local storage
 9134  00008478  afa20000	sw	0(r29),r2
 9135  0000847c  23bdfff8	addi	r29,r29,#-8
 9136  00008480  2002000f	addi	r2,r0,#15
 9137  00008484  afa20000	sw	(r29),r2
 9138  00008488  0c001c18	jal	_SetIntrs
 9139  0000848c  54000000	nop; not filled.
 9140  00008490  23bd0008	addi	r29,r29,#8
 9141  00008494  8fa20000	lw	r2,0(r29)
 9142  00008498  8fdffff8	lw	r31,-8(r30)
 9143  0000849c  001ee820	add	r29,r0,r30
 9144  000084a0  8fdefffc	lw	r30,-4(r30)
 9145  000084a4  4be00000	jr	r31
 9146  000084a8  54000000	nop
 9147  000084ac          	.endproc _DisableIntrs
 9148  000084ac          	.align 2
 9149  000084ac          	.proc _EnableIntrs
 9150  000084ac          	.global _EnableIntrs
 9151  000084ac          	_EnableIntrs:
 9152                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 9153  000084ac  afbefffc	sw	-4(r29),r30; push fp
 9154  000084b0  001df020	add	r30,r0,r29; fp = sp
 9155  000084b4  afbffff8	sw	-8(r29),r31; push ret addr
 9156  000084b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 9157  000084bc  afa20000	sw	0(r29),r2
 9158  000084c0  23bdfff8	addi	r29,r29,#-8
 9159  000084c4  20020000	addi	r2,r0,#0
 9160  000084c8  afa20000	sw	(r29),r2
 9161  000084cc  0c001bd4	jal	_SetIntrs
 9162  000084d0  54000000	nop; not filled.
 9163  000084d4  23bd0008	addi	r29,r29,#8
 9164  000084d8  8fa20000	lw	r2,0(r29)
 9165  000084dc  8fdffff8	lw	r31,-8(r30)
 9166  000084e0  001ee820	add	r29,r0,r30
 9167  000084e4  8fdefffc	lw	r30,-4(r30)
 9168  000084e8  4be00000	jr	r31
 9169  000084ec  54000000	nop
 9170  000084f0          	.endproc _EnableIntrs
 9171  000084f0          	.align 2
 9172  000084f0          	.proc _RestoreIntrs
 9173  000084f0          	.global _RestoreIntrs
 9174  000084f0          	_RestoreIntrs:
 9175                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 9176  000084f0  afbefffc	sw	-4(r29),r30; push fp
 9177  000084f4  001df020	add	r30,r0,r29; fp = sp
 9178  000084f8  afbffff8	sw	-8(r29),r31; push ret addr
 9179  000084fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 9180  00008500  afa20000	sw	0(r29),r2
 9181  00008504  23bdfff8	addi	r29,r29,#-8
 9182  00008508  8fc20000	lw	r2,(r30)
 9183  0000850c  afa20000	sw	(r29),r2
 9184  00008510  0c001b90	jal	_SetIntrs
 9185  00008514  54000000	nop; not filled.
 9186  00008518  23bd0008	addi	r29,r29,#8
 9187  0000851c  8fa20000	lw	r2,0(r29)
 9188  00008520  8fdffff8	lw	r31,-8(r30)
 9189  00008524  001ee820	add	r29,r0,r30
 9190  00008528  8fdefffc	lw	r30,-4(r30)
 9191  0000852c  4be00000	jr	r31
 9192  00008530  54000000	nop
 9193  00008534          	.endproc _RestoreIntrs
 9194  00008534          	.align 2
 9195  00008534          	.proc _QueueLinkInit
 9196  00008534          	.global _QueueLinkInit
 9197  00008534          	_QueueLinkInit:
 9198                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 9199  00008534  afbefffc	sw	-4(r29),r30; push fp
 9200  00008538  001df020	add	r30,r0,r29; fp = sp
 9201  0000853c  afbffff8	sw	-8(r29),r31; push ret addr
 9202  00008540  2fbd0010	subui	r29,r29,#16; alloc local storage
 9203  00008544  afa20000	sw	0(r29),r2
 9204  00008548  8fc10000	lw	r1,(r30)
 9205  0000854c  8fc20004	lw	r2,4(r30)
 9206  00008550  201f0000	addi	r31,r0,#0
 9207  00008554  ac3f0000	sw	(r1),r31
 9208  00008558  ac22000c	sw	12(r1),r2
 9209  0000855c  8fa20000	lw	r2,0(r29)
 9210  00008560  8fdffff8	lw	r31,-8(r30)
 9211  00008564  001ee820	add	r29,r0,r30
 9212  00008568  8fdefffc	lw	r30,-4(r30)
 9213  0000856c  4be00000	jr	r31
 9214  00008570  54000000	nop
 9215  00008574          	.endproc _QueueLinkInit
 9216  00008574          	.align 2
 9217  00008574          	.proc _QueueNext
 9218  00008574          	.global _QueueNext
 9219  00008574          	_QueueNext:
 9220                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 9221  00008574  afbefffc	sw	-4(r29),r30; push fp
 9222  00008578  001df020	add	r30,r0,r29; fp = sp
 9223  0000857c  afbffff8	sw	-8(r29),r31; push ret addr
 9224  00008580  2fbd0008	subui	r29,r29,#8; alloc local storage
 9225  00008584  8fc10000	lw	r1,(r30)
 9226  00008588  8c210000	lw	r1,(r1)
 9227  0000858c  8fdffff8	lw	r31,-8(r30)
 9228  00008590  001ee820	add	r29,r0,r30
 9229  00008594  8fdefffc	lw	r30,-4(r30)
 9230  00008598  4be00000	jr	r31
 9231  0000859c  54000000	nop
 9232  000085a0          	.endproc _QueueNext
 9233  000085a0          	.align 2
 9234  000085a0          	.proc _QueuePrev
 9235  000085a0          	.global _QueuePrev
 9236  000085a0          	_QueuePrev:
 9237                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 9238  000085a0  afbefffc	sw	-4(r29),r30; push fp
 9239  000085a4  001df020	add	r30,r0,r29; fp = sp
 9240  000085a8  afbffff8	sw	-8(r29),r31; push ret addr
 9241  000085ac  2fbd0008	subui	r29,r29,#8; alloc local storage
 9242  000085b0  8fc10000	lw	r1,(r30)
 9243  000085b4  8c210004	lw	r1,4(r1)
 9244  000085b8  8fdffff8	lw	r31,-8(r30)
 9245  000085bc  001ee820	add	r29,r0,r30
 9246  000085c0  8fdefffc	lw	r30,-4(r30)
 9247  000085c4  4be00000	jr	r31
 9248  000085c8  54000000	nop
 9249  000085cc          	.endproc _QueuePrev
 9250  000085cc          	.align 2
 9251  000085cc          	.proc _QueueFirst
 9252  000085cc          	.global _QueueFirst
 9253  000085cc          	_QueueFirst:
 9254                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 9255  000085cc  afbefffc	sw	-4(r29),r30; push fp
 9256  000085d0  001df020	add	r30,r0,r29; fp = sp
 9257  000085d4  afbffff8	sw	-8(r29),r31; push ret addr
 9258  000085d8  2fbd0008	subui	r29,r29,#8; alloc local storage
 9259  000085dc  8fc10000	lw	r1,(r30)
 9260  000085e0  8c210000	lw	r1,(r1)
 9261  000085e4  8fdffff8	lw	r31,-8(r30)
 9262  000085e8  001ee820	add	r29,r0,r30
 9263  000085ec  8fdefffc	lw	r30,-4(r30)
 9264  000085f0  4be00000	jr	r31
 9265  000085f4  54000000	nop
 9266  000085f8          	.endproc _QueueFirst
 9267  000085f8          	.align 2
 9268  000085f8          	.proc _QueueLast
 9269  000085f8          	.global _QueueLast
 9270  000085f8          	_QueueLast:
 9271                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 9272  000085f8  afbefffc	sw	-4(r29),r30; push fp
 9273  000085fc  001df020	add	r30,r0,r29; fp = sp
 9274  00008600  afbffff8	sw	-8(r29),r31; push ret addr
 9275  00008604  2fbd0008	subui	r29,r29,#8; alloc local storage
 9276  00008608  8fc10000	lw	r1,(r30)
 9277  0000860c  8c210004	lw	r1,4(r1)
 9278  00008610  8fdffff8	lw	r31,-8(r30)
 9279  00008614  001ee820	add	r29,r0,r30
 9280  00008618  8fdefffc	lw	r30,-4(r30)
 9281  0000861c  4be00000	jr	r31
 9282  00008620  54000000	nop
 9283  00008624          	.endproc _QueueLast
 9284  00008624          	.align 2
 9285  00008624          	.proc _QueueInsertAfter
 9286  00008624          	.global _QueueInsertAfter
 9287  00008624          	_QueueInsertAfter:
 9288                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 9289  00008624  afbefffc	sw	-4(r29),r30; push fp
 9290  00008628  001df020	add	r30,r0,r29; fp = sp
 9291  0000862c  afbffff8	sw	-8(r29),r31; push ret addr
 9292  00008630  2fbd0010	subui	r29,r29,#16; alloc local storage
 9293  00008634  afa20000	sw	0(r29),r2
 9294  00008638  afa30004	sw	4(r29),r3
 9295  0000863c  8fc30000	lw	r3,(r30)
 9296  00008640  8fc20004	lw	r2,4(r30)
 9297  00008644  8fc10008	lw	r1,8(r30)
 9298  00008648  ac230008	sw	8(r1),r3
 9299  0000864c  ac220004	sw	4(r1),r2
 9300  00008650  8c5f0000	lw	r31,(r2)
 9301  00008654  ac3f0000	sw	(r1),r31
 9302  00008658  ac410000	sw	(r2),r1
 9303  0000865c  8c220000	lw	r2,(r1)
 9304  00008660  ac410004	sw	4(r2),r1
 9305  00008664  8c610008	lw	r1,8(r3)
 9306  00008668  20210001	addi	r1,r1,#1
 9307  0000866c  ac610008	sw	8(r3),r1
 9308  00008670  8fa20000	lw	r2,0(r29)
 9309  00008674  8fa30004	lw	r3,4(r29)
 9310  00008678  8fdffff8	lw	r31,-8(r30)
 9311  0000867c  001ee820	add	r29,r0,r30
 9312  00008680  8fdefffc	lw	r30,-4(r30)
 9313  00008684  4be00000	jr	r31
 9314  00008688  54000000	nop
 9315  0000868c          	.endproc _QueueInsertAfter
 9316  0000868c          	.align 2
 9317  0000868c          	.proc _QueueInsertFirst
 9318  0000868c          	.global _QueueInsertFirst
 9319  0000868c          	_QueueInsertFirst:
 9320                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 9321  0000868c  afbefffc	sw	-4(r29),r30; push fp
 9322  00008690  001df020	add	r30,r0,r29; fp = sp
 9323  00008694  afbffff8	sw	-8(r29),r31; push ret addr
 9324  00008698  2fbd0010	subui	r29,r29,#16; alloc local storage
 9325  0000869c  afa20000	sw	0(r29),r2
 9326  000086a0  afa30004	sw	4(r29),r3
 9327  000086a4  8fc30000	lw	r3,(r30)
 9328  000086a8  8fc10004	lw	r1,4(r30)
 9329  000086ac  ac230008	sw	8(r1),r3
 9330  000086b0  ac230004	sw	4(r1),r3
 9331  000086b4  8c7f0000	lw	r31,(r3)
 9332  000086b8  ac3f0000	sw	(r1),r31
 9333  000086bc  ac610000	sw	(r3),r1
 9334  000086c0  8c220000	lw	r2,(r1)
 9335  000086c4  ac410004	sw	4(r2),r1
 9336  000086c8  8c610008	lw	r1,8(r3)
 9337  000086cc  20210001	addi	r1,r1,#1
 9338  000086d0  ac610008	sw	8(r3),r1
 9339  000086d4  8fa20000	lw	r2,0(r29)
 9340  000086d8  8fa30004	lw	r3,4(r29)
 9341  000086dc  8fdffff8	lw	r31,-8(r30)
 9342  000086e0  001ee820	add	r29,r0,r30
 9343  000086e4  8fdefffc	lw	r30,-4(r30)
 9344  000086e8  4be00000	jr	r31
 9345  000086ec  54000000	nop
 9346  000086f0          	.endproc _QueueInsertFirst
 9347  000086f0          	.align 2
 9348  000086f0          	.proc _QueueInsertLast
 9349  000086f0          	.global _QueueInsertLast
 9350  000086f0          	_QueueInsertLast:
 9351                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 9352  000086f0  afbefffc	sw	-4(r29),r30; push fp
 9353  000086f4  001df020	add	r30,r0,r29; fp = sp
 9354  000086f8  afbffff8	sw	-8(r29),r31; push ret addr
 9355  000086fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 9356  00008700  afa20000	sw	0(r29),r2
 9357  00008704  afa30004	sw	4(r29),r3
 9358  00008708  8fc30000	lw	r3,(r30)
 9359  0000870c  8fc10004	lw	r1,4(r30)
 9360  00008710  8c620004	lw	r2,4(r3)
 9361  00008714  ac230008	sw	8(r1),r3
 9362  00008718  ac220004	sw	4(r1),r2
 9363  0000871c  8c5f0000	lw	r31,(r2)
 9364  00008720  ac3f0000	sw	(r1),r31
 9365  00008724  ac410000	sw	(r2),r1
 9366  00008728  8c220000	lw	r2,(r1)
 9367  0000872c  ac410004	sw	4(r2),r1
 9368  00008730  8c610008	lw	r1,8(r3)
 9369  00008734  20210001	addi	r1,r1,#1
 9370  00008738  ac610008	sw	8(r3),r1
 9371  0000873c  8fa20000	lw	r2,0(r29)
 9372  00008740  8fa30004	lw	r3,4(r29)
 9373  00008744  8fdffff8	lw	r31,-8(r30)
 9374  00008748  001ee820	add	r29,r0,r30
 9375  0000874c  8fdefffc	lw	r30,-4(r30)
 9376  00008750  4be00000	jr	r31
 9377  00008754  54000000	nop
 9378  00008758          	.endproc _QueueInsertLast
 9379  00008758          	.align 2
 9380  00008758          	.proc _QueueRemove
 9381  00008758          	.global _QueueRemove
 9382  00008758          	_QueueRemove:
 9383                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 9384  00008758  afbefffc	sw	-4(r29),r30; push fp
 9385  0000875c  001df020	add	r30,r0,r29; fp = sp
 9386  00008760  afbffff8	sw	-8(r29),r31; push ret addr
 9387  00008764  2fbd0010	subui	r29,r29,#16; alloc local storage
 9388  00008768  afa20000	sw	0(r29),r2
 9389  0000876c  afa30004	sw	4(r29),r3
 9390  00008770  8fdf0000	lw	r31,(r30)
 9391  00008774  8fe10008	lw	r1,8(r31)
 9392  00008778  8c210008	lw	r1,8(r1)
 9393  0000877c  6c210000	sgti	r1,r1,#0
 9394  00008780  1020002c	beqz	r1,L44_LF6
 9395  00008784  54000000	nop; not filled.
 9396  00008788  8fe10004	lw	r1,4(r31)
 9397  0000878c  8fe30000	lw	r3,(r31)
 9398  00008790  ac230000	sw	(r1),r3
 9399  00008794  8fe10000	lw	r1,(r31)
 9400  00008798  8fe30004	lw	r3,4(r31)
 9401  0000879c  ac230004	sw	4(r1),r3
 9402  000087a0  8fe20008	lw	r2,8(r31)
 9403  000087a4  8c410008	lw	r1,8(r2)
 9404  000087a8  2021ffff	addi	r1,r1,#-1
 9405  000087ac  ac410008	sw	8(r2),r1
 9406  000087b0          	L44_LF6:
 9407  000087b0  20030000	addi	r3,r0,#0
 9408  000087b4  afe30000	sw	(r31),r3
 9409  000087b8  8fa20000	lw	r2,0(r29)
 9410  000087bc  8fa30004	lw	r3,4(r29)
 9411  000087c0  8fdffff8	lw	r31,-8(r30)
 9412  000087c4  001ee820	add	r29,r0,r30
 9413  000087c8  8fdefffc	lw	r30,-4(r30)
 9414  000087cc  4be00000	jr	r31
 9415  000087d0  54000000	nop
 9416  000087d4          	.endproc _QueueRemove
 9417  000087d4          	.align 2
 9418  000087d4          	.proc _QueueLength
 9419  000087d4          	.global _QueueLength
 9420  000087d4          	_QueueLength:
 9421                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 9422  000087d4  afbefffc	sw	-4(r29),r30; push fp
 9423  000087d8  001df020	add	r30,r0,r29; fp = sp
 9424  000087dc  afbffff8	sw	-8(r29),r31; push ret addr
 9425  000087e0  2fbd0008	subui	r29,r29,#8; alloc local storage
 9426  000087e4  8fc10000	lw	r1,(r30)
 9427  000087e8  8c210008	lw	r1,8(r1)
 9428  000087ec  8fdffff8	lw	r31,-8(r30)
 9429  000087f0  001ee820	add	r29,r0,r30
 9430  000087f4  8fdefffc	lw	r30,-4(r30)
 9431  000087f8  4be00000	jr	r31
 9432  000087fc  54000000	nop
 9433  00008800          	.endproc _QueueLength
 9434  00008800          	.align 2
 9435  00008800          	.proc _QueueEmpty
 9436  00008800          	.global _QueueEmpty
 9437  00008800          	_QueueEmpty:
 9438                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 9439  00008800  afbefffc	sw	-4(r29),r30; push fp
 9440  00008804  001df020	add	r30,r0,r29; fp = sp
 9441  00008808  afbffff8	sw	-8(r29),r31; push ret addr
 9442  0000880c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9443  00008810  8fc10000	lw	r1,(r30)
 9444  00008814  8c210008	lw	r1,8(r1)
 9445  00008818  60210000	seqi	r1,r1,#0
 9446  0000881c  8fdffff8	lw	r31,-8(r30)
 9447  00008820  001ee820	add	r29,r0,r30
 9448  00008824  8fdefffc	lw	r30,-4(r30)
 9449  00008828  4be00000	jr	r31
 9450  0000882c  54000000	nop
 9451  00008830          	.endproc _QueueEmpty
 9452  00008830          	.align 2
 9453  00008830          	.proc _TimerSet
 9454  00008830          	.global _TimerSet
 9455  00008830          	_TimerSet:
 9456                      ;  Function 'TimerSet'; 0 bytes of locals, 0 regs to save.
 9457  00008830  afbefffc	sw	-4(r29),r30; push fp
 9458  00008834  001df020	add	r30,r0,r29; fp = sp
 9459  00008838  afbffff8	sw	-8(r29),r31; push ret addr
 9460  0000883c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9461  00008840  3c01fff0	lhi	r1,#-16
 9462  00008844  24210010	addui	r1,r1,#16
 9463  00008848  8fdf0000	lw	r31,(r30)
 9464  0000884c  ac3f0000	sw	(r1),r31
 9465  00008850  8fdffff8	lw	r31,-8(r30)
 9466  00008854  001ee820	add	r29,r0,r30
 9467  00008858  8fdefffc	lw	r30,-4(r30)
 9468  0000885c  4be00000	jr	r31
 9469  00008860  54000000	nop
 9470  00008864          	.endproc _TimerSet
 9471  00008864          	.align 2
 9472  00008864          	.proc _KbdModuleInit
 9473  00008864          	.global _KbdModuleInit
 9474  00008864          	_KbdModuleInit:
 9475                      ;  Function 'KbdModuleInit'; 0 bytes of locals, 0 regs to save.
 9476  00008864  afbefffc	sw	-4(r29),r30; push fp
 9477  00008868  001df020	add	r30,r0,r29; fp = sp
 9478  0000886c  afbffff8	sw	-8(r29),r31; push ret addr
 9479  00008870  2fbd0008	subui	r29,r29,#8; alloc local storage
 9480  00008874  3c01fff0	lhi	r1,#-16
 9481  00008878  242101c0	addui	r1,r1,#448
 9482  0000887c  201f0001	addi	r31,r0,#1
 9483  00008880  ac3f0000	sw	(r1),r31
 9484  00008884  8fdffff8	lw	r31,-8(r30)
 9485  00008888  001ee820	add	r29,r0,r30
 9486  0000888c  8fdefffc	lw	r30,-4(r30)
 9487  00008890  4be00000	jr	r31
 9488  00008894  54000000	nop
 9489  00008898          	.endproc _KbdModuleInit
 9490  00008898          	.align 2
 9491  00008898          	.proc _TrapPrintfHandler_LF6
 9492  00008898          	_TrapPrintfHandler_LF6:
 9493                      ;  Function 'TrapPrintfHandler'; 160 bytes of locals, 10 regs to save.
 9494  00008898  afbefffc	sw	-4(r29),r30; push fp
 9495  0000889c  001df020	add	r30,r0,r29; fp = sp
 9496  000088a0  afbffff8	sw	-8(r29),r31; push ret addr
 9497  000088a4  2fbd00d0	subui	r29,r29,#208; alloc local storage
 9498  000088a8  afa20000	sw	0(r29),r2
 9499  000088ac  afa30004	sw	4(r29),r3
 9500  000088b0  afa40008	sw	8(r29),r4
 9501  000088b4  afa5000c	sw	12(r29),r5
 9502  000088b8  afa60010	sw	16(r29),r6
 9503  000088bc  afa70014	sw	20(r29),r7
 9504  000088c0  afa80018	sw	24(r29),r8
 9505  000088c4  afa9001c	sw	28(r29),r9
 9506  000088c8  afaa0020	sw	32(r29),r10
 9507  000088cc  afab0024	sw	36(r29),r11
 9508  000088d0  8fc40000	lw	r4,(r30)
 9509  000088d4  8fc10004	lw	r1,4(r30)
 9510  000088d8  20080000	addi	r8,r0,#0
 9511  000088dc  00081820	add	r3,r0,r8
 9512  000088e0  64210000	snei	r1,r1,#0
 9513  000088e4  142000a0	bnez	r1,L56_LF6
 9514  000088e8  54000000	nop; not filled.
 9515  000088ec  23bdfff0	addi	r29,r29,#-16
 9516  000088f0  3c020000	lhi	r2,((_currentPCB)>>16)&0xffff
 9517  000088f4  2442fcf0	addui	r2,r2,(_currentPCB)&0xffff
 9518  000088f8  8c4b0000	lw	r11,(r2)
 9519  000088fc  afab0000	sw	(r29),r11
 9520  00008900  afa40004	sw	4(r29),r4
 9521  00008904  23c1ff58	addi	r1,r30,#-168
 9522  00008908  afa10008	sw	8(r29),r1
 9523  0000890c  200b0028	addi	r11,r0,#40
 9524  00008910  afab000c	sw	12(r29),r11
 9525  00008914  0fffa954	jal	_MemoryCopyUserToSystem
 9526  00008918  54000000	nop; not filled.
 9527  0000891c  23bd0010	addi	r29,r29,#16
 9528  00008920  23c5ffa7	addi	r5,r30,#-89
 9529  00008924  23c4ffa8	addi	r4,r30,#-88
 9530  00008928          	L57_LF6:
 9531  00008928  23bdfff0	addi	r29,r29,#-16
 9532  0000892c  8c4b0000	lw	r11,(r2)
 9533  00008930  afab0000	sw	(r29),r11
 9534  00008934  8fc1ff58	lw	r1,-168(r30)
 9535  00008938  00230820	add	r1,r1,r3
 9536  0000893c  afa10004	sw	4(r29),r1
 9537  00008940  afa40008	sw	8(r29),r4
 9538  00008944  200b0001	addi	r11,r0,#1
 9539  00008948  afab000c	sw	12(r29),r11
 9540  0000894c  0fffa91c	jal	_MemoryCopyUserToSystem
 9541  00008950  54000000	nop; not filled.
 9542  00008954  20a50001	addi	r5,r5,#1
 9543  00008958  20840001	addi	r4,r4,#1
 9544  0000895c  20630001	addi	r3,r3,#1
 9545  00008960  23bd0010	addi	r29,r29,#16
 9546  00008964  7061004f	sleui	r1,r3,#79
 9547  00008968  10200060	beqz	r1,L62_LF6
 9548  0000896c  54000000	nop; not filled.
 9549  00008970  90a10000	lbu	r1,(r5)
 9550  00008974  64210000	snei	r1,r1,#0
 9551  00008978  10200050	beqz	r1,L62_LF6
 9552  0000897c  54000000	nop; not filled.
 9553  00008980  0bffffa4	j	L57_LF6
 9554  00008984  54000000	nop; not filled.
 9555  00008988          	L56_LF6:
 9556  00008988  23bdfff0	addi	r29,r29,#-16
 9557  0000898c  afa40000	sw	(r29),r4
 9558  00008990  23c1ff58	addi	r1,r30,#-168
 9559  00008994  afa10004	sw	4(r29),r1
 9560  00008998  200b0028	addi	r11,r0,#40
 9561  0000899c  afab0008	sw	8(r29),r11
 9562  000089a0  0fffb508	jal	_bcopy
 9563  000089a4  54000000	nop; not filled.
 9564  000089a8  8fcbff58	lw	r11,-168(r30)
 9565  000089ac  afab0000	sw	(r29),r11
 9566  000089b0  23c1ffa8	addi	r1,r30,#-88
 9567  000089b4  afa10004	sw	4(r29),r1
 9568  000089b8  200b0050	addi	r11,r0,#80
 9569  000089bc  afab0008	sw	8(r29),r11
 9570  000089c0  0fffacfc	jal	_dstrncpy
 9571  000089c4  54000000	nop; not filled.
 9572  000089c8  23bd0010	addi	r29,r29,#16
 9573  000089cc          	L62_LF6:
 9574  000089cc  200b0000	addi	r11,r0,(#0x0)&0xff
 9575  000089d0  a3cbfff7	sb	-9(r30),r11
 9576  000089d4  23c3ffa8	addi	r3,r30,#-88
 9577  000089d8  80620000	lb	r2,(r3)
 9578  000089dc  304100ff	andi	r1,r2,#0x00ff
 9579  000089e0  64210000	snei	r1,r1,#0
 9580  000089e4  102000f0	beqz	r1,L64_LF6
 9581  000089e8  54000000	nop; not filled.
 9582  000089ec  23cafff8	addi	r10,r30,#-8
 9583  000089f0  23c9ff5c	addi	r9,r30,#-164
 9584  000089f4  51010002	slli	r1,r8,#0x2
 9585  000089f8  00293820	add	r7,r1,r9
 9586  000089fc  002a3020	add	r6,r1,r10
 9587  00008a00          	L66_LF6:
 9588  00008a00  304100ff	andi	r1,r2,#0x00ff
 9589  00008a04  60210025	seqi	r1,r1,#37
 9590  00008a08  102000b4	beqz	r1,L65_LF6
 9591  00008a0c  54000000	nop; not filled.
 9592  00008a10  90610001	lbu	r1,1(r3)
 9593  00008a14  60210025	seqi	r1,r1,#37
 9594  00008a18  10200010	beqz	r1,L68_LF6
 9595  00008a1c  54000000	nop; not filled.
 9596  00008a20  20630001	addi	r3,r3,#1
 9597  00008a24  08000098	j	L65_LF6
 9598  00008a28  54000000	nop; not filled.
 9599  00008a2c          	L68_LF6:
 9600  00008a2c  8ceb0000	lw	r11,(r7)
 9601  00008a30  accbff88	sw	-120(r6),r11
 9602  00008a34  51010002	slli	r1,r8,#0x2
 9603  00008a38  00292820	add	r5,r1,r9
 9604  00008a3c  002a2020	add	r4,r1,r10
 9605  00008a40          	L71_LF6:
 9606  00008a40  20630001	addi	r3,r3,#1
 9607  00008a44  807f0000	lb	r31,(r3)
 9608  00008a48  33e200ff	andi	r2,r31,#0x00ff
 9609  00008a4c  60410073	seqi	r1,r2,#115
 9610  00008a50  14200060	bnez	r1,L70_LF6
 9611  00008a54  54000000	nop; not filled.
 9612  00008a58  6041006c	seqi	r1,r2,#108
 9613  00008a5c  1420ffe0	bnez	r1,L71_LF6
 9614  00008a60  54000000	nop; not filled.
 9615  00008a64  23e1ff9a	addi	r1,r31,#-102
 9616  00008a68  302100ff	andi	r1,r1,#0x00ff
 9617  00008a6c  70210001	sleui	r1,r1,#1
 9618  00008a70  14200010	bnez	r1,L77_LF6
 9619  00008a74  54000000	nop; not filled.
 9620  00008a78  60410065	seqi	r1,r2,#101
 9621  00008a7c  10200020	beqz	r1,L76_LF6
 9622  00008a80  54000000	nop; not filled.
 9623  00008a84          	L77_LF6:
 9624  00008a84  20e70004	addi	r7,r7,#4
 9625  00008a88  20c60004	addi	r6,r6,#4
 9626  00008a8c  21080001	addi	r8,r8,#1
 9627  00008a90  8ca50004	lw	r5,4(r5)
 9628  00008a94  ac85ff8c	sw	-116(r4),r5
 9629  00008a98  08000018	j	L70_LF6
 9630  00008a9c  54000000	nop; not filled.
 9631  00008aa0          	L76_LF6:
 9632  00008aa0  23e1ff9f	addi	r1,r31,#-97
 9633  00008aa4  302100ff	andi	r1,r1,#0x00ff
 9634  00008aa8  70210019	sleui	r1,r1,#25
 9635  00008aac  1020ff90	beqz	r1,L71_LF6
 9636  00008ab0  54000000	nop; not filled.
 9637  00008ab4          	L70_LF6:
 9638  00008ab4  20e70004	addi	r7,r7,#4
 9639  00008ab8  20c60004	addi	r6,r6,#4
 9640  00008abc  21080001	addi	r8,r8,#1
 9641  00008ac0          	L65_LF6:
 9642  00008ac0  20630001	addi	r3,r3,#1
 9643  00008ac4  80620000	lb	r2,(r3)
 9644  00008ac8  304100ff	andi	r1,r2,#0x00ff
 9645  00008acc  64210000	snei	r1,r1,#0
 9646  00008ad0  1420ff2c	bnez	r1,L66_LF6
 9647  00008ad4  54000000	nop; not filled.
 9648  00008ad8          	L64_LF6:
 9649  00008ad8  23bdffd8	addi	r29,r29,#-40
 9650  00008adc  23c1ffa8	addi	r1,r30,#-88
 9651  00008ae0  afa10000	sw	(r29),r1
 9652  00008ae4  8fc1ff80	lw	r1,-128(r30)
 9653  00008ae8  afa10004	sw	4(r29),r1
 9654  00008aec  8fcbff84	lw	r11,-124(r30)
 9655  00008af0  afab0008	sw	8(r29),r11
 9656  00008af4  8fcbff88	lw	r11,-120(r30)
 9657  00008af8  afab000c	sw	12(r29),r11
 9658  00008afc  8fcbff8c	lw	r11,-116(r30)
 9659  00008b00  afab0010	sw	16(r29),r11
 9660  00008b04  8fcbff90	lw	r11,-112(r30)
 9661  00008b08  afab0014	sw	20(r29),r11
 9662  00008b0c  8fcbff94	lw	r11,-108(r30)
 9663  00008b10  afab0018	sw	24(r29),r11
 9664  00008b14  8fcbff98	lw	r11,-104(r30)
 9665  00008b18  afab001c	sw	28(r29),r11
 9666  00008b1c  8fcbff9c	lw	r11,-100(r30)
 9667  00008b20  afab0020	sw	32(r29),r11
 9668  00008b24  0c0016d0	jal	_printf
 9669  00008b28  54000000	nop; not filled.
 9670  00008b2c  23bd0028	addi	r29,r29,#40
 9671  00008b30  8fa20000	lw	r2,0(r29)
 9672  00008b34  8fa30004	lw	r3,4(r29)
 9673  00008b38  8fa40008	lw	r4,8(r29)
 9674  00008b3c  8fa5000c	lw	r5,12(r29)
 9675  00008b40  8fa60010	lw	r6,16(r29)
 9676  00008b44  8fa70014	lw	r7,20(r29)
 9677  00008b48  8fa80018	lw	r8,24(r29)
 9678  00008b4c  8fa9001c	lw	r9,28(r29)
 9679  00008b50  8faa0020	lw	r10,32(r29)
 9680  00008b54  8fab0024	lw	r11,36(r29)
 9681  00008b58  8fdffff8	lw	r31,-8(r30)
 9682  00008b5c  001ee820	add	r29,r0,r30
 9683  00008b60  8fdefffc	lw	r30,-4(r30)
 9684  00008b64  4be00000	jr	r31
 9685  00008b68  54000000	nop
 9686  00008b6c          	.endproc _TrapPrintfHandler_LF6
 9687  00008b6c          	.data
 9688  00012dc5          	.align 2
 9689  00012dc8          	LC0_LF6:
 9690  00012dc8  496e7465	.ascii "Interrupt cause=0x%x iar=0x%x isr=0x%x args=0x%08x.\n\000"
 9690  00012dcc  72727570	
 9690  00012dd0  74206361	
 9690  00012dd4  7573653d	
 9690  00012dd8  30782578	
 9690  00012ddc  20696172	
 9690  00012de0  3d307825	
 9690  00012de4  78206973	
 9690  00012de8  723d3078	
 9690  00012dec  25782061	
 9690  00012df0  7267733d	
 9690  00012df4  30782530	
 9690  00012df8  38782e0a	
 9690  00012dfc  00      	
 9691  00012dfd          	.align 2
 9692  00012e00          	LC1_LF6:
 9693  00012e00  476f7420	.ascii "Got a context switch trap!\n\000"
 9693  00012e04  6120636f	
 9693  00012e08  6e746578	
 9693  00012e0c  74207377	
 9693  00012e10  69746368	
 9693  00012e14  20747261	
 9693  00012e18  70210a00	
 9694  00012e1c          	.align 2
 9695  00012e1c          	LC2_LF6:
 9696  00012e1c  476f7420	.ascii "Got an exit trap!\n\000"
 9696  00012e20  616e2065	
 9696  00012e24  78697420	
 9696  00012e28  74726170	
 9696  00012e2c  210a00  	
 9697  00012e2f          	.align 2
 9698  00012e30          	LC3_LF6:
 9699  00012e30  476f7420	.ascii "Got a fork trap!\n\000"
 9699  00012e34  6120666f	
 9699  00012e38  726b2074	
 9699  00012e3c  72617021	
 9699  00012e40  0a00    	
 9700  00012e42          	.align 2
 9701  00012e44          	LC4_LF6:
 9702  00012e44  476f7420	.ascii "Got a process sleep trap!\n\000"
 9702  00012e48  61207072	
 9702  00012e4c  6f636573	
 9702  00012e50  7320736c	
 9702  00012e54  65657020	
 9702  00012e58  74726170	
 9702  00012e5c  210a00  	
 9703  00012e5f          	.align 2
 9704  00012e60          	LC5_LF6:
 9705  00012e60  476f7420	.ascii "Got a printf trap!\n\000"
 9705  00012e64  61207072	
 9705  00012e68  696e7466	
 9705  00012e6c  20747261	
 9705  00012e70  70210a00	
 9706  00012e74          	.align 2
 9707  00012e74          	LC6_LF6:
 9708  00012e74  476f7420	.ascii "Got an open with parameters (\'%s\',0x%x)\n\000"
 9708  00012e78  616e206f	
 9708  00012e7c  70656e20	
 9708  00012e80  77697468	
 9708  00012e84  20706172	
 9708  00012e88  616d6574	
 9708  00012e8c  65727320	
 9708  00012e90  28272573	
 9708  00012e94  272c3078	
 9708  00012e98  2578290a	
 9708  00012e9c  00      	
 9709  00012e9d          	.align 2
 9710  00012ea0          	LC7_LF6:
 9711  00012ea0  476f7420	.ascii "Got an unrecognized trap (0x%x) - exiting!\n\000"
 9711  00012ea4  616e2075	
 9711  00012ea8  6e726563	
 9711  00012eac  6f676e69	
 9711  00012eb0  7a656420	
 9711  00012eb4  74726170	
 9711  00012eb8  20283078	
 9711  00012ebc  25782920	
 9711  00012ec0  2d206578	
 9711  00012ec4  6974696e	
 9711  00012ec8  67210a00	
 9712  00012ecc          	.align 2
 9713  00012ecc          	LC8_LF6:
 9714  00012ecc  476f7420	.ascii "Got a timer interrupt!\n\000"
 9714  00012ed0  61207469	
 9714  00012ed4  6d657220	
 9714  00012ed8  696e7465	
 9714  00012edc  72727570	
 9714  00012ee0  74210a00	
 9715  00012ee4          	.align 2
 9716  00012ee4          	LC9_LF6:
 9717  00012ee4  476f7420	.ascii "Got a keyboard interrupt (char=0x%x(%c), nleft=%d)!\n\000"
 9717  00012ee8  61206b65	
 9717  00012eec  79626f61	
 9717  00012ef0  72642069	
 9717  00012ef4  6e746572	
 9717  00012ef8  72757074	
 9717  00012efc  20286368	
 9717  00012f00  61723d30	
 9717  00012f04  78257828	
 9717  00012f08  2563292c	
 9717  00012f0c  206e6c65	
 9717  00012f10  66743d25	
 9717  00012f14  6429210a	
 9717  00012f18  00      	
 9718  00012f19          	.align 2
 9719  00012f1c          	LC10_LF6:
 9720  00012f1c  45786974	.ascii "Exiting after illegal access at iar=0x%x, isr=0x%x\n\000"
 9720  00012f20  696e6720	
 9720  00012f24  61667465	
 9720  00012f28  7220696c	
 9720  00012f2c  6c656761	
 9720  00012f30  6c206163	
 9720  00012f34  63657373	
 9720  00012f38  20617420	
 9720  00012f3c  6961723d	
 9720  00012f40  30782578	
 9720  00012f44  2c206973	
 9720  00012f48  723d3078	
 9720  00012f4c  25780a00	
 9721  00012f50          	.align 2
 9722  00012f50          	LC11_LF6:
 9723  00012f50  45786974	.ascii "Exiting after illegal address at iar=0x%x, isr=0x%x\n\000"
 9723  00012f54  696e6720	
 9723  00012f58  61667465	
 9723  00012f5c  7220696c	
 9723  00012f60  6c656761	
 9723  00012f64  6c206164	
 9723  00012f68  64726573	
 9723  00012f6c  73206174	
 9723  00012f70  20696172	
 9723  00012f74  3d307825	
 9723  00012f78  782c2069	
 9723  00012f7c  73723d30	
 9723  00012f80  7825780a	
 9723  00012f84  00      	
 9724  00012f85          	.align 2
 9725  00012f88          	LC12_LF6:
 9726  00012f88  45786974	.ascii "Exiting after illegal instruction at iar=0x%x, isr=0x%x\n\000"
 9726  00012f8c  696e6720	
 9726  00012f90  61667465	
 9726  00012f94  7220696c	
 9726  00012f98  6c656761	
 9726  00012f9c  6c20696e	
 9726  00012fa0  73747275	
 9726  00012fa4  6374696f	
 9726  00012fa8  6e206174	
 9726  00012fac  20696172	
 9726  00012fb0  3d307825	
 9726  00012fb4  782c2069	
 9726  00012fb8  73723d30	
 9726  00012fbc  7825780a	
 9726  00012fc0  00      	
 9727  00012fc1          	.align 2
 9728  00012fc4          	LC13_LF6:
 9729  00012fc4  45786974	.ascii "Exiting after page fault at iar=0x%x, isr=0x%x\n\000"
 9729  00012fc8  696e6720	
 9729  00012fcc  61667465	
 9729  00012fd0  72207061	
 9729  00012fd4  67652066	
 9729  00012fd8  61756c74	
 9729  00012fdc  20617420	
 9729  00012fe0  6961723d	
 9729  00012fe4  30782578	
 9729  00012fe8  2c206973	
 9729  00012fec  723d3078	
 9729  00012ff0  25780a00	
 9730  00012ff4          	.align 2
 9731  00012ff4          	LC14_LF6:
 9732  00012ff4  476f7420	.ascii "Got an unrecognized system interrupt (0x%x) - exiting!\n\000"
 9732  00012ff8  616e2075	
 9732  00012ffc  6e726563	
 9732  00013000  6f676e69	
 9732  00013004  7a656420	
 9732  00013008  73797374	
 9732  0001300c  656d2069	
 9732  00013010  6e746572	
 9732  00013014  72757074	
 9732  00013018  20283078	
 9732  0001301c  25782920	
 9732  00013020  2d206578	
 9732  00013024  6974696e	
 9732  00013028  67210a00	
 9733  0001302c          	.align 2
 9734  0001302c          	LC15_LF6:
 9735  0001302c  41626f75	.ascii "About to return from dointerrupt.\n\000"
 9735  00013030  7420746f	
 9735  00013034  20726574	
 9735  00013038  75726e20	
 9735  0001303c  66726f6d	
 9735  00013040  20646f69	
 9735  00013044  6e746572	
 9735  00013048  72757074	
 9735  0001304c  2e0a00  	
 9736  0001304f          	.text
 9737  00008b6c          	.align 2
 9738  00008b6c          	.proc _dointerrupt
 9739  00008b6c          	.global _dointerrupt
 9740  00008b6c          	_dointerrupt:
 9741                      ;  Function 'dointerrupt'; 48 bytes of locals, 6 regs to save.
 9742  00008b6c  afbefffc	sw	-4(r29),r30; push fp
 9743  00008b70  001df020	add	r30,r0,r29; fp = sp
 9744  00008b74  afbffff8	sw	-8(r29),r31; push ret addr
 9745  00008b78  2fbd0050	subui	r29,r29,#80; alloc local storage
 9746  00008b7c  afa20000	sw	0(r29),r2
 9747  00008b80  afa30004	sw	4(r29),r3
 9748  00008b84  afa40008	sw	8(r29),r4
 9749  00008b88  afa5000c	sw	12(r29),r5
 9750  00008b8c  afa60010	sw	16(r29),r6
 9751  00008b90  afa70014	sw	20(r29),r7
 9752  00008b94  8fc20000	lw	r2,(r30)
 9753  00008b98  8fc50004	lw	r5,4(r30)
 9754  00008b9c  8fc40008	lw	r4,8(r30)
 9755  00008ba0  8fc6000c	lw	r6,12(r30)
 9756  00008ba4  23bdfff8	addi	r29,r29,#-8
 9757  00008ba8  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 9758  00008bac  2463fc26	addui	r3,r3,(_debugstr)&0xffff
 9759  00008bb0  afa30000	sw	(r29),r3
 9760  00008bb4  20070074	addi	r7,r0,#116
 9761  00008bb8  afa70004	sw	4(r29),r7
 9762  00008bbc  0fffaf5c	jal	_dindex
 9763  00008bc0  54000000	nop; not filled.
 9764  00008bc4  23bd0008	addi	r29,r29,#8
 9765  00008bc8  64210000	snei	r1,r1,#0
 9766  00008bcc  1420002c	bnez	r1,L84_LF6
 9767  00008bd0  54000000	nop; not filled.
 9768  00008bd4  23bdfff8	addi	r29,r29,#-8
 9769  00008bd8  afa30000	sw	(r29),r3
 9770  00008bdc  2007002b	addi	r7,r0,#43
 9771  00008be0  afa70004	sw	4(r29),r7
 9772  00008be4  0fffaf34	jal	_dindex
 9773  00008be8  54000000	nop; not filled.
 9774  00008bec  23bd0008	addi	r29,r29,#8
 9775  00008bf0  64210000	snei	r1,r1,#0
 9776  00008bf4  10200030	beqz	r1,L83_LF6
 9777  00008bf8  54000000	nop; not filled.
 9778  00008bfc          	L84_LF6:
 9779  00008bfc  23bdffe8	addi	r29,r29,#-24
 9780  00008c00  3c070001	lhi	r7,((LC0_LF6)>>16)&0xffff
 9781  00008c04  24e72dc8	addui	r7,r7,(LC0_LF6)&0xffff
 9782  00008c08  afa70000	sw	(r29),r7
 9783  00008c0c  afa20004	sw	4(r29),r2
 9784  00008c10  afa50008	sw	8(r29),r5
 9785  00008c14  afa4000c	sw	12(r29),r4
 9786  00008c18  afa60010	sw	16(r29),r6
 9787  00008c1c  0c0015d8	jal	_printf
 9788  00008c20  54000000	nop; not filled.
 9789  00008c24  23bd0018	addi	r29,r29,#24
 9790  00008c28          	L83_LF6:
 9791  00008c28  3c070800	lhi	r7,#2048
 9792  00008c2c  24e70000	addui	r7,r7,#0
 9793  00008c30  00470824	and	r1,r2,r7
 9794  00008c34  64210000	snei	r1,r1,#0
 9795  00008c38  10200714	beqz	r1,L85_LF6
 9796  00008c3c  54000000	nop; not filled.
 9797  00008c40  3c07f7ff	lhi	r7,#-2049
 9798  00008c44  24e7ffff	addui	r7,r7,#65535
 9799  00008c48  00471024	and	r2,r2,r7
 9800  00008c4c  60410214	seqi	r1,r2,#532
 9801  00008c50  142004b8	bnez	r1,L107_LF6
 9802  00008c54  54000000	nop; not filled.
 9803  00008c58  6c410214	sgtui	r1,r2,#532
 9804  00008c5c  1420005c	bnez	r1,L127_LF6
 9805  00008c60  54000000	nop; not filled.
 9806  00008c64  60410211	seqi	r1,r2,#529
 9807  00008c68  14200558	bnez	r1,L113_LF6
 9808  00008c6c  54000000	nop; not filled.
 9809  00008c70  6c410211	sgtui	r1,r2,#529
 9810  00008c74  14200024	bnez	r1,L128_LF6
 9811  00008c78  54000000	nop; not filled.
 9812  00008c7c  60410201	seqi	r1,r2,#513
 9813  00008c80  142002d4	bnez	r1,L99_LF6
 9814  00008c84  54000000	nop; not filled.
 9815  00008c88  60410210	seqi	r1,r2,#528
 9816  00008c8c  102006ac	beqz	r1,L125_LF6
 9817  00008c90  54000000	nop; not filled.
 9818  00008c94  080004d0	j	L110_LF6
 9819  00008c98  54000000	nop; not filled.
 9820  00008c9c          	L128_LF6:
 9821  00008c9c  60410212	seqi	r1,r2,#530
 9822  00008ca0  142005d8	bnez	r1,L119_LF6
 9823  00008ca4  54000000	nop; not filled.
 9824  00008ca8  60410213	seqi	r1,r2,#531
 9825  00008cac  1020068c	beqz	r1,L125_LF6
 9826  00008cb0  54000000	nop; not filled.
 9827  00008cb4  08000334	j	L102_LF6
 9828  00008cb8  54000000	nop; not filled.
 9829  00008cbc          	L127_LF6:
 9830  00008cbc  60410410	seqi	r1,r2,#1040
 9831  00008cc0  142001f4	bnez	r1,L96_LF6
 9832  00008cc4  54000000	nop; not filled.
 9833  00008cc8  6c410410	sgtui	r1,r2,#1040
 9834  00008ccc  14200024	bnez	r1,L129_LF6
 9835  00008cd0  54000000	nop; not filled.
 9836  00008cd4  60410300	seqi	r1,r2,#768
 9837  00008cd8  142000c4	bnez	r1,L90_LF6
 9838  00008cdc  54000000	nop; not filled.
 9839  00008ce0  60410400	seqi	r1,r2,#1024
 9840  00008ce4  10200654	beqz	r1,L125_LF6
 9841  00008ce8  54000000	nop; not filled.
 9842  00008cec  08000044	j	L87_LF6
 9843  00008cf0  54000000	nop; not filled.
 9844  00008cf4          	L129_LF6:
 9845  00008cf4  60410431	seqi	r1,r2,#1073
 9846  00008cf8  142005dc	bnez	r1,L122_LF6
 9847  00008cfc  54000000	nop; not filled.
 9848  00008d00  6c410431	sgtui	r1,r2,#1073
 9849  00008d04  14200018	bnez	r1,L130_LF6
 9850  00008d08  54000000	nop; not filled.
 9851  00008d0c  60410430	seqi	r1,r2,#1072
 9852  00008d10  10200628	beqz	r1,L125_LF6
 9853  00008d14  54000000	nop; not filled.
 9854  00008d18  08000124	j	L93_LF6
 9855  00008d1c  54000000	nop; not filled.
 9856  00008d20          	L130_LF6:
 9857  00008d20  60410580	seqi	r1,r2,#1408
 9858  00008d24  10200614	beqz	r1,L125_LF6
 9859  00008d28  54000000	nop; not filled.
 9860  00008d2c  080004f0	j	L116_LF6
 9861  00008d30  54000000	nop; not filled.
 9862  00008d34          	L87_LF6:
 9863  00008d34  23bdfff8	addi	r29,r29,#-8
 9864  00008d38  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9865  00008d3c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 9866  00008d40  afa20000	sw	(r29),r2
 9867  00008d44  20070074	addi	r7,r0,#116
 9868  00008d48  afa70004	sw	4(r29),r7
 9869  00008d4c  0fffadcc	jal	_dindex
 9870  00008d50  54000000	nop; not filled.
 9871  00008d54  23bd0008	addi	r29,r29,#8
 9872  00008d58  64210000	snei	r1,r1,#0
 9873  00008d5c  1420002c	bnez	r1,L89_LF6
 9874  00008d60  54000000	nop; not filled.
 9875  00008d64  23bdfff8	addi	r29,r29,#-8
 9876  00008d68  afa20000	sw	(r29),r2
 9877  00008d6c  2007002b	addi	r7,r0,#43
 9878  00008d70  afa70004	sw	4(r29),r7
 9879  00008d74  0fffada4	jal	_dindex
 9880  00008d78  54000000	nop; not filled.
 9881  00008d7c  23bd0008	addi	r29,r29,#8
 9882  00008d80  64210000	snei	r1,r1,#0
 9883  00008d84  102006b4	beqz	r1,L134_LF6
 9884  00008d88  54000000	nop; not filled.
 9885  00008d8c          	L89_LF6:
 9886  00008d8c  23bdfff8	addi	r29,r29,#-8
 9887  00008d90  3c070001	lhi	r7,((LC1_LF6)>>16)&0xffff
 9888  00008d94  24e72e00	addui	r7,r7,(LC1_LF6)&0xffff
 9889  00008d98  08000690	j	L154_LF6
 9890  00008d9c  54000000	nop; not filled.
 9891  00008da0          	L90_LF6:
 9892  00008da0  23bdfff8	addi	r29,r29,#-8
 9893  00008da4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9894  00008da8  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 9895  00008dac  afa20000	sw	(r29),r2
 9896  00008db0  20070074	addi	r7,r0,#116
 9897  00008db4  afa70004	sw	4(r29),r7
 9898  00008db8  0fffad60	jal	_dindex
 9899  00008dbc  54000000	nop; not filled.
 9900  00008dc0  23bd0008	addi	r29,r29,#8
 9901  00008dc4  64210000	snei	r1,r1,#0
 9902  00008dc8  1420002c	bnez	r1,L92_LF6
 9903  00008dcc  54000000	nop; not filled.
 9904  00008dd0  23bdfff8	addi	r29,r29,#-8
 9905  00008dd4  afa20000	sw	(r29),r2
 9906  00008dd8  2007002b	addi	r7,r0,#43
 9907  00008ddc  afa70004	sw	4(r29),r7
 9908  00008de0  0fffad38	jal	_dindex
 9909  00008de4  54000000	nop; not filled.
 9910  00008de8  23bd0008	addi	r29,r29,#8
 9911  00008dec  64210000	snei	r1,r1,#0
 9912  00008df0  10200020	beqz	r1,L91_LF6
 9913  00008df4  54000000	nop; not filled.
 9914  00008df8          	L92_LF6:
 9915  00008df8  23bdfff8	addi	r29,r29,#-8
 9916  00008dfc  3c070001	lhi	r7,((LC2_LF6)>>16)&0xffff
 9917  00008e00  24e72e1c	addui	r7,r7,(LC2_LF6)&0xffff
 9918  00008e04  afa70000	sw	(r29),r7
 9919  00008e08  0c0013ec	jal	_printf
 9920  00008e0c  54000000	nop; not filled.
 9921  00008e10  23bd0008	addi	r29,r29,#8
 9922  00008e14          	L91_LF6:
 9923  00008e14  23bdfff8	addi	r29,r29,#-8
 9924  00008e18  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 9925  00008e1c  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 9926  00008e20  8c210000	lw	r1,(r1)
 9927  00008e24  afa10000	sw	(r29),r1
 9928  00008e28  0fffc1a4	jal	_ProcessDestroy
 9929  00008e2c  54000000	nop; not filled.
 9930  00008e30  0fffba00	jal	_ProcessSchedule
 9931  00008e34  54000000	nop; not filled.
 9932  00008e38  080006f8	j	L151_LF6
 9933  00008e3c  54000000	nop; not filled.
 9934  00008e40          	L93_LF6:
 9935  00008e40  23bdfff8	addi	r29,r29,#-8
 9936  00008e44  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9937  00008e48  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 9938  00008e4c  afa20000	sw	(r29),r2
 9939  00008e50  20070074	addi	r7,r0,#116
 9940  00008e54  afa70004	sw	4(r29),r7
 9941  00008e58  0fffacc0	jal	_dindex
 9942  00008e5c  54000000	nop; not filled.
 9943  00008e60  23bd0008	addi	r29,r29,#8
 9944  00008e64  64210000	snei	r1,r1,#0
 9945  00008e68  1420002c	bnez	r1,L95_LF6
 9946  00008e6c  54000000	nop; not filled.
 9947  00008e70  23bdfff8	addi	r29,r29,#-8
 9948  00008e74  afa20000	sw	(r29),r2
 9949  00008e78  2007002b	addi	r7,r0,#43
 9950  00008e7c  afa70004	sw	4(r29),r7
 9951  00008e80  0fffac98	jal	_dindex
 9952  00008e84  54000000	nop; not filled.
 9953  00008e88  23bd0008	addi	r29,r29,#8
 9954  00008e8c  64210000	snei	r1,r1,#0
 9955  00008e90  102006a4	beqz	r1,L131_LF6
 9956  00008e94  54000000	nop; not filled.
 9957  00008e98          	L95_LF6:
 9958  00008e98  23bdfff8	addi	r29,r29,#-8
 9959  00008e9c  3c070001	lhi	r7,((LC3_LF6)>>16)&0xffff
 9960  00008ea0  24e72e30	addui	r7,r7,(LC3_LF6)&0xffff
 9961  00008ea4  afa70000	sw	(r29),r7
 9962  00008ea8  0c00134c	jal	_printf
 9963  00008eac  54000000	nop; not filled.
 9964  00008eb0  08000680	j	L151_LF6
 9965  00008eb4  54000000	nop; not filled.
 9966  00008eb8          	L96_LF6:
 9967  00008eb8  23bdfff8	addi	r29,r29,#-8
 9968  00008ebc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9969  00008ec0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 9970  00008ec4  afa20000	sw	(r29),r2
 9971  00008ec8  20070074	addi	r7,r0,#116
 9972  00008ecc  afa70004	sw	4(r29),r7
 9973  00008ed0  0fffac48	jal	_dindex
 9974  00008ed4  54000000	nop; not filled.
 9975  00008ed8  23bd0008	addi	r29,r29,#8
 9976  00008edc  64210000	snei	r1,r1,#0
 9977  00008ee0  1420002c	bnez	r1,L98_LF6
 9978  00008ee4  54000000	nop; not filled.
 9979  00008ee8  23bdfff8	addi	r29,r29,#-8
 9980  00008eec  afa20000	sw	(r29),r2
 9981  00008ef0  2007002b	addi	r7,r0,#43
 9982  00008ef4  afa70004	sw	4(r29),r7
 9983  00008ef8  0fffac20	jal	_dindex
 9984  00008efc  54000000	nop; not filled.
 9985  00008f00  23bd0008	addi	r29,r29,#8
 9986  00008f04  64210000	snei	r1,r1,#0
 9987  00008f08  10200020	beqz	r1,L97_LF6
 9988  00008f0c  54000000	nop; not filled.
 9989  00008f10          	L98_LF6:
 9990  00008f10  23bdfff8	addi	r29,r29,#-8
 9991  00008f14  3c070001	lhi	r7,((LC4_LF6)>>16)&0xffff
 9992  00008f18  24e72e44	addui	r7,r7,(LC4_LF6)&0xffff
 9993  00008f1c  afa70000	sw	(r29),r7
 9994  00008f20  0c0012d4	jal	_printf
 9995  00008f24  54000000	nop; not filled.
 9996  00008f28  23bd0008	addi	r29,r29,#8
 9997  00008f2c          	L97_LF6:
 9998  00008f2c  23bdfff8	addi	r29,r29,#-8
 9999  00008f30  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10000  00008f34  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10001  00008f38  8c210000	lw	r1,(r1)
10002  00008f3c  afa10000	sw	(r29),r1
10003  00008f40  0fffbd64	jal	_ProcessSuspend
10004  00008f44  54000000	nop; not filled.
10005  00008f48  0fffb8e8	jal	_ProcessSchedule
10006  00008f4c  54000000	nop; not filled.
10007  00008f50  080005e0	j	L151_LF6
10008  00008f54  54000000	nop; not filled.
10009  00008f58          	L99_LF6:
10010  00008f58  23bdfff8	addi	r29,r29,#-8
10011  00008f5c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10012  00008f60  2442fc26	addui	r2,r2,(_debugstr)&0xffff
10013  00008f64  afa20000	sw	(r29),r2
10014  00008f68  20070074	addi	r7,r0,#116
10015  00008f6c  afa70004	sw	4(r29),r7
10016  00008f70  0fffaba8	jal	_dindex
10017  00008f74  54000000	nop; not filled.
10018  00008f78  23bd0008	addi	r29,r29,#8
10019  00008f7c  64210000	snei	r1,r1,#0
10020  00008f80  1420002c	bnez	r1,L101_LF6
10021  00008f84  54000000	nop; not filled.
10022  00008f88  23bdfff8	addi	r29,r29,#-8
10023  00008f8c  afa20000	sw	(r29),r2
10024  00008f90  2007002b	addi	r7,r0,#43
10025  00008f94  afa70004	sw	4(r29),r7
10026  00008f98  0fffab80	jal	_dindex
10027  00008f9c  54000000	nop; not filled.
10028  00008fa0  23bd0008	addi	r29,r29,#8
10029  00008fa4  64210000	snei	r1,r1,#0
10030  00008fa8  10200020	beqz	r1,L100_LF6
10031  00008fac  54000000	nop; not filled.
10032  00008fb0          	L101_LF6:
10033  00008fb0  23bdfff8	addi	r29,r29,#-8
10034  00008fb4  3c070001	lhi	r7,((LC5_LF6)>>16)&0xffff
10035  00008fb8  24e72e60	addui	r7,r7,(LC5_LF6)&0xffff
10036  00008fbc  afa70000	sw	(r29),r7
10037  00008fc0  0c001234	jal	_printf
10038  00008fc4  54000000	nop; not filled.
10039  00008fc8  23bd0008	addi	r29,r29,#8
10040  00008fcc          	L100_LF6:
10041  00008fcc  23bdfff8	addi	r29,r29,#-8
10042  00008fd0  afa60000	sw	(r29),r6
10043  00008fd4  30810040	andi	r1,r4,#64
10044  00008fd8  afa10004	sw	4(r29),r1
10045  00008fdc  0ffff8b8	jal	_TrapPrintfHandler_LF6
10046  00008fe0  54000000	nop; not filled.
10047  00008fe4  0800054c	j	L151_LF6
10048  00008fe8  54000000	nop; not filled.
10049  00008fec          	L102_LF6:
10050  00008fec  30810040	andi	r1,r4,#64
10051  00008ff0  64210000	snei	r1,r1,#0
10052  00008ff4  1020001c	beqz	r1,L103_LF6
10053  00008ff8  54000000	nop; not filled.
10054  00008ffc  8cc70000	lw	r7,(r6)
10055  00009000  afc7ffe8	sw	-24(r30),r7
10056  00009004  8cc60004	lw	r6,4(r6)
10057  00009008  afc6ffec	sw	-20(r30),r6
10058  0000900c  0800006c	j	L104_LF6
10059  00009010  54000000	nop; not filled.
10060  00009014          	L103_LF6:
10061  00009014  23bdfff0	addi	r29,r29,#-16
10062  00009018  3c020000	lhi	r2,((_currentPCB)>>16)&0xffff
10063  0000901c  2442fcf0	addui	r2,r2,(_currentPCB)&0xffff
10064  00009020  8c470000	lw	r7,(r2)
10065  00009024  afa70000	sw	(r29),r7
10066  00009028  afa60004	sw	4(r29),r6
10067  0000902c  23c1ffe8	addi	r1,r30,#-24
10068  00009030  afa10008	sw	8(r29),r1
10069  00009034  20070008	addi	r7,r0,#8
10070  00009038  afa7000c	sw	12(r29),r7
10071  0000903c  0fffa22c	jal	_MemoryCopyUserToSystem
10072  00009040  54000000	nop; not filled.
10073  00009044  8c420000	lw	r2,(r2)
10074  00009048  afa20000	sw	(r29),r2
10075  0000904c  8fc1ffe8	lw	r1,-24(r30)
10076  00009050  afa10004	sw	4(r29),r1
10077  00009054  23c2ffc8	addi	r2,r30,#-56
10078  00009058  afa20008	sw	8(r29),r2
10079  0000905c  2007001f	addi	r7,r0,#31
10080  00009060  afa7000c	sw	12(r29),r7
10081  00009064  0fffa204	jal	_MemoryCopyUserToSystem
10082  00009068  54000000	nop; not filled.
10083  0000906c  20070000	addi	r7,r0,(#0x0)&0xff
10084  00009070  a3c7ffe7	sb	-25(r30),r7
10085  00009074  afc2ffe8	sw	-24(r30),r2
10086  00009078  23bd0010	addi	r29,r29,#16
10087  0000907c          	L104_LF6:
10088  0000907c  23bdfff8	addi	r29,r29,#-8
10089  00009080  20070000	addi	r7,r0,#0
10090  00009084  afa70000	sw	(r29),r7
10091  00009088  0c001018	jal	_SetIntrs
10092  0000908c  54000000	nop; not filled.
10093  00009090  00011820	add	r3,r0,r1
10094  00009094  23bd0008	addi	r29,r29,#8
10095  00009098  23bdfff8	addi	r29,r29,#-8
10096  0000909c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10097  000090a0  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10098  000090a4  8c210000	lw	r1,(r1)
10099  000090a8  afa10000	sw	(r29),r1
10100  000090ac  8fc1ffec	lw	r1,-20(r30)
10101  000090b0  3c070001	lhi	r7,#1
10102  000090b4  24e70000	addui	r7,r7,#0
10103  000090b8  00270820	add	r1,r1,r7
10104  000090bc  afa10004	sw	4(r29),r1
10105  000090c0  0fffb73c	jal	_ProcessSetResult
10106  000090c4  54000000	nop; not filled.
10107  000090c8  23bdfff8	addi	r29,r29,#-8
10108  000090cc  3c070001	lhi	r7,((LC6_LF6)>>16)&0xffff
10109  000090d0  24e72e74	addui	r7,r7,(LC6_LF6)&0xffff
10110  000090d4  afa70000	sw	(r29),r7
10111  000090d8  8fc1ffe8	lw	r1,-24(r30)
10112  000090dc  afa10004	sw	4(r29),r1
10113  000090e0  8fc7ffec	lw	r7,-20(r30)
10114  000090e4  afa70008	sw	8(r29),r7
10115  000090e8  0c00110c	jal	_printf
10116  000090ec  54000000	nop; not filled.
10117  000090f0  23bd0010	addi	r29,r29,#16
10118  000090f4  23bdfff8	addi	r29,r29,#-8
10119  000090f8  afa30000	sw	(r29),r3
10120  000090fc  0c000fa4	jal	_SetIntrs
10121  00009100  54000000	nop; not filled.
10122  00009104  0800042c	j	L151_LF6
10123  00009108  54000000	nop; not filled.
10124  0000910c          	L107_LF6:
10125  0000910c  23bdfff8	addi	r29,r29,#-8
10126  00009110  20070000	addi	r7,r0,#0
10127  00009114  afa70000	sw	(r29),r7
10128  00009118  0c000f88	jal	_SetIntrs
10129  0000911c  54000000	nop; not filled.
10130  00009120  00011820	add	r3,r0,r1
10131  00009124  23bd0008	addi	r29,r29,#8
10132  00009128  23bdfff8	addi	r29,r29,#-8
10133  0000912c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10134  00009130  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10135  00009134  8c210000	lw	r1,(r1)
10136  00009138  afa10000	sw	(r29),r1
10137  0000913c  2007ffff	addi	r7,r0,#-1
10138  00009140  afa70004	sw	4(r29),r7
10139  00009144  0fffb6b8	jal	_ProcessSetResult
10140  00009148  54000000	nop; not filled.
10141  0000914c  23bd0008	addi	r29,r29,#8
10142  00009150  23bdfff8	addi	r29,r29,#-8
10143  00009154  afa30000	sw	(r29),r3
10144  00009158  0c000f48	jal	_SetIntrs
10145  0000915c  54000000	nop; not filled.
10146  00009160  080003d0	j	L151_LF6
10147  00009164  54000000	nop; not filled.
10148  00009168          	L110_LF6:
10149  00009168  23bdfff8	addi	r29,r29,#-8
10150  0000916c  20070000	addi	r7,r0,#0
10151  00009170  afa70000	sw	(r29),r7
10152  00009174  0c000f2c	jal	_SetIntrs
10153  00009178  54000000	nop; not filled.
10154  0000917c  00011820	add	r3,r0,r1
10155  00009180  23bd0008	addi	r29,r29,#8
10156  00009184  23bdfff8	addi	r29,r29,#-8
10157  00009188  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10158  0000918c  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10159  00009190  8c210000	lw	r1,(r1)
10160  00009194  afa10000	sw	(r29),r1
10161  00009198  2007ffff	addi	r7,r0,#-1
10162  0000919c  afa70004	sw	4(r29),r7
10163  000091a0  0fffb65c	jal	_ProcessSetResult
10164  000091a4  54000000	nop; not filled.
10165  000091a8  23bd0008	addi	r29,r29,#8
10166  000091ac  23bdfff8	addi	r29,r29,#-8
10167  000091b0  afa30000	sw	(r29),r3
10168  000091b4  0c000eec	jal	_SetIntrs
10169  000091b8  54000000	nop; not filled.
10170  000091bc  08000374	j	L151_LF6
10171  000091c0  54000000	nop; not filled.
10172  000091c4          	L113_LF6:
10173  000091c4  23bdfff8	addi	r29,r29,#-8
10174  000091c8  20070000	addi	r7,r0,#0
10175  000091cc  afa70000	sw	(r29),r7
10176  000091d0  0c000ed0	jal	_SetIntrs
10177  000091d4  54000000	nop; not filled.
10178  000091d8  00011820	add	r3,r0,r1
10179  000091dc  23bd0008	addi	r29,r29,#8
10180  000091e0  23bdfff8	addi	r29,r29,#-8
10181  000091e4  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10182  000091e8  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10183  000091ec  8c210000	lw	r1,(r1)
10184  000091f0  afa10000	sw	(r29),r1
10185  000091f4  2007ffff	addi	r7,r0,#-1
10186  000091f8  afa70004	sw	4(r29),r7
10187  000091fc  0fffb600	jal	_ProcessSetResult
10188  00009200  54000000	nop; not filled.
10189  00009204  23bd0008	addi	r29,r29,#8
10190  00009208  23bdfff8	addi	r29,r29,#-8
10191  0000920c  afa30000	sw	(r29),r3
10192  00009210  0c000e90	jal	_SetIntrs
10193  00009214  54000000	nop; not filled.
10194  00009218  08000318	j	L151_LF6
10195  0000921c  54000000	nop; not filled.
10196  00009220          	L116_LF6:
10197  00009220  23bdfff8	addi	r29,r29,#-8
10198  00009224  20070000	addi	r7,r0,#0
10199  00009228  afa70000	sw	(r29),r7
10200  0000922c  0c000e74	jal	_SetIntrs
10201  00009230  54000000	nop; not filled.
10202  00009234  00011820	add	r3,r0,r1
10203  00009238  23bd0008	addi	r29,r29,#8
10204  0000923c  23bdfff8	addi	r29,r29,#-8
10205  00009240  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10206  00009244  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10207  00009248  8c210000	lw	r1,(r1)
10208  0000924c  afa10000	sw	(r29),r1
10209  00009250  2007ffff	addi	r7,r0,#-1
10210  00009254  afa70004	sw	4(r29),r7
10211  00009258  0fffb5a4	jal	_ProcessSetResult
10212  0000925c  54000000	nop; not filled.
10213  00009260  23bd0008	addi	r29,r29,#8
10214  00009264  23bdfff8	addi	r29,r29,#-8
10215  00009268  afa30000	sw	(r29),r3
10216  0000926c  0c000e34	jal	_SetIntrs
10217  00009270  54000000	nop; not filled.
10218  00009274  080002bc	j	L151_LF6
10219  00009278  54000000	nop; not filled.
10220  0000927c          	L119_LF6:
10221  0000927c  23bdfff8	addi	r29,r29,#-8
10222  00009280  20070000	addi	r7,r0,#0
10223  00009284  afa70000	sw	(r29),r7
10224  00009288  0c000e18	jal	_SetIntrs
10225  0000928c  54000000	nop; not filled.
10226  00009290  00011820	add	r3,r0,r1
10227  00009294  23bd0008	addi	r29,r29,#8
10228  00009298  23bdfff8	addi	r29,r29,#-8
10229  0000929c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10230  000092a0  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10231  000092a4  8c210000	lw	r1,(r1)
10232  000092a8  afa10000	sw	(r29),r1
10233  000092ac  2007ffff	addi	r7,r0,#-1
10234  000092b0  afa70004	sw	4(r29),r7
10235  000092b4  0fffb548	jal	_ProcessSetResult
10236  000092b8  54000000	nop; not filled.
10237  000092bc  23bd0008	addi	r29,r29,#8
10238  000092c0  23bdfff8	addi	r29,r29,#-8
10239  000092c4  afa30000	sw	(r29),r3
10240  000092c8  0c000dd8	jal	_SetIntrs
10241  000092cc  54000000	nop; not filled.
10242  000092d0  08000260	j	L151_LF6
10243  000092d4  54000000	nop; not filled.
10244  000092d8          	L122_LF6:
10245  000092d8  23bdfff8	addi	r29,r29,#-8
10246  000092dc  20070000	addi	r7,r0,#0
10247  000092e0  afa70000	sw	(r29),r7
10248  000092e4  0c000dbc	jal	_SetIntrs
10249  000092e8  54000000	nop; not filled.
10250  000092ec  00011820	add	r3,r0,r1
10251  000092f0  23bd0008	addi	r29,r29,#8
10252  000092f4  0fffde14	jal	_GetCurrentPid
10253  000092f8  54000000	nop; not filled.
10254  000092fc  00011020	add	r2,r0,r1
10255  00009300  23bdfff8	addi	r29,r29,#-8
10256  00009304  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10257  00009308  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10258  0000930c  8c210000	lw	r1,(r1)
10259  00009310  afa10000	sw	(r29),r1
10260  00009314  afa20004	sw	4(r29),r2
10261  00009318  0fffb4e4	jal	_ProcessSetResult
10262  0000931c  54000000	nop; not filled.
10263  00009320  23bd0008	addi	r29,r29,#8
10264  00009324  23bdfff8	addi	r29,r29,#-8
10265  00009328  afa30000	sw	(r29),r3
10266  0000932c  0c000d74	jal	_SetIntrs
10267  00009330  54000000	nop; not filled.
10268  00009334  080001fc	j	L151_LF6
10269  00009338  54000000	nop; not filled.
10270  0000933c          	L125_LF6:
10271  0000933c  23bdfff8	addi	r29,r29,#-8
10272  00009340  3c070001	lhi	r7,((LC7_LF6)>>16)&0xffff
10273  00009344  24e72ea0	addui	r7,r7,(LC7_LF6)&0xffff
10274  00009348  080001d0	j	L152_LF6
10275  0000934c  54000000	nop; not filled.
10276  00009350          	L85_LF6:
10277  00009350  60410003	seqi	r1,r2,#3
10278  00009354  14200148	bnez	r1,L141_LF6
10279  00009358  54000000	nop; not filled.
10280  0000935c  6c410003	sgtui	r1,r2,#3
10281  00009360  14200024	bnez	r1,L147_LF6
10282  00009364  54000000	nop; not filled.
10283  00009368  60410001	seqi	r1,r2,#1
10284  0000936c  14200158	bnez	r1,L143_LF6
10285  00009370  54000000	nop; not filled.
10286  00009374  60410002	seqi	r1,r2,#2
10287  00009378  10200194	beqz	r1,L145_LF6
10288  0000937c  54000000	nop; not filled.
10289  00009380  08000130	j	L142_LF6
10290  00009384  54000000	nop; not filled.
10291  00009388          	L147_LF6:
10292  00009388  60410040	seqi	r1,r2,#64
10293  0000938c  14200038	bnez	r1,L133_LF6
10294  00009390  54000000	nop; not filled.
10295  00009394  6c410040	sgtui	r1,r2,#64
10296  00009398  14200018	bnez	r1,L148_LF6
10297  0000939c  54000000	nop; not filled.
10298  000093a0  60410020	seqi	r1,r2,#32
10299  000093a4  10200168	beqz	r1,L145_LF6
10300  000093a8  54000000	nop; not filled.
10301  000093ac  0800012c	j	L144_LF6
10302  000093b0  54000000	nop; not filled.
10303  000093b4          	L148_LF6:
10304  000093b4  60410048	seqi	r1,r2,#72
10305  000093b8  10200154	beqz	r1,L145_LF6
10306  000093bc  54000000	nop; not filled.
10307  000093c0  08000088	j	L136_LF6
10308  000093c4  54000000	nop; not filled.
10309  000093c8          	L133_LF6:
10310  000093c8  23bdfff8	addi	r29,r29,#-8
10311  000093cc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10312  000093d0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
10313  000093d4  afa20000	sw	(r29),r2
10314  000093d8  20070074	addi	r7,r0,#116
10315  000093dc  afa70004	sw	4(r29),r7
10316  000093e0  0fffa738	jal	_dindex
10317  000093e4  54000000	nop; not filled.
10318  000093e8  23bd0008	addi	r29,r29,#8
10319  000093ec  64210000	snei	r1,r1,#0
10320  000093f0  1420002c	bnez	r1,L135_LF6
10321  000093f4  54000000	nop; not filled.
10322  000093f8  23bdfff8	addi	r29,r29,#-8
10323  000093fc  afa20000	sw	(r29),r2
10324  00009400  2007002b	addi	r7,r0,#43
10325  00009404  afa70004	sw	4(r29),r7
10326  00009408  0fffa710	jal	_dindex
10327  0000940c  54000000	nop; not filled.
10328  00009410  23bd0008	addi	r29,r29,#8
10329  00009414  64210000	snei	r1,r1,#0
10330  00009418  10200020	beqz	r1,L134_LF6
10331  0000941c  54000000	nop; not filled.
10332  00009420          	L135_LF6:
10333  00009420  23bdfff8	addi	r29,r29,#-8
10334  00009424  3c070001	lhi	r7,((LC8_LF6)>>16)&0xffff
10335  00009428  24e72ecc	addui	r7,r7,(LC8_LF6)&0xffff
10336  0000942c          	L154_LF6:
10337  0000942c  afa70000	sw	(r29),r7
10338  00009430  0c000dc4	jal	_printf
10339  00009434  54000000	nop; not filled.
10340  00009438  23bd0008	addi	r29,r29,#8
10341  0000943c          	L134_LF6:
10342  0000943c  0fffb3f4	jal	_ProcessSchedule
10343  00009440  54000000	nop; not filled.
10344  00009444  080000f0	j	L131_LF6
10345  00009448  54000000	nop; not filled.
10346  0000944c          	L136_LF6:
10347  0000944c  3c04fff0	lhi	r4,#-16
10348  00009450  248401a0	addui	r4,r4,#416
10349  00009454  3c03fff0	lhi	r3,#-16
10350  00009458  24630180	addui	r3,r3,#384
10351  0000945c          	L137_LF6:
10352  0000945c  8c820000	lw	r2,(r4)
10353  00009460  8c610000	lw	r1,(r3)
10354  00009464  23bdfff0	addi	r29,r29,#-16
10355  00009468  3c070001	lhi	r7,((LC9_LF6)>>16)&0xffff
10356  0000946c  24e72ee4	addui	r7,r7,(LC9_LF6)&0xffff
10357  00009470  afa70000	sw	(r29),r7
10358  00009474  afa10004	sw	4(r29),r1
10359  00009478  afa10008	sw	8(r29),r1
10360  0000947c  afa2000c	sw	12(r29),r2
10361  00009480  0c000d74	jal	_printf
10362  00009484  54000000	nop; not filled.
10363  00009488  23bd0010	addi	r29,r29,#16
10364  0000948c  6c410001	sgti	r1,r2,#1
10365  00009490  102000a4	beqz	r1,L131_LF6
10366  00009494  54000000	nop; not filled.
10367  00009498  0bffffc0	j	L137_LF6
10368  0000949c  54000000	nop; not filled.
10369  000094a0          	L141_LF6:
10370  000094a0  23bdfff0	addi	r29,r29,#-16
10371  000094a4  3c070001	lhi	r7,((LC10_LF6)>>16)&0xffff
10372  000094a8  24e72f1c	addui	r7,r7,(LC10_LF6)&0xffff
10373  000094ac  08000038	j	L153_LF6
10374  000094b0  54000000	nop; not filled.
10375  000094b4          	L142_LF6:
10376  000094b4  23bdfff0	addi	r29,r29,#-16
10377  000094b8  3c070001	lhi	r7,((LC11_LF6)>>16)&0xffff
10378  000094bc  24e72f50	addui	r7,r7,(LC11_LF6)&0xffff
10379  000094c0  08000024	j	L153_LF6
10380  000094c4  54000000	nop; not filled.
10381  000094c8          	L143_LF6:
10382  000094c8  23bdfff0	addi	r29,r29,#-16
10383  000094cc  3c070001	lhi	r7,((LC12_LF6)>>16)&0xffff
10384  000094d0  24e72f88	addui	r7,r7,(LC12_LF6)&0xffff
10385  000094d4  08000010	j	L153_LF6
10386  000094d8  54000000	nop; not filled.
10387  000094dc          	L144_LF6:
10388  000094dc  23bdfff0	addi	r29,r29,#-16
10389  000094e0  3c070001	lhi	r7,((LC13_LF6)>>16)&0xffff
10390  000094e4  24e72fc4	addui	r7,r7,(LC13_LF6)&0xffff
10391  000094e8          	L153_LF6:
10392  000094e8  afa70000	sw	(r29),r7
10393  000094ec  afa50004	sw	4(r29),r5
10394  000094f0  afa40008	sw	8(r29),r4
10395  000094f4  0c000d00	jal	_printf
10396  000094f8  54000000	nop; not filled.
10397  000094fc  0c000ce0	jal	_exitsim
10398  00009500  54000000	nop; not filled.
10399  00009504  23bd0010	addi	r29,r29,#16
10400  00009508  0800002c	j	L131_LF6
10401  0000950c  54000000	nop; not filled.
10402  00009510          	L145_LF6:
10403  00009510  23bdfff8	addi	r29,r29,#-8
10404  00009514  3c070001	lhi	r7,((LC14_LF6)>>16)&0xffff
10405  00009518  24e72ff4	addui	r7,r7,(LC14_LF6)&0xffff
10406  0000951c          	L152_LF6:
10407  0000951c  afa70000	sw	(r29),r7
10408  00009520  afa20004	sw	4(r29),r2
10409  00009524  0c000cd0	jal	_printf
10410  00009528  54000000	nop; not filled.
10411  0000952c  0c000cb0	jal	_exitsim
10412  00009530  54000000	nop; not filled.
10413  00009534          	L151_LF6:
10414  00009534  23bd0008	addi	r29,r29,#8
10415  00009538          	L131_LF6:
10416  00009538  23bdfff8	addi	r29,r29,#-8
10417  0000953c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10418  00009540  2442fc26	addui	r2,r2,(_debugstr)&0xffff
10419  00009544  afa20000	sw	(r29),r2
10420  00009548  20070074	addi	r7,r0,#116
10421  0000954c  afa70004	sw	4(r29),r7
10422  00009550  0fffa5c8	jal	_dindex
10423  00009554  54000000	nop; not filled.
10424  00009558  23bd0008	addi	r29,r29,#8
10425  0000955c  64210000	snei	r1,r1,#0
10426  00009560  1420002c	bnez	r1,L150_LF6
10427  00009564  54000000	nop; not filled.
10428  00009568  23bdfff8	addi	r29,r29,#-8
10429  0000956c  afa20000	sw	(r29),r2
10430  00009570  2007002b	addi	r7,r0,#43
10431  00009574  afa70004	sw	4(r29),r7
10432  00009578  0fffa5a0	jal	_dindex
10433  0000957c  54000000	nop; not filled.
10434  00009580  23bd0008	addi	r29,r29,#8
10435  00009584  64210000	snei	r1,r1,#0
10436  00009588  10200020	beqz	r1,L149_LF6
10437  0000958c  54000000	nop; not filled.
10438  00009590          	L150_LF6:
10439  00009590  23bdfff8	addi	r29,r29,#-8
10440  00009594  3c070001	lhi	r7,((LC15_LF6)>>16)&0xffff
10441  00009598  24e7302c	addui	r7,r7,(LC15_LF6)&0xffff
10442  0000959c  afa70000	sw	(r29),r7
10443  000095a0  0c000c54	jal	_printf
10444  000095a4  54000000	nop; not filled.
10445  000095a8  23bd0008	addi	r29,r29,#8
10446  000095ac          	L149_LF6:
10447  000095ac  0c0009d4	jal	_intrreturn
10448  000095b0  54000000	nop; not filled.
10449  000095b4  8fa20000	lw	r2,0(r29)
10450  000095b8  8fa30004	lw	r3,4(r29)
10451  000095bc  8fa40008	lw	r4,8(r29)
10452  000095c0  8fa5000c	lw	r5,12(r29)
10453  000095c4  8fa60010	lw	r6,16(r29)
10454  000095c8  8fa70014	lw	r7,20(r29)
10455  000095cc  8fdffff8	lw	r31,-8(r30)
10456  000095d0  001ee820	add	r29,r0,r30
10457  000095d4  8fdefffc	lw	r30,-4(r30)
10458  000095d8  4be00000	jr	r31
10459  000095dc  54000000	nop
10460  000095e0          	.endproc _dointerrupt
10461                      ; Compiled by GCC
10463  000095e0          	.align 2
10464  000095e0          	.proc _isspace
10465  000095e0          	.global _isspace
10466  000095e0          	_isspace:
10467                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
10468  000095e0  afbefffc	sw	-4(r29),r30; push fp
10469  000095e4  001df020	add	r30,r0,r29; fp = sp
10470  000095e8  afbffff8	sw	-8(r29),r31; push ret addr
10471  000095ec  2fbd0010	subui	r29,r29,#16; alloc local storage
10472  000095f0  afa20000	sw	0(r29),r2
10473  000095f4  83c20003	lb	r2,3(r30)
10474  000095f8  201f0000	addi	r31,r0,#0
10475  000095fc  304100ff	andi	r1,r2,#0x00ff
10476  00009600  60210020	seqi	r1,r1,#32
10477  00009604  14200018	bnez	r1,L6_LF7
10478  00009608  54000000	nop; not filled.
10479  0000960c  2041fff7	addi	r1,r2,#-9
10480  00009610  302100ff	andi	r1,r1,#0x00ff
10481  00009614  70210001	sleui	r1,r1,#1
10482  00009618  10200008	beqz	r1,L5_LF7
10483  0000961c  54000000	nop; not filled.
10484  00009620          	L6_LF7:
10485  00009620  201f0001	addi	r31,r0,#1
10486  00009624          	L5_LF7:
10487  00009624  001f0820	add	r1,r0,r31
10488  00009628  8fa20000	lw	r2,0(r29)
10489  0000962c  8fdffff8	lw	r31,-8(r30)
10490  00009630  001ee820	add	r29,r0,r30
10491  00009634  8fdefffc	lw	r30,-4(r30)
10492  00009638  4be00000	jr	r31
10493  0000963c  54000000	nop
10494  00009640          	.endproc _isspace
10495  00009640          	.align 2
10496  00009640          	.proc _isxdigit
10497  00009640          	.global _isxdigit
10498  00009640          	_isxdigit:
10499                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
10500  00009640  afbefffc	sw	-4(r29),r30; push fp
10501  00009644  001df020	add	r30,r0,r29; fp = sp
10502  00009648  afbffff8	sw	-8(r29),r31; push ret addr
10503  0000964c  2fbd0010	subui	r29,r29,#16; alloc local storage
10504  00009650  afa20000	sw	0(r29),r2
10505  00009654  83df0003	lb	r31,3(r30)
10506  00009658  20020000	addi	r2,r0,#0
10507  0000965c  23e1ffd0	addi	r1,r31,#-48
10508  00009660  302100ff	andi	r1,r1,#0x00ff
10509  00009664  70210009	sleui	r1,r1,#9
10510  00009668  14200028	bnez	r1,L12_LF7
10511  0000966c  54000000	nop; not filled.
10512  00009670  23e1ff9f	addi	r1,r31,#-97
10513  00009674  302100ff	andi	r1,r1,#0x00ff
10514  00009678  70210005	sleui	r1,r1,#5
10515  0000967c  14200014	bnez	r1,L12_LF7
10516  00009680  54000000	nop; not filled.
10517  00009684  33e100ff	andi	r1,r31,#0x00ff
10518  00009688  64210041	snei	r1,r1,#65
10519  0000968c  14200008	bnez	r1,L11_LF7
10520  00009690  54000000	nop; not filled.
10521  00009694          	L12_LF7:
10522  00009694  20020001	addi	r2,r0,#1
10523  00009698          	L11_LF7:
10524  00009698  00020820	add	r1,r0,r2
10525  0000969c  8fa20000	lw	r2,0(r29)
10526  000096a0  8fdffff8	lw	r31,-8(r30)
10527  000096a4  001ee820	add	r29,r0,r30
10528  000096a8  8fdefffc	lw	r30,-4(r30)
10529  000096ac  4be00000	jr	r31
10530  000096b0  54000000	nop
10531  000096b4          	.endproc _isxdigit
10532  000096b4          	.align 2
10533  000096b4          	.proc _DisableIntrs
10534  000096b4          	.global _DisableIntrs
10535  000096b4          	_DisableIntrs:
10536                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
10537  000096b4  afbefffc	sw	-4(r29),r30; push fp
10538  000096b8  001df020	add	r30,r0,r29; fp = sp
10539  000096bc  afbffff8	sw	-8(r29),r31; push ret addr
10540  000096c0  2fbd0010	subui	r29,r29,#16; alloc local storage
10541  000096c4  afa20000	sw	0(r29),r2
10542  000096c8  23bdfff8	addi	r29,r29,#-8
10543  000096cc  2002000f	addi	r2,r0,#15
10544  000096d0  afa20000	sw	(r29),r2
10545  000096d4  0c0009cc	jal	_SetIntrs
10546  000096d8  54000000	nop; not filled.
10547  000096dc  23bd0008	addi	r29,r29,#8
10548  000096e0  8fa20000	lw	r2,0(r29)
10549  000096e4  8fdffff8	lw	r31,-8(r30)
10550  000096e8  001ee820	add	r29,r0,r30
10551  000096ec  8fdefffc	lw	r30,-4(r30)
10552  000096f0  4be00000	jr	r31
10553  000096f4  54000000	nop
10554  000096f8          	.endproc _DisableIntrs
10555  000096f8          	.align 2
10556  000096f8          	.proc _EnableIntrs
10557  000096f8          	.global _EnableIntrs
10558  000096f8          	_EnableIntrs:
10559                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
10560  000096f8  afbefffc	sw	-4(r29),r30; push fp
10561  000096fc  001df020	add	r30,r0,r29; fp = sp
10562  00009700  afbffff8	sw	-8(r29),r31; push ret addr
10563  00009704  2fbd0010	subui	r29,r29,#16; alloc local storage
10564  00009708  afa20000	sw	0(r29),r2
10565  0000970c  23bdfff8	addi	r29,r29,#-8
10566  00009710  20020000	addi	r2,r0,#0
10567  00009714  afa20000	sw	(r29),r2
10568  00009718  0c000988	jal	_SetIntrs
10569  0000971c  54000000	nop; not filled.
10570  00009720  23bd0008	addi	r29,r29,#8
10571  00009724  8fa20000	lw	r2,0(r29)
10572  00009728  8fdffff8	lw	r31,-8(r30)
10573  0000972c  001ee820	add	r29,r0,r30
10574  00009730  8fdefffc	lw	r30,-4(r30)
10575  00009734  4be00000	jr	r31
10576  00009738  54000000	nop
10577  0000973c          	.endproc _EnableIntrs
10578  0000973c          	.align 2
10579  0000973c          	.proc _RestoreIntrs
10580  0000973c          	.global _RestoreIntrs
10581  0000973c          	_RestoreIntrs:
10582                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
10583  0000973c  afbefffc	sw	-4(r29),r30; push fp
10584  00009740  001df020	add	r30,r0,r29; fp = sp
10585  00009744  afbffff8	sw	-8(r29),r31; push ret addr
10586  00009748  2fbd0010	subui	r29,r29,#16; alloc local storage
10587  0000974c  afa20000	sw	0(r29),r2
10588  00009750  23bdfff8	addi	r29,r29,#-8
10589  00009754  8fc20000	lw	r2,(r30)
10590  00009758  afa20000	sw	(r29),r2
10591  0000975c  0c000944	jal	_SetIntrs
10592  00009760  54000000	nop; not filled.
10593  00009764  23bd0008	addi	r29,r29,#8
10594  00009768  8fa20000	lw	r2,0(r29)
10595  0000976c  8fdffff8	lw	r31,-8(r30)
10596  00009770  001ee820	add	r29,r0,r30
10597  00009774  8fdefffc	lw	r30,-4(r30)
10598  00009778  4be00000	jr	r31
10599  0000977c  54000000	nop
10600  00009780          	.endproc _RestoreIntrs
10601  00009780          	.align 2
10602  00009780          	.proc _QueueLinkInit
10603  00009780          	.global _QueueLinkInit
10604  00009780          	_QueueLinkInit:
10605                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
10606  00009780  afbefffc	sw	-4(r29),r30; push fp
10607  00009784  001df020	add	r30,r0,r29; fp = sp
10608  00009788  afbffff8	sw	-8(r29),r31; push ret addr
10609  0000978c  2fbd0010	subui	r29,r29,#16; alloc local storage
10610  00009790  afa20000	sw	0(r29),r2
10611  00009794  8fc10000	lw	r1,(r30)
10612  00009798  8fc20004	lw	r2,4(r30)
10613  0000979c  201f0000	addi	r31,r0,#0
10614  000097a0  ac3f0000	sw	(r1),r31
10615  000097a4  ac22000c	sw	12(r1),r2
10616  000097a8  8fa20000	lw	r2,0(r29)
10617  000097ac  8fdffff8	lw	r31,-8(r30)
10618  000097b0  001ee820	add	r29,r0,r30
10619  000097b4  8fdefffc	lw	r30,-4(r30)
10620  000097b8  4be00000	jr	r31
10621  000097bc  54000000	nop
10622  000097c0          	.endproc _QueueLinkInit
10623  000097c0          	.align 2
10624  000097c0          	.proc _QueueNext
10625  000097c0          	.global _QueueNext
10626  000097c0          	_QueueNext:
10627                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
10628  000097c0  afbefffc	sw	-4(r29),r30; push fp
10629  000097c4  001df020	add	r30,r0,r29; fp = sp
10630  000097c8  afbffff8	sw	-8(r29),r31; push ret addr
10631  000097cc  2fbd0008	subui	r29,r29,#8; alloc local storage
10632  000097d0  8fc10000	lw	r1,(r30)
10633  000097d4  8c210000	lw	r1,(r1)
10634  000097d8  8fdffff8	lw	r31,-8(r30)
10635  000097dc  001ee820	add	r29,r0,r30
10636  000097e0  8fdefffc	lw	r30,-4(r30)
10637  000097e4  4be00000	jr	r31
10638  000097e8  54000000	nop
10639  000097ec          	.endproc _QueueNext
10640  000097ec          	.align 2
10641  000097ec          	.proc _QueuePrev
10642  000097ec          	.global _QueuePrev
10643  000097ec          	_QueuePrev:
10644                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
10645  000097ec  afbefffc	sw	-4(r29),r30; push fp
10646  000097f0  001df020	add	r30,r0,r29; fp = sp
10647  000097f4  afbffff8	sw	-8(r29),r31; push ret addr
10648  000097f8  2fbd0008	subui	r29,r29,#8; alloc local storage
10649  000097fc  8fc10000	lw	r1,(r30)
10650  00009800  8c210004	lw	r1,4(r1)
10651  00009804  8fdffff8	lw	r31,-8(r30)
10652  00009808  001ee820	add	r29,r0,r30
10653  0000980c  8fdefffc	lw	r30,-4(r30)
10654  00009810  4be00000	jr	r31
10655  00009814  54000000	nop
10656  00009818          	.endproc _QueuePrev
10657  00009818          	.align 2
10658  00009818          	.proc _QueueFirst
10659  00009818          	.global _QueueFirst
10660  00009818          	_QueueFirst:
10661                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
10662  00009818  afbefffc	sw	-4(r29),r30; push fp
10663  0000981c  001df020	add	r30,r0,r29; fp = sp
10664  00009820  afbffff8	sw	-8(r29),r31; push ret addr
10665  00009824  2fbd0008	subui	r29,r29,#8; alloc local storage
10666  00009828  8fc10000	lw	r1,(r30)
10667  0000982c  8c210000	lw	r1,(r1)
10668  00009830  8fdffff8	lw	r31,-8(r30)
10669  00009834  001ee820	add	r29,r0,r30
10670  00009838  8fdefffc	lw	r30,-4(r30)
10671  0000983c  4be00000	jr	r31
10672  00009840  54000000	nop
10673  00009844          	.endproc _QueueFirst
10674  00009844          	.align 2
10675  00009844          	.proc _QueueLast
10676  00009844          	.global _QueueLast
10677  00009844          	_QueueLast:
10678                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
10679  00009844  afbefffc	sw	-4(r29),r30; push fp
10680  00009848  001df020	add	r30,r0,r29; fp = sp
10681  0000984c  afbffff8	sw	-8(r29),r31; push ret addr
10682  00009850  2fbd0008	subui	r29,r29,#8; alloc local storage
10683  00009854  8fc10000	lw	r1,(r30)
10684  00009858  8c210004	lw	r1,4(r1)
10685  0000985c  8fdffff8	lw	r31,-8(r30)
10686  00009860  001ee820	add	r29,r0,r30
10687  00009864  8fdefffc	lw	r30,-4(r30)
10688  00009868  4be00000	jr	r31
10689  0000986c  54000000	nop
10690  00009870          	.endproc _QueueLast
10691  00009870          	.align 2
10692  00009870          	.proc _QueueInsertAfter
10693  00009870          	.global _QueueInsertAfter
10694  00009870          	_QueueInsertAfter:
10695                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
10696  00009870  afbefffc	sw	-4(r29),r30; push fp
10697  00009874  001df020	add	r30,r0,r29; fp = sp
10698  00009878  afbffff8	sw	-8(r29),r31; push ret addr
10699  0000987c  2fbd0010	subui	r29,r29,#16; alloc local storage
10700  00009880  afa20000	sw	0(r29),r2
10701  00009884  afa30004	sw	4(r29),r3
10702  00009888  8fc30000	lw	r3,(r30)
10703  0000988c  8fc20004	lw	r2,4(r30)
10704  00009890  8fc10008	lw	r1,8(r30)
10705  00009894  ac230008	sw	8(r1),r3
10706  00009898  ac220004	sw	4(r1),r2
10707  0000989c  8c5f0000	lw	r31,(r2)
10708  000098a0  ac3f0000	sw	(r1),r31
10709  000098a4  ac410000	sw	(r2),r1
10710  000098a8  8c220000	lw	r2,(r1)
10711  000098ac  ac410004	sw	4(r2),r1
10712  000098b0  8c610008	lw	r1,8(r3)
10713  000098b4  20210001	addi	r1,r1,#1
10714  000098b8  ac610008	sw	8(r3),r1
10715  000098bc  8fa20000	lw	r2,0(r29)
10716  000098c0  8fa30004	lw	r3,4(r29)
10717  000098c4  8fdffff8	lw	r31,-8(r30)
10718  000098c8  001ee820	add	r29,r0,r30
10719  000098cc  8fdefffc	lw	r30,-4(r30)
10720  000098d0  4be00000	jr	r31
10721  000098d4  54000000	nop
10722  000098d8          	.endproc _QueueInsertAfter
10723  000098d8          	.align 2
10724  000098d8          	.proc _QueueInsertFirst
10725  000098d8          	.global _QueueInsertFirst
10726  000098d8          	_QueueInsertFirst:
10727                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
10728  000098d8  afbefffc	sw	-4(r29),r30; push fp
10729  000098dc  001df020	add	r30,r0,r29; fp = sp
10730  000098e0  afbffff8	sw	-8(r29),r31; push ret addr
10731  000098e4  2fbd0010	subui	r29,r29,#16; alloc local storage
10732  000098e8  afa20000	sw	0(r29),r2
10733  000098ec  afa30004	sw	4(r29),r3
10734  000098f0  8fc30000	lw	r3,(r30)
10735  000098f4  8fc10004	lw	r1,4(r30)
10736  000098f8  ac230008	sw	8(r1),r3
10737  000098fc  ac230004	sw	4(r1),r3
10738  00009900  8c7f0000	lw	r31,(r3)
10739  00009904  ac3f0000	sw	(r1),r31
10740  00009908  ac610000	sw	(r3),r1
10741  0000990c  8c220000	lw	r2,(r1)
10742  00009910  ac410004	sw	4(r2),r1
10743  00009914  8c610008	lw	r1,8(r3)
10744  00009918  20210001	addi	r1,r1,#1
10745  0000991c  ac610008	sw	8(r3),r1
10746  00009920  8fa20000	lw	r2,0(r29)
10747  00009924  8fa30004	lw	r3,4(r29)
10748  00009928  8fdffff8	lw	r31,-8(r30)
10749  0000992c  001ee820	add	r29,r0,r30
10750  00009930  8fdefffc	lw	r30,-4(r30)
10751  00009934  4be00000	jr	r31
10752  00009938  54000000	nop
10753  0000993c          	.endproc _QueueInsertFirst
10754  0000993c          	.align 2
10755  0000993c          	.proc _QueueInsertLast
10756  0000993c          	.global _QueueInsertLast
10757  0000993c          	_QueueInsertLast:
10758                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
10759  0000993c  afbefffc	sw	-4(r29),r30; push fp
10760  00009940  001df020	add	r30,r0,r29; fp = sp
10761  00009944  afbffff8	sw	-8(r29),r31; push ret addr
10762  00009948  2fbd0010	subui	r29,r29,#16; alloc local storage
10763  0000994c  afa20000	sw	0(r29),r2
10764  00009950  afa30004	sw	4(r29),r3
10765  00009954  8fc30000	lw	r3,(r30)
10766  00009958  8fc10004	lw	r1,4(r30)
10767  0000995c  8c620004	lw	r2,4(r3)
10768  00009960  ac230008	sw	8(r1),r3
10769  00009964  ac220004	sw	4(r1),r2
10770  00009968  8c5f0000	lw	r31,(r2)
10771  0000996c  ac3f0000	sw	(r1),r31
10772  00009970  ac410000	sw	(r2),r1
10773  00009974  8c220000	lw	r2,(r1)
10774  00009978  ac410004	sw	4(r2),r1
10775  0000997c  8c610008	lw	r1,8(r3)
10776  00009980  20210001	addi	r1,r1,#1
10777  00009984  ac610008	sw	8(r3),r1
10778  00009988  8fa20000	lw	r2,0(r29)
10779  0000998c  8fa30004	lw	r3,4(r29)
10780  00009990  8fdffff8	lw	r31,-8(r30)
10781  00009994  001ee820	add	r29,r0,r30
10782  00009998  8fdefffc	lw	r30,-4(r30)
10783  0000999c  4be00000	jr	r31
10784  000099a0  54000000	nop
10785  000099a4          	.endproc _QueueInsertLast
10786  000099a4          	.align 2
10787  000099a4          	.proc _QueueRemove
10788  000099a4          	.global _QueueRemove
10789  000099a4          	_QueueRemove:
10790                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
10791  000099a4  afbefffc	sw	-4(r29),r30; push fp
10792  000099a8  001df020	add	r30,r0,r29; fp = sp
10793  000099ac  afbffff8	sw	-8(r29),r31; push ret addr
10794  000099b0  2fbd0010	subui	r29,r29,#16; alloc local storage
10795  000099b4  afa20000	sw	0(r29),r2
10796  000099b8  afa30004	sw	4(r29),r3
10797  000099bc  8fdf0000	lw	r31,(r30)
10798  000099c0  8fe10008	lw	r1,8(r31)
10799  000099c4  8c210008	lw	r1,8(r1)
10800  000099c8  6c210000	sgti	r1,r1,#0
10801  000099cc  1020002c	beqz	r1,L44_LF7
10802  000099d0  54000000	nop; not filled.
10803  000099d4  8fe10004	lw	r1,4(r31)
10804  000099d8  8fe30000	lw	r3,(r31)
10805  000099dc  ac230000	sw	(r1),r3
10806  000099e0  8fe10000	lw	r1,(r31)
10807  000099e4  8fe30004	lw	r3,4(r31)
10808  000099e8  ac230004	sw	4(r1),r3
10809  000099ec  8fe20008	lw	r2,8(r31)
10810  000099f0  8c410008	lw	r1,8(r2)
10811  000099f4  2021ffff	addi	r1,r1,#-1
10812  000099f8  ac410008	sw	8(r2),r1
10813  000099fc          	L44_LF7:
10814  000099fc  20030000	addi	r3,r0,#0
10815  00009a00  afe30000	sw	(r31),r3
10816  00009a04  8fa20000	lw	r2,0(r29)
10817  00009a08  8fa30004	lw	r3,4(r29)
10818  00009a0c  8fdffff8	lw	r31,-8(r30)
10819  00009a10  001ee820	add	r29,r0,r30
10820  00009a14  8fdefffc	lw	r30,-4(r30)
10821  00009a18  4be00000	jr	r31
10822  00009a1c  54000000	nop
10823  00009a20          	.endproc _QueueRemove
10824  00009a20          	.align 2
10825  00009a20          	.proc _QueueLength
10826  00009a20          	.global _QueueLength
10827  00009a20          	_QueueLength:
10828                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
10829  00009a20  afbefffc	sw	-4(r29),r30; push fp
10830  00009a24  001df020	add	r30,r0,r29; fp = sp
10831  00009a28  afbffff8	sw	-8(r29),r31; push ret addr
10832  00009a2c  2fbd0008	subui	r29,r29,#8; alloc local storage
10833  00009a30  8fc10000	lw	r1,(r30)
10834  00009a34  8c210008	lw	r1,8(r1)
10835  00009a38  8fdffff8	lw	r31,-8(r30)
10836  00009a3c  001ee820	add	r29,r0,r30
10837  00009a40  8fdefffc	lw	r30,-4(r30)
10838  00009a44  4be00000	jr	r31
10839  00009a48  54000000	nop
10840  00009a4c          	.endproc _QueueLength
10841  00009a4c          	.align 2
10842  00009a4c          	.proc _QueueEmpty
10843  00009a4c          	.global _QueueEmpty
10844  00009a4c          	_QueueEmpty:
10845                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
10846  00009a4c  afbefffc	sw	-4(r29),r30; push fp
10847  00009a50  001df020	add	r30,r0,r29; fp = sp
10848  00009a54  afbffff8	sw	-8(r29),r31; push ret addr
10849  00009a58  2fbd0008	subui	r29,r29,#8; alloc local storage
10850  00009a5c  8fc10000	lw	r1,(r30)
10851  00009a60  8c210008	lw	r1,8(r1)
10852  00009a64  60210000	seqi	r1,r1,#0
10853  00009a68  8fdffff8	lw	r31,-8(r30)
10854  00009a6c  001ee820	add	r29,r0,r30
10855  00009a70  8fdefffc	lw	r30,-4(r30)
10856  00009a74  4be00000	jr	r31
10857  00009a78  54000000	nop
10858  00009a7c          	.endproc _QueueEmpty
10859  00009a7c          	.data
10860  0001304f          	.align 2
10861  00013050          	LC0_LF7:
10862  00013050  50726f63	.ascii "Process #\000"
10862  00013054  65737320	
10862  00013058  2300    	
10863  0001305a          	.align 2
10864  0001305c          	LC1_LF7:
10865  0001305c  52756e6e	.ascii "Running process %d (iteration %d)!\n\000"
10865  00013060  696e6720	
10865  00013064  70726f63	
10865  00013068  65737320	
10865  0001306c  25642028	
10865  00013070  69746572	
10865  00013074  6174696f	
10865  00013078  6e202564	
10865  0001307c  29210a00	
10866  00013080          	.text
10867  00009a7c          	.align 2
10868  00009a7c          	.proc _doSomething_LF7
10869  00009a7c          	_doSomething_LF7:
10870                      ;  Function 'doSomething'; 80 bytes of locals, 7 regs to save.
10871  00009a7c  afbefffc	sw	-4(r29),r30; push fp
10872  00009a80  001df020	add	r30,r0,r29; fp = sp
10873  00009a84  afbffff8	sw	-8(r29),r31; push ret addr
10874  00009a88  2fbd0078	subui	r29,r29,#120; alloc local storage
10875  00009a8c  afa20000	sw	0(r29),r2
10876  00009a90  afa30004	sw	4(r29),r3
10877  00009a94  afa40008	sw	8(r29),r4
10878  00009a98  afa5000c	sw	12(r29),r5
10879  00009a9c  afa60010	sw	16(r29),r6
10880  00009aa0  afa70014	sw	20(r29),r7
10881  00009aa4  afa80018	sw	24(r29),r8
10882  00009aa8  8fc60000	lw	r6,(r30)
10883  00009aac  2001000a	addi	r1,r0,#10
10884  00009ab0  00c00035	movi2fp	f0,r6
10885  00009ab4  00200835	movi2fp	f1,r1
10886  00009ab8  0401000f	div	f0,f0,f1
10887  00009abc  00001034	movfp2i	r2,f0
10888  00009ac0  50410002	slli	r1,r2,#0x2
10889  00009ac4  00220820	add	r1,r1,r2
10890  00009ac8  50210001	slli	r1,r1,#0x1
10891  00009acc  00c13822	sub	r7,r6,r1
10892  00009ad0  70c10063	slei	r1,r6,#99
10893  00009ad4  102000d4	beqz	r1,L52_LF7
10894  00009ad8  54000000	nop; not filled.
10895  00009adc  23bdfff8	addi	r29,r29,#-8
10896  00009ae0  50e10004	slli	r1,r7,#0x4
10897  00009ae4  3c080001	lhi	r8,((_mysems_LF7)>>16)&0xffff
10898  00009ae8  250830f4	addui	r8,r8,(_mysems_LF7)&0xffff
10899  00009aec  00280820	add	r1,r1,r8
10900  00009af0  afa10000	sw	(r29),r1
10901  00009af4  20080001	addi	r8,r0,#1
10902  00009af8  afa80004	sw	4(r29),r8
10903  00009afc  0fffe2d0	jal	_SemInit
10904  00009b00  54000000	nop; not filled.
10905  00009b04  20030001	addi	r3,r0,#1
10906  00009b08  23bd0008	addi	r29,r29,#8
10907  00009b0c  23c4ffd0	addi	r4,r30,#-48
10908  00009b10  23c5ffa8	addi	r5,r30,#-88
10909  00009b14  00061020	add	r2,r0,r6
10910  00009b18          	L56_LF7:
10911  00009b18  23bdfff8	addi	r29,r29,#-8
10912  00009b1c  afa40000	sw	(r29),r4
10913  00009b20  3c080001	lhi	r8,((LC0_LF7)>>16)&0xffff
10914  00009b24  25083050	addui	r8,r8,(LC0_LF7)&0xffff
10915  00009b28  afa80004	sw	4(r29),r8
10916  00009b2c  0fff9b2c	jal	_dstrcpy
10917  00009b30  54000000	nop; not filled.
10918  00009b34  afa30000	sw	(r29),r3
10919  00009b38  afa50004	sw	4(r29),r5
10920  00009b3c  0fffa058	jal	_ditoa
10921  00009b40  54000000	nop; not filled.
10922  00009b44  afa40000	sw	(r29),r4
10923  00009b48  afa50004	sw	4(r29),r5
10924  00009b4c  0fff9bfc	jal	_dstrcat
10925  00009b50  54000000	nop; not filled.
10926  00009b54  23bdfff8	addi	r29,r29,#-8
10927  00009b58  3c080000	lhi	r8,((_doSomething_LF7)>>16)&0xffff
10928  00009b5c  25089a7c	addui	r8,r8,(_doSomething_LF7)&0xffff
10929  00009b60  afa80000	sw	(r29),r8
10930  00009b64  50410005	slli	r1,r2,#0x5
10931  00009b68  00220822	sub	r1,r1,r2
10932  00009b6c  50210002	slli	r1,r1,#0x2
10933  00009b70  00220820	add	r1,r1,r2
10934  00009b74  50210003	slli	r1,r1,#0x3
10935  00009b78  00260820	add	r1,r1,r6
10936  00009b7c  afa10004	sw	4(r29),r1
10937  00009b80  afa40008	sw	8(r29),r4
10938  00009b84  20080000	addi	r8,r0,#0
10939  00009b88  afa8000c	sw	12(r29),r8
10940  00009b8c  0fffb5fc	jal	_ProcessFork
10941  00009b90  54000000	nop; not filled.
10942  00009b94  23bd0010	addi	r29,r29,#16
10943  00009b98  00461020	add	r2,r2,r6
10944  00009b9c  20630001	addi	r3,r3,#1
10945  00009ba0  70610006	slei	r1,r3,#6
10946  00009ba4  1420ff70	bnez	r1,L56_LF7
10947  00009ba8  54000000	nop; not filled.
10948  00009bac          	L52_LF7:
10949  00009bac  23bdfff8	addi	r29,r29,#-8
10950  00009bb0  50e10004	slli	r1,r7,#0x4
10951  00009bb4  3c080001	lhi	r8,((_mysems_LF7)>>16)&0xffff
10952  00009bb8  250830f4	addui	r8,r8,(_mysems_LF7)&0xffff
10953  00009bbc  00280820	add	r1,r1,r8
10954  00009bc0  afa10000	sw	(r29),r1
10955  00009bc4  0fffe25c	jal	_SemWait
10956  00009bc8  54000000	nop; not filled.
10957  00009bcc  20030000	addi	r3,r0,#0
10958  00009bd0  23bd0008	addi	r29,r29,#8
10959  00009bd4  50c20001	slli	r2,r6,#0x1
10960  00009bd8  0062082a	slt	r1,r3,r2
10961  00009bdc  10200070	beqz	r1,L59_LF7
10962  00009be0  54000000	nop; not filled.
10963  00009be4  200503e8	addi	r5,r0,#1000
10964  00009be8  00022020	add	r4,r0,r2
10965  00009bec          	L61_LF7:
10966  00009bec  00600035	movi2fp	f0,r3
10967  00009bf0  00a00835	movi2fp	f1,r5
10968  00009bf4  0401000f	div	f0,f0,f1
10969  00009bf8  00001034	movfp2i	r2,f0
10970  00009bfc  50410005	slli	r1,r2,#0x5
10971  00009c00  00220822	sub	r1,r1,r2
10972  00009c04  50210002	slli	r1,r1,#0x2
10973  00009c08  00220820	add	r1,r1,r2
10974  00009c0c  50210003	slli	r1,r1,#0x3
10975  00009c10  00610829	sne	r1,r3,r1
10976  00009c14  14200028	bnez	r1,L62_LF7
10977  00009c18  54000000	nop; not filled.
10978  00009c1c  23bdfff0	addi	r29,r29,#-16
10979  00009c20  3c080001	lhi	r8,((LC1_LF7)>>16)&0xffff
10980  00009c24  2508305c	addui	r8,r8,(LC1_LF7)&0xffff
10981  00009c28  afa80000	sw	(r29),r8
10982  00009c2c  afa60004	sw	4(r29),r6
10983  00009c30  afa30008	sw	8(r29),r3
10984  00009c34  0c0005c0	jal	_printf
10985  00009c38  54000000	nop; not filled.
10986  00009c3c  23bd0010	addi	r29,r29,#16
10987  00009c40          	L62_LF7:
10988  00009c40  20630001	addi	r3,r3,#1
10989  00009c44  0064082a	slt	r1,r3,r4
10990  00009c48  1420ffa0	bnez	r1,L61_LF7
10991  00009c4c  54000000	nop; not filled.
10992  00009c50          	L59_LF7:
10993  00009c50  23bdfff8	addi	r29,r29,#-8
10994  00009c54  50e10004	slli	r1,r7,#0x4
10995  00009c58  3c080001	lhi	r8,((_mysems_LF7)>>16)&0xffff
10996  00009c5c  250830f4	addui	r8,r8,(_mysems_LF7)&0xffff
10997  00009c60  00280820	add	r1,r1,r8
10998  00009c64  afa10000	sw	(r29),r1
10999  00009c68  0fffe434	jal	_SemSignal
11000  00009c6c  54000000	nop; not filled.
11001  00009c70  23bd0008	addi	r29,r29,#8
11002  00009c74  8fa20000	lw	r2,0(r29)
11003  00009c78  8fa30004	lw	r3,4(r29)
11004  00009c7c  8fa40008	lw	r4,8(r29)
11005  00009c80  8fa5000c	lw	r5,12(r29)
11006  00009c84  8fa60010	lw	r6,16(r29)
11007  00009c88  8fa70014	lw	r7,20(r29)
11008  00009c8c  8fa80018	lw	r8,24(r29)
11009  00009c90  8fdffff8	lw	r31,-8(r30)
11010  00009c94  001ee820	add	r29,r0,r30
11011  00009c98  8fdefffc	lw	r30,-4(r30)
11012  00009c9c  4be00000	jr	r31
11013  00009ca0  54000000	nop
11014  00009ca4          	.endproc _doSomething_LF7
11015  00009ca4          	.data
11016  00013080          	.align 2
11017  00013080          	LC2_LF7:
11018  00013080  63686173	.ascii "chasetail\000"
11018  00013084  65746169	
11018  00013088  6c00    	
11019  0001308a          	.align 2
11020  0001308c          	LC3_LF7:
11021  0001308c  43686173	.ascii "Chasing tail %d.\n\000"
11021  00013090  696e6720	
11021  00013094  7461696c	
11021  00013098  2025642e	
11021  0001309c  0a00    	
11022  0001309e          	.align 2
11023  000130a0          	LC4_LF7:
11024  000130a0  4f70656e	.ascii "Open of (%s,0x%x) returns 0x%x.\n\000"
11024  000130a4  206f6620	
11024  000130a8  2825732c	
11024  000130ac  30782578	
11024  000130b0  29207265	
11024  000130b4  7475726e	
11024  000130b8  73203078	
11024  000130bc  25782e0a	
11024  000130c0  00      	
11025  000130c1          	.align 2
11026  000130c4          	LC5_LF7:
11027  000130c4  43686173	.ascii "ChaseTail\000"
11027  000130c8  65546169	
11027  000130cc  6c00    	
11028  000130ce          	.text
11029  00009ca4          	.align 2
11030  00009ca4          	.proc _chaseTail_LF7
11031  00009ca4          	_chaseTail_LF7:
11032                      ;  Function 'chaseTail'; 0 bytes of locals, 4 regs to save.
11033  00009ca4  afbefffc	sw	-4(r29),r30; push fp
11034  00009ca8  001df020	add	r30,r0,r29; fp = sp
11035  00009cac  afbffff8	sw	-8(r29),r31; push ret addr
11036  00009cb0  2fbd0018	subui	r29,r29,#24; alloc local storage
11037  00009cb4  afa20000	sw	0(r29),r2
11038  00009cb8  afa30004	sw	4(r29),r3
11039  00009cbc  afa40008	sw	8(r29),r4
11040  00009cc0  afa5000c	sw	12(r29),r5
11041  00009cc4  8fc40000	lw	r4,(r30)
11042  00009cc8  3c030001	lhi	r3,((LC2_LF7)>>16)&0xffff
11043  00009ccc  24633080	addui	r3,r3,(LC2_LF7)&0xffff
11044  00009cd0  23bdfff8	addi	r29,r29,#-8
11045  00009cd4  3c050001	lhi	r5,((LC3_LF7)>>16)&0xffff
11046  00009cd8  24a5308c	addui	r5,r5,(LC3_LF7)&0xffff
11047  00009cdc  afa50000	sw	(r29),r5
11048  00009ce0  afa40004	sw	4(r29),r4
11049  00009ce4  0c000510	jal	_printf
11050  00009ce8  54000000	nop; not filled.
11051  00009cec  afa30000	sw	(r29),r3
11052  00009cf0  20822000	addi	r2,r4,#8192
11053  00009cf4  afa20004	sw	4(r29),r2
11054  00009cf8  0c0004a8	jal	_Open
11055  00009cfc  54000000	nop; not filled.
11056  00009d00  23bdfff8	addi	r29,r29,#-8
11057  00009d04  3c050001	lhi	r5,((LC4_LF7)>>16)&0xffff
11058  00009d08  24a530a0	addui	r5,r5,(LC4_LF7)&0xffff
11059  00009d0c  afa50000	sw	(r29),r5
11060  00009d10  afa30004	sw	4(r29),r3
11061  00009d14  afa20008	sw	8(r29),r2
11062  00009d18  afa1000c	sw	12(r29),r1
11063  00009d1c  0c0004d8	jal	_printf
11064  00009d20  54000000	nop; not filled.
11065  00009d24  23bd0010	addi	r29,r29,#16
11066  00009d28  70810027	slei	r1,r4,#39
11067  00009d2c  1020003c	beqz	r1,L67_LF7
11068  00009d30  54000000	nop; not filled.
11069  00009d34  23bdfff0	addi	r29,r29,#-16
11070  00009d38  3c050000	lhi	r5,((_chaseTail_LF7)>>16)&0xffff
11071  00009d3c  24a59ca4	addui	r5,r5,(_chaseTail_LF7)&0xffff
11072  00009d40  afa50000	sw	(r29),r5
11073  00009d44  20810001	addi	r1,r4,#1
11074  00009d48  afa10004	sw	4(r29),r1
11075  00009d4c  3c050001	lhi	r5,((LC5_LF7)>>16)&0xffff
11076  00009d50  24a530c4	addui	r5,r5,(LC5_LF7)&0xffff
11077  00009d54  afa50008	sw	8(r29),r5
11078  00009d58  20050000	addi	r5,r0,#0
11079  00009d5c  afa5000c	sw	12(r29),r5
11080  00009d60  0fffb428	jal	_ProcessFork
11081  00009d64  54000000	nop; not filled.
11082  00009d68  23bd0010	addi	r29,r29,#16
11083  00009d6c          	L67_LF7:
11084  00009d6c  8fa20000	lw	r2,0(r29)
11085  00009d70  8fa30004	lw	r3,4(r29)
11086  00009d74  8fa40008	lw	r4,8(r29)
11087  00009d78  8fa5000c	lw	r5,12(r29)
11088  00009d7c  8fdffff8	lw	r31,-8(r30)
11089  00009d80  001ee820	add	r29,r0,r30
11090  00009d84  8fdefffc	lw	r30,-4(r30)
11091  00009d88  4be00000	jr	r31
11092  00009d8c  54000000	nop
11093  00009d90          	.endproc _chaseTail_LF7
11094  00009d90          	.data
11095  000130ce          	.align 2
11096  000130d0          	LC6_LF7:
11097  000130d0  25642000	.ascii "%d \000"
11098  000130d4          	.align 2
11099  000130d4          	LC7_LF7:
11100  000130d4  52616e64	.ascii "Random number %02i is 0x%08x.\n\000"
11100  000130d8  6f6d206e	
11100  000130dc  756d6265	
11100  000130e0  72202530	
11100  000130e4  32692069	
11100  000130e8  73203078	
11100  000130ec  25303878	
11100  000130f0  2e0a00  	
11101  000130f3          	.text
11102  00009d90          	.align 2
11103  00009d90          	.proc _SysprocCreateProcesses
11104  00009d90          	.global _SysprocCreateProcesses
11105  00009d90          	_SysprocCreateProcesses:
11106                      ;  Function 'SysprocCreateProcesses'; 0 bytes of locals, 3 regs to save.
11107  00009d90  afbefffc	sw	-4(r29),r30; push fp
11108  00009d94  001df020	add	r30,r0,r29; fp = sp
11109  00009d98  afbffff8	sw	-8(r29),r31; push ret addr
11110  00009d9c  2fbd0018	subui	r29,r29,#24; alloc local storage
11111  00009da0  afa20000	sw	0(r29),r2
11112  00009da4  afa30004	sw	4(r29),r3
11113  00009da8  afa40008	sw	8(r29),r4
11114  00009dac  3c020001	lhi	r2,((_mysems_LF7)>>16)&0xffff
11115  00009db0  244230f4	addui	r2,r2,(_mysems_LF7)&0xffff
11116  00009db4  20430090	addi	r3,r2,#144
11117  00009db8          	L102_LF7:
11118  00009db8  23bdfff8	addi	r29,r29,#-8
11119  00009dbc  afa20000	sw	(r29),r2
11120  00009dc0  20040001	addi	r4,r0,#1
11121  00009dc4  afa40004	sw	4(r29),r4
11122  00009dc8  0fffe004	jal	_SemInit
11123  00009dcc  54000000	nop; not filled.
11124  00009dd0  23bd0008	addi	r29,r29,#8
11125  00009dd4  20420010	addi	r2,r2,#16
11126  00009dd8  0043082c	sle	r1,r2,r3
11127  00009ddc  1420ffd8	bnez	r1,L102_LF7
11128  00009de0  54000000	nop; not filled.
11129  00009de4  8fa20000	lw	r2,0(r29)
11130  00009de8  8fa30004	lw	r3,4(r29)
11131  00009dec  8fa40008	lw	r4,8(r29)
11132  00009df0  8fdffff8	lw	r31,-8(r30)
11133  00009df4  001ee820	add	r29,r0,r30
11134  00009df8  8fdefffc	lw	r30,-4(r30)
11135  00009dfc  4be00000	jr	r31
11136  00009e00  54000000	nop
11137  00009e04          	.endproc _SysprocCreateProcesses
11138  00009e04          	.data
11139  000130f3          	.align 2
11140  000130f4          	_mysems_LF7:
11141  000130f4          	.space 160
11142                      ;;; This file just includes a single variable that contains the last address
11143                      ;;; in the operating system.  The rest of memory is available for use by
11144                      ;;; processes.
11146  00013194          	.align 2
11147  00013194          	.global _lastosaddress
11148  00013194          	_lastosaddress:
11149  00013194  0001319c	.word _lastosaddress+8
11150                      ;
11151                      ; Stub functions for DLX traps.
11152                      ;
11153                      ; Aaron Sawdey 1996; released to the Public Domain.
11154                      ;
11155  00013198          	.text
11156  00009e04          	.align 2
11157  00009e04          	.proc _random
11158  00009e04          	.global _random
11159  00009e04          	_random:
11160  00009e04  44002020	trap	#0x2020
11161  00009e08  4be00000	jr	r31
11162  00009e0c  54000000	nop
11163  00009e10          	.endproc _random
11165  00009e10          	.proc _srandom
11166  00009e10          	.global _srandom
11167  00009e10          	_srandom:
11168  00009e10  44002021	trap	#0x2021
11169  00009e14  4be00000	jr	r31
11170  00009e18  54000000	nop
11171  00009e1c          	.endproc _srandom
11172                      ;;; 
11173                      ;;; Initialization code for programs running in the DLX simulator.
11174                      ;;; Copyright (c) 1999 by Ethan Miller
11175                      ;;; 
11176                      ;;;
11179  00009e1c          	.align 2
11181                      ;;;----------------------------------------------------------------------
11182                      ;;; osinit
11183                      ;;;
11184                      ;;; This is the first function called by the simulator, even before main.
11185                      ;;; Since it's called BEFORE any "real" routines, we can use any registers
11186                      ;;; we want as long as we don't mess up the stack or frame pointers.
11187                      ;;;
11188                      ;;; This routine loads the interrupt vector to point to the interrupt
11189                      ;;; handler later in this file.  It should never return, because _main
11190                      ;;; should call exitsim() or exit() rather than returning here.
11191                      ;;; 
11192                      ;;; After initialization is done, this routine jumps to _main to start the
11193                      ;;; C code portion of the operating system.
11194                      ;;;----------------------------------------------------------------------
11195  00009e1c          	.proc _osinit
11196  00009e1c          	.global _osinit
11197  00009e1c          	_osinit:
11198                      ;; Set up the interrupt handler
11199  00009e1c  3c010000	lhi	r1,(_intrhandler>>16)&0xffff
11200  00009e20  24219e2c	addui	r1,r1,_intrhandler&0xffff
11201  00009e24  00204030	movi2s	intrvec,r1
11202                      ;; Never returns because exitsim is called first
11203  00009e28  0bffc9f0	j	_main
11204  00009e2c          	.endproc _osinit
11206                      ;;;----------------------------------------------------------------------
11207                      ;;; intrhandler
11208                      ;;;
11209                      ;;; Called when an interrupt or trap is received by the CPU.  It stores the
11210                      ;;; current register set on the system stack.  It then pushes the parameters
11211                      ;;; to the C interrupt handler onto the stack: the ISR, IAR, and CAUSE
11212                      ;;; registers along with the original stack pointer.  The C interrupt
11213                      ;;; handler can then copy arguments from the original stack, performing
11214                      ;;; user -> system translations if necessary.
11215                      ;;; 
11216                      ;;;----------------------------------------------------------------------
11217  00009e2c          	.proc _intrhandler
11218  00009e2c          	.global _intrhandler
11219  00009e2c          	_intrhandler:
11220                      ;; We can use r31 as scratch space because its value was saved in
11221                      ;; ir31.  However, we must save the "real" value of r31 on the
11222                      ;; stack.
11224                      ;; Always store the registers on the system stack.  This way, we don't
11225                      ;; have to worry about translating things from user -> system.  We
11226                      ;; use r31 as the base register because its value was saved in ir31.
11228                      ;; If this was a user process, load r29 with the current system
11229                      ;; stack pointer.  If it was a system process, just use the
11230                      ;; current stack pointer.
11231  00009e2c  0060f831	movs2i	r31,isr
11232  00009e30  33ff0040	andi	r31,r31,0x40
11233  00009e34  17e0001c	bnez	r31,intrSystem_LF10
11234  00009e38  3c1f0000	lhi	r31,(_currentPCB>>16)&0xffff
11235  00009e3c  27fffcf0	addui	r31,r31,_currentPCB&0xffff
11236  00009e40  8fff0000	lw	r31,(r31)
11237  00009e44  8fff0004	lw	r31,4(r31)
11238                      ;; Save the original (user) stack pointer
11239  00009e48  affdff48	sw	-184(r31),r29; we haven't yet bumped SP, and 156-340 = -184
11240                      ;; Copy the system stack pointer into r29 (current stack pointer)
11241  00009e4c  37fd0000	ori	r29,r31,0
11242  00009e50  10000004	beqz	r0,intrSaveReg_LF10; skip over the system part....
11243  00009e54          	intrSystem_LF10:
11244                      ;; Use the stack pointer we're already using
11245                      ;; Save r29 because we won't save it later
11246  00009e54  afbdff48	sw	-184(r29),r29; we haven't yet bumped SP, and 156-340 = -184
11247  00009e58          	intrSaveReg_LF10:
11248                      ;; Adjust stack pointer for all the stuff we're going to push.  This
11249                      ;; is a bit more space than we need currently, but it leaves room
11250                      ;; for more stuff if needed.
11251  00009e58  2fbd0154	subui	r29,r29,#340
11252                      ;; Push all the stuff onto the stack
11253  00009e5c  afa1002c	sw	44(r29),r1
11254  00009e60  afa20030	sw	48(r29),r2
11255  00009e64  afa30034	sw	52(r29),r3
11256  00009e68  afa40038	sw	56(r29),r4
11257  00009e6c  afa5003c	sw	60(r29),r5
11258  00009e70  afa60040	sw	64(r29),r6
11259  00009e74  afa70044	sw	68(r29),r7
11260  00009e78  afa80048	sw	72(r29),r8
11261  00009e7c  afa9004c	sw	76(r29),r9
11262  00009e80  afaa0050	sw	80(r29),r10
11263  00009e84  afab0054	sw	84(r29),r11
11264  00009e88  afac0058	sw	88(r29),r12
11265  00009e8c  afad005c	sw	92(r29),r13
11266  00009e90  afae0060	sw	96(r29),r14
11267  00009e94  afaf0064	sw	100(r29),r15
11268  00009e98  afb00068	sw	104(r29),r16
11269  00009e9c  afb1006c	sw	108(r29),r17
11270  00009ea0  afb20070	sw	112(r29),r18
11271  00009ea4  afb30074	sw	116(r29),r19
11272  00009ea8  afb40078	sw	120(r29),r20
11273  00009eac  afb5007c	sw	124(r29),r21
11274  00009eb0  afb60080	sw	128(r29),r22
11275  00009eb4  afb70084	sw	132(r29),r23
11276  00009eb8  afb80088	sw	136(r29),r24
11277  00009ebc  afb9008c	sw	140(r29),r25
11278  00009ec0  afba0090	sw	144(r29),r26
11279  00009ec4  afbb0094	sw	148(r29),r27
11280  00009ec8  afbc0098	sw	152(r29),r28
11281                      ;; Skip r29 - stored earlier!
11282  00009ecc  afbe00a0	sw	160(r29),r30
11283                      ;; Load the value of r31 from the special register and then save it
11284  00009ed0  00401831	movs2i	r3,ir31
11285  00009ed4  afa300a4	sw	164(r29),r3
11286                      ;; Store the floating-point registers
11287  00009ed8  bfa000a8	sd	168(r29),f0
11288  00009edc  bfa200b0	sd	176(r29),f2
11289  00009ee0  bfa400b8	sd	184(r29),f4
11290  00009ee4  bfa600c0	sd	192(r29),f6
11291  00009ee8  bfa800c8	sd	200(r29),f8
11292  00009eec  bfaa00d0	sd	208(r29),f10
11293  00009ef0  bfac00d8	sd	216(r29),f12
11294  00009ef4  bfae00e0	sd	224(r29),f14
11295  00009ef8  bfb000e8	sd	232(r29),f16
11296  00009efc  bfb200f0	sd	240(r29),f18
11297  00009f00  bfb400f8	sd	248(r29),f20
11298  00009f04  bfb60100	sd	256(r29),f22
11299  00009f08  bfb80108	sd	264(r29),f24
11300  00009f0c  bfba0110	sd	272(r29),f26
11301  00009f10  bfbc0118	sd	280(r29),f28
11302  00009f14  bfbe0120	sd	288(r29),f30
11303                      ;; NOTE: we don't save the interrupt vector register because it
11304                      ;; doesn't change from process to process.
11305                      ;; NOTE: we don't save the status register because most of the flags
11306                      ;; are the same from process to process if they're in the interrupt
11307                      ;; handler.  Of course, we DO save the ISR.
11308  00009f18  00802031	movs2i	r4,iar
11309  00009f1c  afa40128	sw	296(r29),r4
11310  00009f20  00602831	movs2i	r5,isr
11311  00009f24  afa5012c	sw	300(r29),r5
11312  00009f28  00c03031	movs2i	r6,cause
11313  00009f2c  afa60130	sw	304(r29),r6
11314  00009f30  01201831	movs2i	r3,fault
11315  00009f34  afa30134	sw	308(r29),r3
11316  00009f38  01801831	movs2i	r3,ptbase
11317  00009f3c  afa30138	sw	312(r29),r3
11318  00009f40  01a01831	movs2i	r3,ptsize
11319  00009f44  afa3013c	sw	316(r29),r3
11320  00009f48  01c01831	movs2i	r3,ptbits
11321  00009f4c  afa30140	sw	320(r29),r3
11323                      ;; Push the interrupt information onto the stack
11324  00009f50  afa60000	sw	0(r29),r6; push CAUSE
11325  00009f54  afa40004	sw	4(r29),r4; push IAR
11326  00009f58  afa50008	sw	8(r29),r5; push ISR
11327                      ;; Get the original stack pointer
11328  00009f5c  8fa1009c	lw	r1,156(r29)
11329  00009f60  afa1000c	sw	12(r29),r1
11330                      ;; Save the previous interrupt stack frame address in the current frame
11331  00009f64  3c010000	lhi	r1,(_currentPCB>>16)&0xffff
11332  00009f68  2421fcf0	addui	r1,r1,_currentPCB&0xffff
11333  00009f6c  8c210000	lw	r1,(r1)
11334  00009f70  8c220000	lw	r2,0(r1)
11335  00009f74  afa20028	sw	40(r29),r2
11336                      ;; Save this frame address in the PCB.  This is used so the OS can
11337                      ;; easily access the current interrupt save frame
11338  00009f78  ac3d0000	sw	0(r1),r29
11339                      ;; Call the "real" interrupt handler.  This will possibly switch
11340                      ;; contexts.  This call never returns; instead, a separate routine
11341                      ;; (_intrreturn) is called to return from interrupts after restoring
11342                      ;; the current context.
11343  00009f7c  0bffebec	j	_dointerrupt
11344  00009f80  54000000	nop
11345  00009f84          	.endproc _intrhandler
11347                      ;;;----------------------------------------------------------------------
11348                      ;;; intrreturn
11349                      ;;;
11350                      ;;; Return from an interrupt or trap.  This restores all of the previously
11351                      ;;; saved registers and then returns to where the program left off.  The
11352                      ;;; current contents of the registers are destroyed.  This routine uses
11353                      ;;; the saved interrupt frame pointer, so the stack pointer need not
11354                      ;;; be correct.  Note, though, that the register contents from the previous
11355                      ;;; process must have previously been saved - in other words, call this
11356                      ;;; routine from a trap or interrupt handler.
11357                      ;;;----------------------------------------------------------------------
11358  00009f84          	.proc _intrreturn
11359  00009f84          	.global _intrreturn
11360  00009f84          	_intrreturn:
11361                      ;; Disable interrupts - this routine must be atomic, and interrupts
11362                      ;; may not be currently disabled.  Don't worry about saving registers
11363                      ;; because we're about to reload them anyway.
11364  00009f84  0ffff72c	jal	_DisableIntrs
11365                      ;; Get our interrupt stack frame location and load it into the stack
11366                      ;; pointer.
11367  00009f88  3c010000	lhi	r1,(_currentPCB>>16)&0xffff
11368  00009f8c  2421fcf0	addui	r1,r1,_currentPCB&0xffff
11369  00009f90  8c210000	lw	r1,0(r1)
11370  00009f94  8c3d0000	lw	r29,0(r1)
11371                      ;; Get the previous interrupt stack frame location and make it the
11372                      ;; current interrupt save frame.
11373  00009f98  8fa20028	lw	r2,40(r29)
11374  00009f9c  ac220000	sw	0(r1),r2
11376                      ;; Reload the registers for the new process.  We don't have to
11377                      ;; load in the exact opposite order as long as we're careful to
11378                      ;; get the right values back in.
11379  00009fa0  8fa30128	lw	r3,296(r29)
11380  00009fa4  00602030	movi2s	iar,r3
11381  00009fa8  8fa3012c	lw	r3,300(r29)
11382  00009fac  00601830	movi2s	isr,r3
11383  00009fb0  8fa30130	lw	r3,304(r29)
11384  00009fb4  00603030	movi2s	cause,r3
11385  00009fb8  8fa30134	lw	r3,308(r29)
11386  00009fbc  00604830	movi2s	fault,r3
11387  00009fc0  8fa30138	lw	r3,312(r29)
11388  00009fc4  00606030	movi2s	ptbase,r3
11389  00009fc8  8fa3013c	lw	r3,316(r29)
11390  00009fcc  00606830	movi2s	ptsize,r3
11391  00009fd0  8fa30140	lw	r3,320(r29)
11392  00009fd4  00607030	movi2s	ptbits,r3
11394                      ;; Reload the floating point registers
11395  00009fd8  9fa000a8	ld	f0,168(r29)
11396  00009fdc  9fa200b0	ld	f2,176(r29)
11397  00009fe0  9fa400b8	ld	f4,184(r29)
11398  00009fe4  9fa600c0	ld	f6,192(r29)
11399  00009fe8  9fa800c8	ld	f8,200(r29)
11400  00009fec  9faa00d0	ld	f10,208(r29)
11401  00009ff0  9fac00d8	ld	f12,216(r29)
11402  00009ff4  9fae00e0	ld	f14,224(r29)
11403  00009ff8  9fb000e8	ld	f16,232(r29)
11404  00009ffc  9fb200f0	ld	f18,240(r29)
11405  0000a000  9fb400f8	ld	f20,248(r29)
11406  0000a004  9fb60100	ld	f22,256(r29)
11407  0000a008  9fb80108	ld	f24,264(r29)
11408  0000a00c  9fba0110	ld	f26,272(r29)
11409  0000a010  9fbc0118	ld	f28,280(r29)
11410  0000a014  9fbe0120	ld	f30,288(r29)
11412                      ;; Reload the integer registers.  We don't reload r0 because it's
11413                      ;; always 0.  We won't reload r29 here because we're using it as
11414                      ;; the stack pointer.  The same goes for r1, which we'll use as
11415                      ;; scratch so we can store r29.
11416                      ;; Skip r1 - restored later
11417  0000a018  8fa20030	lw	r2,48(r29)
11418  0000a01c  8fa30034	lw	r3,52(r29)
11419  0000a020  8fa40038	lw	r4,56(r29)
11420  0000a024  8fa5003c	lw	r5,60(r29)
11421  0000a028  8fa60040	lw	r6,64(r29)
11422  0000a02c  8fa70044	lw	r7,68(r29)
11423  0000a030  8fa80048	lw	r8,72(r29)
11424  0000a034  8fa9004c	lw	r9,76(r29)
11425  0000a038  8faa0050	lw	r10,80(r29)
11426  0000a03c  8fab0054	lw	r11,84(r29)
11427  0000a040  8fac0058	lw	r12,88(r29)
11428  0000a044  8fad005c	lw	r13,92(r29)
11429  0000a048  8fae0060	lw	r14,96(r29)
11430  0000a04c  8faf0064	lw	r15,100(r29)
11431  0000a050  8fb00068	lw	r16,104(r29)
11432  0000a054  8fb1006c	lw	r17,108(r29)
11433  0000a058  8fb20070	lw	r18,112(r29)
11434  0000a05c  8fb30074	lw	r19,116(r29)
11435  0000a060  8fb40078	lw	r20,120(r29)
11436  0000a064  8fb5007c	lw	r21,124(r29)
11437  0000a068  8fb60080	lw	r22,128(r29)
11438  0000a06c  8fb70084	lw	r23,132(r29)
11439  0000a070  8fb80088	lw	r24,136(r29)
11440  0000a074  8fb9008c	lw	r25,140(r29)
11441  0000a078  8fba0090	lw	r26,144(r29)
11442  0000a07c  8fbb0094	lw	r27,148(r29)
11443  0000a080  8fbc0098	lw	r28,152(r29)
11444                      ;; Skip r29 - restored later
11445  0000a084  8fbe00a0	lw	r30,160(r29)
11446  0000a088  8fbf00a4	lw	r31,164(r29)
11448  0000a08c  27bd0154	addui	r29,r29,#340
11449                      ;; Save the current value of the stack pointer after adjusting it
11450                      ;; Note that this will "destroy" the stack values below this interrupt
11451                      ;; stack frame.  This is exactly what we want!
11452  0000a090  ac3d0004	sw	4(r1),r29
11453  0000a094  37a10000	ori	r1,r29,#0
11454  0000a098  8c3dff48	lw	r29,-184(r1); 156-340 = -184
11455  0000a09c  8c21fed8	lw	r1,-296(r1); 44-340 = -296
11456  0000a0a0  40000000	rfe
11457  0000a0a4          	.endproc _intrreturn
11459                      ;;;----------------------------------------------------------------------
11460                      ;;; SetIntrs
11461                      ;;;
11462                      ;;; This routine sets the interrupt level to the value passed (0 -> all
11463                      ;;; interrupts enabled; 0xf -> all interrupts disabled).  It returns the
11464                      ;;; former value for the interrupt flags.
11465                      ;;;----------------------------------------------------------------------
11466  0000a0a4          	.proc _SetIntrs
11467  0000a0a4          	.global _SetIntrs
11468  0000a0a4          	_SetIntrs:
11469  0000a0a4  2fbd0010	subui	r29,r29,#16
11470  0000a0a8  afa2000c	sw	12(r29),r2; save r2
11471  0000a0ac  8fa20010	lw	r2,16(r29); Get the new interrupt level
11472  0000a0b0  3042000f	andi	r2,r2,#0x0f; Mask off interrupt levels
11473  0000a0b4  00a00831	movs2i	r1,status
11474  0000a0b8  afa10008	sw	8(r29),r1; Store the old interrupt values
11475  0000a0bc  3021fff0	andi	r1,r1,#0xfff0; Mask off old interrupt level
11476  0000a0c0  00410825	or	r1,r2,r1; OR in new interrupt level
11477  0000a0c4  00202830	movi2s	status,r1
11478  0000a0c8  8fa10008	lw	r1,8(r29); Get back the original interrupt level
11479  0000a0cc  3021000f	andi	r1,r1,#0x0f; Mask off all but interrupt levels
11480  0000a0d0  8fa2000c	lw	r2,12(r29); restore r2
11481  0000a0d4  27bd0010	addui	r29,r29,#16; restore stack pointer
11482  0000a0d8  4be00000	jr	r31
11483  0000a0dc  54000000	nop
11484  0000a0e0          	.endproc _SetIntrs
11486  0000a0e0          	.proc _CurrentIntrs
11487  0000a0e0          	.global _CurrentIntrs
11488  0000a0e0          	_CurrentIntrs:
11489  0000a0e0  00a00831	movs2i	r1,status
11490  0000a0e4  3021000f	andi	r1,r1,#0xf
11491  0000a0e8  4be00000	jr	r31
11492  0000a0ec  54000000	nop
11493  0000a0f0          	.endproc _CurrentIntrs
11494                      ;;;----------------------------------------------------------------------
11495                      ;;; _ProcessSleep
11496                      ;;;
11497                      ;;; If a context switch from elsewhere in the kernel is desired, take a
11498                      ;;; trap and call this routine from the trap handler.
11499                      ;;;----------------------------------------------------------------------
11500  0000a0f0          	.proc _ProcessSleep
11501  0000a0f0          	.global _ProcessSleep
11502  0000a0f0          	_ProcessSleep:
11503  0000a0f0  44000410	trap	#0x410; This is a process sleep trap
11504  0000a0f4  54000000	nop
11505  0000a0f8  4be00000	jr	r31
11506  0000a0fc  54000000	nop
11507  0000a100          	.endproc _ProcessSleep
11508                      ;;;
11509                      ;;; Stub functions for DLX traps.
11510                      ;;;
11511                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11512                      ;;;
11513                      ;;; The traps such as Open and Close
11514                      ;;; (note the capital letters) are for use by user programs.  The traps
11515                      ;;; with names such as open and close (lower case) are for use by the OS.
11516                      ;;;
11519  0000a100          	.align 2
11521                      ;;; The following are the traps to be used by user-level programs
11522                      ;;;
11524  0000a100          	.align 2
11525  0000a100          	.proc _Open
11526  0000a100          	.global _Open
11527  0000a100          	_Open:
11528                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
11529                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
11530                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
11531  0000a100  44000213	trap	#0x213
11532  0000a104  4be00000	jr	r31
11533  0000a108  54000000	nop
11534  0000a10c          	.endproc _Open
11536  0000a10c          	.proc _Close
11537  0000a10c          	.global _Close
11538  0000a10c          	_Close:
11539  0000a10c  44000214	trap	#0x214
11540  0000a110  4be00000	jr	r31
11541  0000a114  54000000	nop
11542  0000a118          	.endproc _Close
11544  0000a118          	.proc _Read
11545  0000a118          	.global _Read
11546  0000a118          	_Read:
11547  0000a118  44000210	trap	#0x210
11548  0000a11c  4be00000	jr	r31
11549  0000a120  54000000	nop
11550  0000a124          	.endproc _Read
11552  0000a124          	.proc _Write
11553  0000a124          	.global _Write
11554  0000a124          	_Write:
11555  0000a124  44000211	trap	#0x211
11556  0000a128  4be00000	jr	r31
11557  0000a12c  54000000	nop
11558  0000a130          	.endproc _Write
11560  0000a130          	.proc _Lseek
11561  0000a130          	.global _Lseek
11562  0000a130          	_Lseek:
11563  0000a130  44000212	trap	#0x212
11564  0000a134  4be00000	jr	r31
11565  0000a138  54000000	nop
11566  0000a13c          	.endproc _Lseek
11568  0000a13c          	.proc _Printf
11569  0000a13c          	.global _Printf
11570  0000a13c          	_Printf:
11571  0000a13c  44000201	trap	#0x201
11572  0000a140  4be00000	jr	r31
11573  0000a144  54000000	nop
11574  0000a148          	.endproc _Printf
11576  0000a148          	.proc _Getpid
11577  0000a148          	.global _Getpid
11578  0000a148          	_Getpid:
11579  0000a148  44000431	trap	#0x431
11580  0000a14c  4be00000	jr	r31
11581  0000a150  54000000	nop
11582  0000a154          	.endproc _Getpid
11585                      ;;; Ethan L. Miller, 1999.  Released to the public domain
11586                      ;;;
11587                      ;;; Most of the traps are called in files from libtraps.
11590  0000a154          	.align 2
11591  0000a154          	.proc _exit
11592  0000a154          	.global _exit
11593  0000a154          	_exit:
11594  0000a154  44000300	trap	#0x300
11595  0000a158  4be00000	jr	r31
11596  0000a15c  54000000	nop
11597  0000a160          	.endproc _exit
11599                      ; for the benefit of gcc.
11600  0000a160          	.proc ___main
11601  0000a160          	.global ___main
11602  0000a160          	___main:
11603  0000a160  4be00000	jr	r31
11604  0000a164  54000000	nop
11605  0000a168          	.endproc ___main
11606                      ;;;
11607                      ;;; Stub functions for DLX traps.
11608                      ;;;
11609                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11610                      ;;;
11611                      ;;; There are two sets of traps here.  The traps such as Open and Close
11612                      ;;; (note the capital letters) are for use by user programs.  The traps
11613                      ;;; with names such as open and close (lower case) are for use by the OS.
11614                      ;;;
11617  0000a168          	.align 2
11618  0000a168          	.proc _open
11619  0000a168          	.global _open
11620  0000a168          	_open:
11621  0000a168  44002013	trap	#0x2013
11622  0000a16c  4be00000	jr	r31
11623  0000a170  54000000	nop
11624  0000a174          	.endproc _open
11626  0000a174          	.proc _close
11627  0000a174          	.global _close
11628  0000a174          	_close:
11629  0000a174  44002014	trap	#0x2014
11630  0000a178  4be00000	jr	r31
11631  0000a17c  54000000	nop
11632  0000a180          	.endproc _close
11634  0000a180          	.proc _read
11635  0000a180          	.global _read
11636  0000a180          	_read:
11637  0000a180  44002010	trap	#0x2010
11638  0000a184  4be00000	jr	r31
11639  0000a188  54000000	nop
11640  0000a18c          	.endproc _read
11642  0000a18c          	.proc _write
11643  0000a18c          	.global _write
11644  0000a18c          	_write:
11645  0000a18c  44002011	trap	#0x2011
11646  0000a190  4be00000	jr	r31
11647  0000a194  54000000	nop
11648  0000a198          	.endproc _write
11650  0000a198          	.proc _lseek
11651  0000a198          	.global _lseek
11652  0000a198          	_lseek:
11653  0000a198  44002012	trap	#0x2012
11654  0000a19c  4be00000	jr	r31
11655  0000a1a0  54000000	nop
11656  0000a1a4          	.endproc _lseek
11658                      ;;; The following are the traps to be used by user-level programs
11659                      ;;;
11661  0000a1a4          	.align 2
11662  0000a1a4          	.proc _Open
11663  0000a1a4          	.global _Open
11664  0000a1a4          	_Open:
11665  0000a1a4  44000213	trap	#0x213
11666  0000a1a8  4be00000	jr	r31
11667  0000a1ac  54000000	nop
11668  0000a1b0          	.endproc _Open
11670  0000a1b0          	.proc _Close
11671  0000a1b0          	.global _Close
11672  0000a1b0          	_Close:
11673  0000a1b0  44000214	trap	#0x214
11674  0000a1b4  4be00000	jr	r31
11675  0000a1b8  54000000	nop
11676  0000a1bc          	.endproc _Close
11678  0000a1bc          	.proc _Read
11679  0000a1bc          	.global _Read
11680  0000a1bc          	_Read:
11681  0000a1bc  44000210	trap	#0x210
11682  0000a1c0  4be00000	jr	r31
11683  0000a1c4  54000000	nop
11684  0000a1c8          	.endproc _Read
11686  0000a1c8          	.proc _Write
11687  0000a1c8          	.global _Write
11688  0000a1c8          	_Write:
11689  0000a1c8  44000211	trap	#0x211
11690  0000a1cc  4be00000	jr	r31
11691  0000a1d0  54000000	nop
11692  0000a1d4          	.endproc _Write
11694  0000a1d4          	.proc _Lseek
11695  0000a1d4          	.global _Lseek
11696  0000a1d4          	_Lseek:
11697  0000a1d4  44000212	trap	#0x212
11698  0000a1d8  4be00000	jr	r31
11699  0000a1dc  54000000	nop
11700  0000a1e0          	.endproc _Lseek
11702                      ;;;
11703                      ;;; Stub functions for DLX traps.
11704                      ;;;
11705                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11706                      ;;;
11707                      ;;; There are two exit traps.  The first, _exitsim, actually exits the
11708                      ;;; simulator.  The second, _exit, simply calls a regular trap in the
11709                      ;;; DLX simulator, and would be suitable for a user program that wants
11710                      ;;; to signal the OS that it's exiting.
11711                      ;;;
11712                      ;;; IMPORTANT: all code that's run "native" on the simulator - OS code and
11713                      ;;; programs run without an OS - should call exitsim() rather than just
11714                      ;;; falling through to exit.
11715                      ;;;
11718  0000a1e0          	.align 2
11719  0000a1e0          	.proc _exitsim
11720  0000a1e0          	.global _exitsim
11721  0000a1e0          	_exitsim:
11722  0000a1e0  44002f00	trap	#0x2f00
11723  0000a1e4  4be00000	jr	r31
11724  0000a1e8  54000000	nop
11725  0000a1ec          	.endproc _exitsim
11727  0000a1ec          	.proc _exit
11728  0000a1ec          	.global _exit
11729  0000a1ec          	_exit:
11730  0000a1ec  44000300	trap	#0x300
11731  0000a1f0  4be00000	jr	r31
11732  0000a1f4  54000000	nop
11733  0000a1f8          	.endproc _exit
11735                      ;
11736                      ; Stub functions for DLX traps.
11737                      ;
11738                      ; Aaron Sawdey 1996; released to the Public Domain.
11739                      ;
11741  0000a1f8          	.proc _printf
11742  0000a1f8          	.global _printf
11743  0000a1f8          	_printf:
11744  0000a1f8  44002001	trap	#0x2001
11745  0000a1fc  4be00000	jr	r31
11746  0000a200  54000000	nop
11747  0000a204          	.endproc _printf
11749  0000a204          	.text
11750  0000a204          	.global _etext
11751  0000a204          	_etext:
11752  0000a204          	.align 3
11753  0000a208          	.data
11754  00013198          	.global _edata
11755  00013198          	_edata:
